<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/27/2017 11:59:20 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MT-LPT-0334"
  DTS:CreatorName="BETSSON\sldr01"
  DTS:DTSID="{DC6F75CB-179D-40FC-8019-F194A7D40D21}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadData"
  DTS:PackageType="5"
  DTS:VersionBuild="84"
  DTS:VersionGUID="{9FDB49D3-2BBC-4D59-9DF8-6B30726CD13E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4730BC44-8674-44B9-A567-555709429F72}"
      DTS:ObjectName=".\sql2016.SSIS_DataVerificationFreamwork">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.\sql2016;Initial Catalog=SSIS_DataVerificationFreamwork;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{376AE0CB-B709-4A06-969D-A7D82C0B447C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5214667-C311-4FC8-8597-8F5F15DE3B84}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionTime">
      <DTS:VariableValue
        DTS:DataType="7">6/7/2017 5:38:41 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{404DDDB1-D52B-4695-8A16-543B9DD06B42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F214E492-132D-4611-B241-629FD3F7BADA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4730BC44-8674-44B9-A567-555709429F72}"
          SQLTask:SqlStatementSource="EXEC [Internal].[LogStartExecution]&#xA;&#x9;&#x9;@ExecutionID = ?,&#xA;&#x9;&#x9;@ExecutionTime = ?,&#xA;&#x9;&#x9;@ServerExecutionID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@ExecutionID"
            SQLTask:DtsVariableName="User::ExecutionID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@ExecutionTime"
            SQLTask:DtsVariableName="User::ExecutionTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@ServerExecutionID"
            SQLTask:DtsVariableName="System::ServerExecutionID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{F1A60BDE-FE03-42F7-974B-3345E2F4A651}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{96647DAB-A0F4-4856-B211-F67373A39E45}"
        DTS:ObjectName="{96647DAB-A0F4-4856-B211-F67373A39E45}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::VerificationFreamworkOutputDirectory]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\test\ProfilerResults" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{235CDF29-53BF-45E4-8064-81871C8CEE08}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].Columns[IsWildCard]"
                          cachedDataType="bool"
                          cachedName="IsWildCard"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[IsWildCard]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[IsWildCard]"
                          dataType="bool"
                          name="IsWildCard" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnOutput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[CodePage]"
                          cachedDataType="i4"
                          cachedName="CodePage"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[CodePage]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[IsNullable]"
                          cachedDataType="bool"
                          cachedName="IsNullable"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[IsNullable]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[LCID]"
                          cachedDataType="i4"
                          cachedName="LCID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[LCID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[MaxLength]"
                          cachedDataType="i4"
                          cachedName="MaxLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Precision]"
                          cachedDataType="i4"
                          cachedName="Precision"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Precision]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Scale]"
                          cachedDataType="i4"
                          cachedName="Scale"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Scale]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[SqlDbType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="SqlDbType"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[SqlDbType]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[StringCompareOptions]"
                          cachedDataType="i4"
                          cachedName="StringCompareOptions"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[StringCompareOptions]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[CodePage]"
                          dataType="i4"
                          name="CodePage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[IsNullable]"
                          dataType="bool"
                          name="IsNullable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[LCID]"
                          dataType="i4"
                          name="LCID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          dataType="i4"
                          name="MaxLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Precision]"
                          dataType="i4"
                          name="Precision" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Scale]"
                          dataType="i4"
                          name="Scale" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[SqlDbType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="SqlDbType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[StringCompareOptions]"
                          dataType="i4"
                          name="StringCompareOptions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnValueDistributionProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnValueDistributionProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[FrequentValueThreshold]"
                          cachedDataType="decimal"
                          cachedName="FrequentValueThreshold"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[FrequentValueThreshold]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[Option]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Option"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Option]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[FrequentValueThreshold]"
                          dataType="numeric"
                          name="FrequentValueThreshold"
                          precision="28" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Option]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Option" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnLengthDistributionProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[IgnoreLeadingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreLeadingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[IgnoreTrailingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreTrailingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          dataType="bool"
                          name="IgnoreLeadingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          dataType="bool"
                          name="IgnoreTrailingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnNullRatioProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnNullRatioProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSource"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSource" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnPatternProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnPatternProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[Delimiters]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Delimiters"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Delimiters]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[MaxNumberOfPatterns]"
                          cachedDataType="i4"
                          cachedName="MaxNumberOfPatterns"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[MaxNumberOfPatterns]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[PercentageDataCoverageDesired]"
                          cachedDataType="i4"
                          cachedName="PercentageDataCoverageDesired"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[PercentageDataCoverageDesired]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[Symbols]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Symbols"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Symbols]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Delimiters]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Delimiters" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[MaxNumberOfPatterns]"
                          dataType="i4"
                          name="MaxNumberOfPatterns" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[PercentageDataCoverageDesired]"
                          dataType="i4"
                          name="PercentageDataCoverageDesired" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Symbols]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Symbols" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnStatisticsProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnStatisticsProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnLengthDistributionProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IgnoreLeadingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreLeadingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IgnoreTrailingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreTrailingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[MaxLength]"
                          cachedDataType="i4"
                          cachedName="MaxLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[MinLength]"
                          cachedDataType="i4"
                          cachedName="MinLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          dataType="bool"
                          name="IgnoreLeadingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          dataType="bool"
                          name="IgnoreTrailingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          dataType="i4"
                          name="MaxLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinLength]"
                          dataType="i4"
                          name="MinLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].Columns[Length]"
                          cachedDataType="i4"
                          cachedName="Length"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Length]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].Columns[Count]"
                          cachedDataType="i4"
                          cachedName="Count"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Length]"
                          dataType="i4"
                          name="Length" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          dataType="i4"
                          name="Count" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnNullRatioProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnNullRatioProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[NullCount]"
                          cachedDataType="i4"
                          cachedName="NullCount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[NullCount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[NullCount]"
                          dataType="i4"
                          name="NullCount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnPatternProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnPatternProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          dataType="wstr"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].Columns[RegexText]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="RegexText"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[RegexText]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].Columns[Frequency]"
                          cachedDataType="i4"
                          cachedName="Frequency"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[Frequency]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[RegexText]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="RegexText" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[Frequency]"
                          dataType="i4"
                          name="Frequency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnStatisticsProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnStatisticsProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MaxValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="MaxValue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxValue]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[Mean]"
                          cachedDataType="numeric"
                          cachedName="Mean"
                          cachedPrecision="18"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[Mean]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MeanSpecified]"
                          cachedDataType="bool"
                          cachedName="MeanSpecified"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MeanSpecified]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MinValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="MinValue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinValue]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[StdDev]"
                          cachedDataType="numeric"
                          cachedName="StdDev"
                          cachedPrecision="18"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDev]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[StdDevSpecified]"
                          cachedDataType="bool"
                          cachedName="StdDevSpecified"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDevSpecified]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="MaxValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[Mean]"
                          dataType="numeric"
                          name="Mean"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MeanSpecified]"
                          dataType="bool"
                          name="MeanSpecified" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="MinValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDev]"
                          dataType="numeric"
                          name="StdDev"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDevSpecified]"
                          dataType="bool"
                          name="StdDevSpecified" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnValueDistributionProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnValueDistributionProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[NumberOfDistinctValues]"
                          cachedDataType="i4"
                          cachedName="NumberOfDistinctValues"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDistinctValues]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDistinctValues]"
                          dataType="i4"
                          name="NumberOfDistinctValues" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].Columns[Value]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Value"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Value]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].Columns[Count]"
                          cachedDataType="i4"
                          cachedName="Count"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Value" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          dataType="i4"
                          name="Count" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfilerInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfilerInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].Columns[ProfilerMode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfilerMode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ProfilerMode]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].Columns[Timeout]"
                          cachedDataType="i4"
                          cachedName="Timeout"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[Timeout]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ProfilerMode]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfilerMode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[Timeout]"
                          dataType="i4"
                          name="Timeout" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataSource"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataSource"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataSource]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[DtsConnectionManagerID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DtsConnectionManagerID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[DtsConnectionManagerID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[DtsConnectionManagerID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DtsConnectionManagerID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 10"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 11"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 12"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 13"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 14"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 15"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 16"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 17"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 18"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 3"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 4"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 5"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 6"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 7"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 8"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 9"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="39">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using SC_06a0e3d5b2d54eeebee8bc439196c839;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    

    public override void CreateNewOutputRows()
    {

        string xml = File.ReadAllText(@"C:\test\ProfilerResults\DimCustomer.xml");
        var allProfilerResults = xml.ParseXML<DataProfile>();

        #region Data Profiler Input

        try
        {
            DataProfilerInputBuffer.AddRow();
            DataProfilerInputBuffer.ProfilerMode = allProfilerResults.DataProfileInput.ProfileMode;
            DataProfilerInputBuffer.Timeout = allProfilerResults.DataProfileInput.Timeout;
        } catch(Exception exc)
        {
            //throw exc;
        }

        #endregion

        #region Data Sources

        try
        {
            foreach (var x in allProfilerResults.DataSources)
            {
                try
                {
                    DataSourceBuffer.AddRow();
                    DataSourceBuffer.DtsConnectionManagerID = x.DtsConnectionManagerID;
                    DataSourceBuffer.ID = x.ID;
                    DataSourceBuffer.Name = x.Name;
                }
                catch (Exception exc)
                {
                    // throw exc;
                }
            }
        }
        catch (Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Inptut

        #region Data Profile Input Requests Column Length Distribution Profile Request

        try
        {
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.IgnoreLeadingSpace = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.IgnoreLeadingSpace;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.IgnoreTrailingSpace = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.IgnoreTrailingSpace;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Column.IsWildCard;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Table.Table;
        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Data Profile Input Requests Column Null Ratio Profile Request

        try
        {
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.DataSource = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Data Profile Input Requests Column Pattern Profile Request

        try
        {
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.Delimiters = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Delimiters;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.MaxNumberOfPatterns = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.MaxNumberOfPatterns;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.PercentageDataCoverageDesired = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.PercentageDataCoverageDesired;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.Symbols = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Symbols;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Table.Table;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        #endregion ColumnStatisticsProfileRequest

        #region Column Statistics Profile Request

        try
        {
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Column Value Distribution Profile Request

        try
        {
            ColumnValueDistributionProfileRequestBuffer.AddRow();
            ColumnValueDistributionProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.DataSourceID;
            ColumnValueDistributionProfileRequestBuffer.FrequentValueThreshold = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.FrequentValueThreshold;
            ColumnValueDistributionProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            ColumnValueDistributionProfileRequestBuffer.Option = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Option;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }




        #endregion

        #endregion

        #region Data Profile Output

        #region Data Profile Output Profiles Column Length Distribution Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnLengthDistributionProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IgnoreLeadingSpace = item.IgnoreLeadingSpace;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IgnoreTrailingSpace = item.IgnoreTrailingSpace;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.MaxLength = item.MaxLength;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.MinLength = item.MinLength;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    foreach (var childItem in item.LengthDistribution)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.AddRow();
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.Count = childItem.Count;
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.Length = childItem.Length;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                   }
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


            }
        }catch(Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Null Ratio Profile

        try
        {


            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnNullRatioProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.NullCount = item.NullCount;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }
              

            }
        }catch(Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Pattern Profile


        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnPatternProfile)
            {

                try
                {
                    DataProfileOutputProfilesColumnPatternProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnPatternProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnPatternProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnPatternProfileBuffer.ProfileRequestID = item.ProfileRequestID;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }



                try
                {
                    foreach (var childItem in item.TopRegexPatterns)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.AddRow();
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.Frequency = childItem.Frequency;
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.RegexText = childItem.RegexText;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                      }
                }catch(Exception exc)
                {
                    // throw exc;
                }

                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

            }
        }catch(Exception exc)
        {

        }

        #endregion

        #region Data Profile Output Profiles Column Statistics Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnStatisticsProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MaxValue = item.MaxValue;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.Mean = item.Mean;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MeanSpecified = item.MeanSpecified;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MinValue = item.MinValue;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.ProfileRequestID = item.ProfileRequestID;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.StdDev = item.StdDev;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.StdDevSpecified = item.StdDevSpecified;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }
          
            }
        }
        catch (Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Value Distribution Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnValueDistributionProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.NumberOfDistinctValues = item.NumberOfDistinctValues;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    foreach (var childItem in item.ValueDistribution)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.AddRow();
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.Count = childItem.Count;
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.Value = childItem.Value;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                     }
                }
                catch (Exception exc)
                {

                    // throw exc;
                }



                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


            }
        }
        catch (Exception exc)
        {

            // throw exc;
        }
        #endregion

        #endregion

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_06a0e3d5b2d54eeebee8bc439196c839.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{969ACC6C-4160-416E-9824-D68519DE4500}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_06a0e3d5b2d54eeebee8bc439196c839</RootNamespace>
    <AssemblyName>SC_06a0e3d5b2d54eeebee8bc439196c839</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataProfile.cs" />
    <Compile Include="HelperMethods.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class DataSourceBuffer: ScriptBuffer

{
    public DataSourceBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DtsConnectionManagerID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DtsConnectionManagerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Name
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnLengthDistributionProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnLengthDistributionProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreLeadingSpace
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IgnoreLeadingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreTrailingSpace
    {
        set
        {
            this[2] = value;
        }
    }
    public bool IgnoreTrailingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxLength
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MaxLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MinLength
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MinLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 Length
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Length_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Count
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Count_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnNullRatioProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnNullRatioProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 NullCount
    {
        set
        {
            this[2] = value;
        }
    }
    public bool NullCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnPatternProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnPatternProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RegexText
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RegexText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Frequency
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Frequency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnStatisticsProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnStatisticsProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MaxValue
    {
        set
        {
            this[2] = value;
        }
    }
    public bool MaxValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Mean
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Mean_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean MeanSpecified
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MeanSpecified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MinValue
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MinValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal StdDev
    {
        set
        {
            this[7] = value;
        }
    }
    public bool StdDev_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean StdDevSpecified
    {
        set
        {
            this[8] = value;
        }
    }
    public bool StdDevSpecified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnValueDistributionProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnValueDistributionProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 NumberOfDistinctValues
    {
        set
        {
            this[2] = value;
        }
    }
    public bool NumberOfDistinctValues_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Value
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Value_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Count
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Count_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnOutputBuffer: ScriptBuffer

{
    public ColumnOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CodePage
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CodePage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsNullable
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsNullable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 LCID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool LCID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxLength
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MaxLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Name
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Precision
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Precision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Scale
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Scale_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SqlDbType
    {
        set
        {
            this[7] = value;
        }
    }
    public bool SqlDbType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StringCompareOptions
    {
        set
        {
            this[8] = value;
        }
    }
    public bool StringCompareOptions_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class TableOutputBuffer: ScriptBuffer

{
    public TableOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Database
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Database_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DataSource
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DataSource_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowCount
    {
        set
        {
            this[2] = value;
        }
    }
    public bool RowCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Schema
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Schema_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Table
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Table_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnStatisticsProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnStatisticsProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnValueDistributionProfileRequestBuffer: ScriptBuffer

{
    public ColumnValueDistributionProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FrequentValueThreshold
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FrequentValueThreshold_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Option
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Option_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnPatternProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnPatternProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Delimiters
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Delimiters_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxNumberOfPatterns
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MaxNumberOfPatterns_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PercentageDataCoverageDesired
    {
        set
        {
            this[4] = value;
        }
    }
    public bool PercentageDataCoverageDesired_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Symbols
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Symbols_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnNullRatioProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnNullRatioProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DataSource
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DataSource_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class TableInputBuffer: ScriptBuffer

{
    public TableInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Schema
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Schema_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Table
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Table_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnInputBuffer: ScriptBuffer

{
    public ColumnInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsWildCard
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsWildCard_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreLeadingSpace
    {
        set
        {
            this[2] = value;
        }
    }
    public bool IgnoreLeadingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreTrailingSpace
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IgnoreTrailingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfilerInputBuffer: ScriptBuffer

{
    public DataProfilerInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ProfilerMode
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ProfilerMode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Timeout
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Timeout_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Settings.get_Default():SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Sett" +
    "ings")]

namespace SC_06a0e3d5b2d54eeebee8bc439196c839.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public DataSourceBuffer DataSourceBuffer;

    public DataProfileOutputProfilesColumnLengthDistributionProfileBuffer DataProfileOutputProfilesColumnLengthDistributionProfileBuffer;

    public DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer;

    public DataProfileOutputProfilesColumnNullRatioProfileBuffer DataProfileOutputProfilesColumnNullRatioProfileBuffer;

    public DataProfileOutputProfilesColumnPatternProfileBuffer DataProfileOutputProfilesColumnPatternProfileBuffer;

    public DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer;

    public DataProfileOutputProfilesColumnStatisticsProfileBuffer DataProfileOutputProfilesColumnStatisticsProfileBuffer;

    public DataProfileOutputProfilesColumnValueDistributionProfileBuffer DataProfileOutputProfilesColumnValueDistributionProfileBuffer;

    public DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer;

    public ColumnOutputBuffer ColumnOutputBuffer;

    public TableOutputBuffer TableOutputBuffer;

    public DataProfileInputRequestsColumnStatisticsProfileRequestBuffer DataProfileInputRequestsColumnStatisticsProfileRequestBuffer;

    public ColumnValueDistributionProfileRequestBuffer ColumnValueDistributionProfileRequestBuffer;

    public DataProfileInputRequestsColumnPatternProfileRequestBuffer DataProfileInputRequestsColumnPatternProfileRequestBuffer;

    public DataProfileInputRequestsColumnNullRatioProfileRequestBuffer DataProfileInputRequestsColumnNullRatioProfileRequestBuffer;

    public TableInputBuffer TableInputBuffer;

    public ColumnInputBuffer ColumnInputBuffer;

    public DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer;

    public DataProfilerInputBuffer DataProfilerInputBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != DataSourceBuffer)
        {
            DataSourceBuffer.SetEndOfRowset();
            DataSourceBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnLengthDistributionProfileBuffer)
        {
            DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnLengthDistributionProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer)
        {
            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnNullRatioProfileBuffer)
        {
            DataProfileOutputProfilesColumnNullRatioProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnNullRatioProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnPatternProfileBuffer)
        {
            DataProfileOutputProfilesColumnPatternProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnPatternProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer)
        {
            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnStatisticsProfileBuffer)
        {
            DataProfileOutputProfilesColumnStatisticsProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnStatisticsProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnValueDistributionProfileBuffer)
        {
            DataProfileOutputProfilesColumnValueDistributionProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnValueDistributionProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer)
        {
            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer = null;
        }

        if (null != ColumnOutputBuffer)
        {
            ColumnOutputBuffer.SetEndOfRowset();
            ColumnOutputBuffer = null;
        }

        if (null != TableOutputBuffer)
        {
            TableOutputBuffer.SetEndOfRowset();
            TableOutputBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnStatisticsProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer = null;
        }

        if (null != ColumnValueDistributionProfileRequestBuffer)
        {
            ColumnValueDistributionProfileRequestBuffer.SetEndOfRowset();
            ColumnValueDistributionProfileRequestBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnPatternProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnPatternProfileRequestBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnNullRatioProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer = null;
        }

        if (null != TableInputBuffer)
        {
            TableInputBuffer.SetEndOfRowset();
            TableInputBuffer = null;
        }

        if (null != ColumnInputBuffer)
        {
            ColumnInputBuffer.SetEndOfRowset();
            ColumnInputBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer = null;
        }

        if (null != DataProfilerInputBuffer)
        {
            DataProfilerInputBuffer.SetEndOfRowset();
            DataProfilerInputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataSource"))
            {
                DataSourceBuffer = new DataSourceBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnLengthDistributionProfile"))
            {
                DataProfileOutputProfilesColumnLengthDistributionProfileBuffer = new DataProfileOutputProfilesColumnLengthDistributionProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"))
            {
                DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer = new DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnNullRatioProfile"))
            {
                DataProfileOutputProfilesColumnNullRatioProfileBuffer = new DataProfileOutputProfilesColumnNullRatioProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnPatternProfile"))
            {
                DataProfileOutputProfilesColumnPatternProfileBuffer = new DataProfileOutputProfilesColumnPatternProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"))
            {
                DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer = new DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnStatisticsProfile"))
            {
                DataProfileOutputProfilesColumnStatisticsProfileBuffer = new DataProfileOutputProfilesColumnStatisticsProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnValueDistributionProfile"))
            {
                DataProfileOutputProfilesColumnValueDistributionProfileBuffer = new DataProfileOutputProfilesColumnValueDistributionProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"))
            {
                DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer = new DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnOutput"))
            {
                ColumnOutputBuffer = new ColumnOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"TableOutput"))
            {
                TableOutputBuffer = new TableOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnStatisticsProfileRequest"))
            {
                DataProfileInputRequestsColumnStatisticsProfileRequestBuffer = new DataProfileInputRequestsColumnStatisticsProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnValueDistributionProfileRequest"))
            {
                ColumnValueDistributionProfileRequestBuffer = new ColumnValueDistributionProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnPatternProfileRequest"))
            {
                DataProfileInputRequestsColumnPatternProfileRequestBuffer = new DataProfileInputRequestsColumnPatternProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnNullRatioProfileRequest"))
            {
                DataProfileInputRequestsColumnNullRatioProfileRequestBuffer = new DataProfileInputRequestsColumnNullRatioProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"TableInput"))
            {
                TableInputBuffer = new TableInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnInput"))
            {
                ColumnInputBuffer = new ColumnInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnLengthDistributionProfileRequest"))
            {
                DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer = new DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfilerInput"))
            {
                DataProfilerInputBuffer = new DataProfilerInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String vCurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["vCurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_06a0e3d5b2d54eeebee8bc439196c839</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_06a0e3d5b2d54eeebee8bc439196c839</msb:DisplayName>
		<msb:ProjectId>{82252194-36B3-48E8-9BC3-4B14B836352D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_06a0e3d5b2d54eeebee8bc439196c839.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="DataProfile.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="HelperMethods.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_06a0e3d5b2d54eeebee8bc439196c839")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_06a0e3d5b2d54eeebee8bc439196c839")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_06a0e3d5b2d54eeebee8bc439196c839.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[DataProfilerHelpers.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/", IsNullable = false)]
    public partial class DataProfile
    {

        private decimal profileVersionField;

        private DataProfileDtsDataSource[] dataSourcesField;

        private DataProfileDataProfileInput dataProfileInputField;

        private DataProfileDataProfileOutput dataProfileOutputField;

        /// <remarks/>
        public decimal ProfileVersion
        {
            get
            {
                return this.profileVersionField;
            }
            set
            {
                this.profileVersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DtsDataSource", IsNullable = false)]
        public DataProfileDtsDataSource[] DataSources
        {
            get
            {
                return this.dataSourcesField;
            }
            set
            {
                this.dataSourcesField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInput DataProfileInput
        {
            get
            {
                return this.dataProfileInputField;
            }
            set
            {
                this.dataProfileInputField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutput DataProfileOutput
        {
            get
            {
                return this.dataProfileOutputField;
            }
            set
            {
                this.dataProfileOutputField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDtsDataSource
    {

        private string dtsConnectionManagerIDField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public string DtsConnectionManagerID
        {
            get
            {
                return this.dtsConnectionManagerIDField;
            }
            set
            {
                this.dtsConnectionManagerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInput
    {

        private string profileModeField;

        private byte timeoutField;

        private DataProfileDataProfileInputRequests requestsField;

        /// <remarks/>
        public string ProfileMode
        {
            get
            {
                return this.profileModeField;
            }
            set
            {
                this.profileModeField = value;
            }
        }

        /// <remarks/>
        public byte Timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequests Requests
        {
            get
            {
                return this.requestsField;
            }
            set
            {
                this.requestsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequests
    {

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest columnNullRatioProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest columnStatisticsProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest columnLengthDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest columnValueDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequest columnPatternProfileRequestField;

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest ColumnNullRatioProfileRequest
        {
            get
            {
                return this.columnNullRatioProfileRequestField;
            }
            set
            {
                this.columnNullRatioProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest ColumnStatisticsProfileRequest
        {
            get
            {
                return this.columnStatisticsProfileRequestField;
            }
            set
            {
                this.columnStatisticsProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest ColumnLengthDistributionProfileRequest
        {
            get
            {
                return this.columnLengthDistributionProfileRequestField;
            }
            set
            {
                this.columnLengthDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest ColumnValueDistributionProfileRequest
        {
            get
            {
                return this.columnValueDistributionProfileRequestField;
            }
            set
            {
                this.columnValueDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequest ColumnPatternProfileRequest
        {
            get
            {
                return this.columnPatternProfileRequestField;
            }
            set
            {
                this.columnPatternProfileRequestField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn columnField;

        private string optionField;

        private decimal frequentValueThresholdField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string Option
        {
            get
            {
                return this.optionField;
            }
            set
            {
                this.optionField = value;
            }
        }

        /// <remarks/>
        public decimal FrequentValueThreshold
        {
            get
            {
                return this.frequentValueThresholdField;
            }
            set
            {
                this.frequentValueThresholdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn columnField;

        private byte maxNumberOfPatternsField;

        private byte percentageDataCoverageDesiredField;

        private bool caseSensitiveField;

        private string delimitersField;

        private string symbolsField;

        private object tagDataSourceIdField;

        private object tagTableNameField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public byte MaxNumberOfPatterns
        {
            get
            {
                return this.maxNumberOfPatternsField;
            }
            set
            {
                this.maxNumberOfPatternsField = value;
            }
        }

        /// <remarks/>
        public byte PercentageDataCoverageDesired
        {
            get
            {
                return this.percentageDataCoverageDesiredField;
            }
            set
            {
                this.percentageDataCoverageDesiredField = value;
            }
        }

        /// <remarks/>
        public bool CaseSensitive
        {
            get
            {
                return this.caseSensitiveField;
            }
            set
            {
                this.caseSensitiveField = value;
            }
        }

        /// <remarks/>
        public string Delimiters
        {
            get
            {
                return this.delimitersField;
            }
            set
            {
                this.delimitersField = value;
            }
        }

        /// <remarks/>
        public string Symbols
        {
            get
            {
                return this.symbolsField;
            }
            set
            {
                this.symbolsField = value;
            }
        }

        /// <remarks/>
        public object TagDataSourceId
        {
            get
            {
                return this.tagDataSourceIdField;
            }
            set
            {
                this.tagDataSourceIdField = value;
            }
        }

        /// <remarks/>
        public object TagTableName
        {
            get
            {
                return this.tagTableNameField;
            }
            set
            {
                this.tagTableNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutput
    {

        private DataProfileDataProfileOutputProfiles profilesField;

        /// <remarks/>
        public DataProfileDataProfileOutputProfiles Profiles
        {
            get
            {
                return this.profilesField;
            }
            set
            {
                this.profilesField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfiles
    {

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] columnNullRatioProfileField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] columnStatisticsProfileField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] columnLengthDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] columnValueDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfile[] columnPatternProfileField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnNullRatioProfile")]
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] ColumnNullRatioProfile
        {
            get
            {
                return this.columnNullRatioProfileField;
            }
            set
            {
                this.columnNullRatioProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnStatisticsProfile")]
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] ColumnStatisticsProfile
        {
            get
            {
                return this.columnStatisticsProfileField;
            }
            set
            {
                this.columnStatisticsProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnLengthDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] ColumnLengthDistributionProfile
        {
            get
            {
                return this.columnLengthDistributionProfileField;
            }
            set
            {
                this.columnLengthDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnValueDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] ColumnValueDistributionProfile
        {
            get
            {
                return this.columnValueDistributionProfileField;
            }
            set
            {
                this.columnValueDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnPatternProfile")]
        public DataProfileDataProfileOutputProfilesColumnPatternProfile[] ColumnPatternProfile
        {
            get
            {
                return this.columnPatternProfileField;
            }
            set
            {
                this.columnPatternProfileField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn columnField;

        private ushort nullCountField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NullCount
        {
            get
            {
                return this.nullCountField;
            }
            set
            {
                this.nullCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private short rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn columnField;

        private string minValueField;

        private string maxValueField;

        private decimal meanField;

        private bool meanFieldSpecified;

        private decimal stdDevField;

        private bool stdDevFieldSpecified;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string MinValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                this.minValueField = value;
            }
        }

        /// <remarks/>
        public string MaxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                this.maxValueField = value;
            }
        }

        /// <remarks/>
        public decimal Mean
        {
            get
            {
                return this.meanField;
            }
            set
            {
                this.meanField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanSpecified
        {
            get
            {
                return this.meanFieldSpecified;
            }
            set
            {
                this.meanFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal StdDev
        {
            get
            {
                return this.stdDevField;
            }
            set
            {
                this.stdDevField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StdDevSpecified
        {
            get
            {
                return this.stdDevFieldSpecified;
            }
            set
            {
                this.stdDevFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private sbyte lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sbyte LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private byte minLengthField;

        private byte maxLengthField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] lengthDistributionField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        public byte MinLength
        {
            get
            {
                return this.minLengthField;
            }
            set
            {
                this.minLengthField = value;
            }
        }

        /// <remarks/>
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("LengthDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] LengthDistribution
        {
            get
            {
                return this.lengthDistributionField;
            }
            set
            {
                this.lengthDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem
    {

        private byte lengthField;

        private ushort countField;

        /// <remarks/>
        public byte Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn columnField;

        private ushort numberOfDistinctValuesField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] valueDistributionField;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NumberOfDistinctValues
        {
            get
            {
                return this.numberOfDistinctValuesField;
            }
            set
            {
                this.numberOfDistinctValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] ValueDistribution
        {
            get
            {
                return this.valueDistributionField;
            }
            set
            {
                this.valueDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem
    {

        private string valueField;

        private ushort countField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileColumn columnField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] topRegexPatternsField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("PatternDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] TopRegexPatterns
        {
            get
            {
                return this.topRegexPatternsField;
            }
            set
            {
                this.topRegexPatternsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem
    {

        private string regexTextField;

        private byte frequencyField;

        /// <remarks/>
        public string RegexText
        {
            get
            {
                return this.regexTextField;
            }
            set
            {
                this.regexTextField = value;
            }
        }

        /// <remarks/>
        public byte Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[HelperMethods.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Xml;
using System.Xml.Serialization;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    internal static class HelperMethods
    {
        private static JavaScriptSerializer json;
        private static JavaScriptSerializer JSON { get { return json ?? (json = new JavaScriptSerializer()); } }

        public static Stream ToStream(this string @this)
        {
            var stream = new MemoryStream();
            var writer = new StreamWriter(stream);
            writer.Write(@this);
            writer.Flush();
            stream.Position = 0;
            return stream;
        }


        public static T ParseXML<T>(this string @this) where T : class
        {
            var reader = XmlReader.Create(@this.Trim().ToStream(), new XmlReaderSettings() { ConformanceLevel = ConformanceLevel.Document });
            return new XmlSerializer(typeof(T)).Deserialize(reader) as T;
        }

        public static T ParseJSON<T>(this string @this) where T : class
        {
            return JSON.Deserialize<T>(@this.Trim());
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[DataProfile.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/", IsNullable = false)]
    public partial class DataProfile
    {

        private decimal profileVersionField;

        private DataProfileDtsDataSource[] dataSourcesField;

        private DataProfileDataProfileInput dataProfileInputField;

        private DataProfileDataProfileOutput dataProfileOutputField;

        /// <remarks/>
        public decimal ProfileVersion
        {
            get
            {
                return this.profileVersionField;
            }
            set
            {
                this.profileVersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DtsDataSource", IsNullable = false)]
        public DataProfileDtsDataSource[] DataSources
        {
            get
            {
                return this.dataSourcesField;
            }
            set
            {
                this.dataSourcesField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInput DataProfileInput
        {
            get
            {
                return this.dataProfileInputField;
            }
            set
            {
                this.dataProfileInputField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutput DataProfileOutput
        {
            get
            {
                return this.dataProfileOutputField;
            }
            set
            {
                this.dataProfileOutputField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDtsDataSource
    {

        private string dtsConnectionManagerIDField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public string DtsConnectionManagerID
        {
            get
            {
                return this.dtsConnectionManagerIDField;
            }
            set
            {
                this.dtsConnectionManagerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInput
    {

        private string profileModeField;

        private byte timeoutField;

        private DataProfileDataProfileInputRequests requestsField;

        /// <remarks/>
        public string ProfileMode
        {
            get
            {
                return this.profileModeField;
            }
            set
            {
                this.profileModeField = value;
            }
        }

        /// <remarks/>
        public byte Timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequests Requests
        {
            get
            {
                return this.requestsField;
            }
            set
            {
                this.requestsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequests
    {

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest columnNullRatioProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest columnStatisticsProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest columnLengthDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest columnValueDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequest columnPatternProfileRequestField;

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest ColumnNullRatioProfileRequest
        {
            get
            {
                return this.columnNullRatioProfileRequestField;
            }
            set
            {
                this.columnNullRatioProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest ColumnStatisticsProfileRequest
        {
            get
            {
                return this.columnStatisticsProfileRequestField;
            }
            set
            {
                this.columnStatisticsProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest ColumnLengthDistributionProfileRequest
        {
            get
            {
                return this.columnLengthDistributionProfileRequestField;
            }
            set
            {
                this.columnLengthDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest ColumnValueDistributionProfileRequest
        {
            get
            {
                return this.columnValueDistributionProfileRequestField;
            }
            set
            {
                this.columnValueDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequest ColumnPatternProfileRequest
        {
            get
            {
                return this.columnPatternProfileRequestField;
            }
            set
            {
                this.columnPatternProfileRequestField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn columnField;

        private string optionField;

        private decimal frequentValueThresholdField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string Option
        {
            get
            {
                return this.optionField;
            }
            set
            {
                this.optionField = value;
            }
        }

        /// <remarks/>
        public decimal FrequentValueThreshold
        {
            get
            {
                return this.frequentValueThresholdField;
            }
            set
            {
                this.frequentValueThresholdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn columnField;

        private byte maxNumberOfPatternsField;

        private byte percentageDataCoverageDesiredField;

        private bool caseSensitiveField;

        private string delimitersField;

        private string symbolsField;

        private object tagDataSourceIdField;

        private object tagTableNameField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public byte MaxNumberOfPatterns
        {
            get
            {
                return this.maxNumberOfPatternsField;
            }
            set
            {
                this.maxNumberOfPatternsField = value;
            }
        }

        /// <remarks/>
        public byte PercentageDataCoverageDesired
        {
            get
            {
                return this.percentageDataCoverageDesiredField;
            }
            set
            {
                this.percentageDataCoverageDesiredField = value;
            }
        }

        /// <remarks/>
        public bool CaseSensitive
        {
            get
            {
                return this.caseSensitiveField;
            }
            set
            {
                this.caseSensitiveField = value;
            }
        }

        /// <remarks/>
        public string Delimiters
        {
            get
            {
                return this.delimitersField;
            }
            set
            {
                this.delimitersField = value;
            }
        }

        /// <remarks/>
        public string Symbols
        {
            get
            {
                return this.symbolsField;
            }
            set
            {
                this.symbolsField = value;
            }
        }

        /// <remarks/>
        public object TagDataSourceId
        {
            get
            {
                return this.tagDataSourceIdField;
            }
            set
            {
                this.tagDataSourceIdField = value;
            }
        }

        /// <remarks/>
        public object TagTableName
        {
            get
            {
                return this.tagTableNameField;
            }
            set
            {
                this.tagTableNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutput
    {

        private DataProfileDataProfileOutputProfiles profilesField;

        /// <remarks/>
        public DataProfileDataProfileOutputProfiles Profiles
        {
            get
            {
                return this.profilesField;
            }
            set
            {
                this.profilesField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfiles
    {

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] columnNullRatioProfileField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] columnStatisticsProfileField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] columnLengthDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] columnValueDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfile[] columnPatternProfileField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnNullRatioProfile")]
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] ColumnNullRatioProfile
        {
            get
            {
                return this.columnNullRatioProfileField;
            }
            set
            {
                this.columnNullRatioProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnStatisticsProfile")]
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] ColumnStatisticsProfile
        {
            get
            {
                return this.columnStatisticsProfileField;
            }
            set
            {
                this.columnStatisticsProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnLengthDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] ColumnLengthDistributionProfile
        {
            get
            {
                return this.columnLengthDistributionProfileField;
            }
            set
            {
                this.columnLengthDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnValueDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] ColumnValueDistributionProfile
        {
            get
            {
                return this.columnValueDistributionProfileField;
            }
            set
            {
                this.columnValueDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnPatternProfile")]
        public DataProfileDataProfileOutputProfilesColumnPatternProfile[] ColumnPatternProfile
        {
            get
            {
                return this.columnPatternProfileField;
            }
            set
            {
                this.columnPatternProfileField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn columnField;

        private ushort nullCountField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NullCount
        {
            get
            {
                return this.nullCountField;
            }
            set
            {
                this.nullCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private short rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn columnField;

        private string minValueField;

        private string maxValueField;

        private decimal meanField;

        private bool meanFieldSpecified;

        private decimal stdDevField;

        private bool stdDevFieldSpecified;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string MinValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                this.minValueField = value;
            }
        }

        /// <remarks/>
        public string MaxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                this.maxValueField = value;
            }
        }

        /// <remarks/>
        public decimal Mean
        {
            get
            {
                return this.meanField;
            }
            set
            {
                this.meanField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanSpecified
        {
            get
            {
                return this.meanFieldSpecified;
            }
            set
            {
                this.meanFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal StdDev
        {
            get
            {
                return this.stdDevField;
            }
            set
            {
                this.stdDevField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StdDevSpecified
        {
            get
            {
                return this.stdDevFieldSpecified;
            }
            set
            {
                this.stdDevFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private sbyte lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sbyte LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private byte minLengthField;

        private byte maxLengthField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] lengthDistributionField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        public byte MinLength
        {
            get
            {
                return this.minLengthField;
            }
            set
            {
                this.minLengthField = value;
            }
        }

        /// <remarks/>
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("LengthDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] LengthDistribution
        {
            get
            {
                return this.lengthDistributionField;
            }
            set
            {
                this.lengthDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem
    {

        private byte lengthField;

        private ushort countField;

        /// <remarks/>
        public byte Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn columnField;

        private ushort numberOfDistinctValuesField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] valueDistributionField;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NumberOfDistinctValues
        {
            get
            {
                return this.numberOfDistinctValuesField;
            }
            set
            {
                this.numberOfDistinctValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] ValueDistribution
        {
            get
            {
                return this.valueDistributionField;
            }
            set
            {
                this.valueDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem
    {

        private string valueField;

        private ushort countField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileColumn columnField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] topRegexPatternsField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("PatternDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] TopRegexPatterns
        {
            get
            {
                return this.topRegexPatternsField;
            }
            set
            {
                this.topRegexPatternsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem
    {

        private string regexTextField;

        private byte frequencyField;

        /// <remarks/>
        public string RegexText
        {
            get
            {
                return this.regexTextField;
            }
            set
            {
                this.regexTextField = value;
            }
        }

        /// <remarks/>
        public byte Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }
    }

}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_06a0e3d5b2d54eeebee8bc439196c839.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACYMOFkAAAAAAAAAAOAAIiALATAAALoAAAAIAAAAAAAA5tkA
AAAgAAAA4AAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAAAgAQAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJTZAABPAAAAAOAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAAABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7LkAAAAgAAAAugAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAA4AAAAAYAAAC8AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAAABAAACAAAAwgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
2QAAAAAAAEgAAAACAAUANEwAAKiMAAABAAAAAAAAANzYAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBcAAAoqHgIoGAAACiobMAIAmRIAAAEAABFyAQAAcCgZ
AAAKKAEAACsKAnsVAAAEb+QAAAYCexUAAAQGb/MAAAZv/wAABm/gAAAGAnsVAAAEBm/zAAAGbwEB
AAZv4gAABt4DJt4AAAZv8QAABgsWDCtLBwiaDQJ7AwAABG8MAAAGAnsDAAAECW/4AAAGbwYAAAYC
ewMAAAQJb/oAAAZvCAAABgJ7AwAABAlv/AAABm8KAAAG3gMm3gAIF1gMCAeOaTKv3gMm3gAAAnsU
AAAEb9wAAAYCexQAAAQGb/MAAAZvAwEABm8KAQAGbzMBAAZv1AAABgJ7FAAABAZv8wAABm8DAQAG
bwoBAAZvPQEABm/WAAAGAnsUAAAEBm/zAAAGbwMBAAZvCgEABm85AQAGb9gAAAYCexQAAAQGb/MA
AAZvAwEABm8KAQAGbzsBAAZv2gAABt4DJt4AAAJ7EwAABG/QAAAGAnsTAAAEBm/zAAAGbwMBAAZv
CgEABm89AQAGb8wAAAYCexMAAAQGb/MAAAZvAwEABm8KAQAGbzcBAAZvRQEABm/OAAAG3gMm3gAA
AnsSAAAEb8gAAAYCexIAAAQGb/MAAAZvAwEABm8KAQAGbz0BAAZvwgAABgJ7EgAABAZv8wAABm8D
AQAGbwoBAAZvNQEABm9AAQAGb8QAAAYCexIAAAQGb/MAAAZvAwEABm8KAQAGbzUBAAZvQgEABm/G
AAAG3gMm3gAAAnsRAAAEb74AAAYCexEAAAQGb/MAAAZvAwEABm8GAQAGbxEBAAZvvAAABgJ7EQAA
BAZv8wAABm8DAQAGbwYBAAZvFwEABm+6AAAG3gMm3gAAAnsTAAAEb9AAAAYCexMAAAQGb/MAAAZv
AwEABm8GAQAGbxcBAAZvzAAABgJ7EwAABAZv8wAABm8DAQAGbwYBAAZvFQEABm8fAQAGb84AAAbe
AybeAAACexIAAARvyAAABgJ7EgAABAZv8wAABm8DAQAGbwYBAAZvFwEABm/CAAAGAnsSAAAEBm/z
AAAGbwMBAAZvBgEABm8TAQAGbxoBAAZvxAAABgJ7EgAABAZv8wAABm8DAQAGbwYBAAZvEwEABm8c
AQAGb8YAAAbeAybeAAACexAAAARvtgAABgJ7EAAABAZv8wAABm8DAQAGbw4BAAZvXQEABm+qAAAG
AnsQAAAEBm/zAAAGbwMBAAZvDgEABm9pAQAGb6wAAAYCexAAAAQGb/MAAAZvAwEABm8OAQAGb3EB
AAZvrgAABgJ7EAAABAZv8wAABm8DAQAGbw4BAAZvYwEABm+wAAAGAnsQAAAEBm/zAAAGbwMBAAZv
DgEABm9lAQAGb7IAAAYCexAAAAQGb/MAAAZvAwEABm8OAQAGb2sBAAZvtAAABt4DJt4AAAJ7EwAA
BG/QAAAGAnsTAAAEBm/zAAAGbwMBAAZvDgEABm9xAQAGb8wAAAYCexMAAAQGb/MAAAZvAwEABm8O
AQAGb2EBAAZveQEABm/OAAAG3gMm3gAAAnsSAAAEb8gAAAYCexIAAAQGb/MAAAZvAwEABm8OAQAG
b3EBAAZvwgAABgJ7EgAABAZv8wAABm8DAQAGbw4BAAZvXwEABm90AQAGb8QAAAYCexIAAAQGb/MA
AAZvAwEABm8OAQAGb18BAAZvdgEABm/GAAAG3gMm3gAAAnsOAAAEb5oAAAYCew4AAAQGb/MAAAZv
AwEABm8IAQAGbyIBAAZvlgAABgJ7DgAABAZv8wAABm8DAQAGbwgBAAZvKAEABm+YAAAG3gMm3gAA
AnsTAAAEb9AAAAYCexMAAAQGb/MAAAZvAwEABm8IAQAGbygBAAZvzAAABgJ7EwAABAZv8wAABm8D
AQAGbwgBAAZvJgEABm8wAQAGb84AAAbeAybeAAACexIAAARvyAAABgJ7EgAABAZv8wAABm8DAQAG
bwgBAAZvKAEABm/CAAAGAnsSAAAEBm/zAAAGbwMBAAZvCAEABm8kAQAGbysBAAZvxAAABgJ7EgAA
BAZv8wAABm8DAQAGbwgBAAZvJAEABm8tAQAGb8YAAAbeAybeAAACew8AAARvpgAABgJ7DwAABAZv
8wAABm8DAQAGbwwBAAZvSAEABm+eAAAGAnsPAAAEBm/zAAAGbwMBAAZvDAEABm9QAQAGb6AAAAYC
ew8AAAQGb/MAAAZvAwEABm8MAQAGb1IBAAZvogAABgJ7DwAABAZv8wAABm8DAQAGbwwBAAZvTgEA
Bm+kAAAG3gMm3gAAAnsTAAAEb9AAAAYCexMAAAQGb/MAAAZvAwEABm8MAQAGb1IBAAZvzAAABgJ7
EwAABAZv8wAABm8DAQAGbwwBAAZvTAEABm9aAQAGb84AAAbeAybeAAACexIAAARvyAAABgJ7EgAA
BAZv8wAABm8DAQAGbwwBAAZvUgEABm/CAAAGAnsSAAAEBm/zAAAGbwMBAAZvDAEABm9KAQAGb1UB
AAZvxAAABgJ7EgAABAZv8wAABm8DAQAGbwwBAAZvSgEABm9XAQAGb8YAAAbeAybeAAAGb/UAAAZv
fAEABm+DAQAGEwQWDDhZAgAAEQQImhMFAnsEAAAEbx4AAAYCewQAAAQRBW/qAQAGbxAAAAYCewQA
AAQRBW/wAQAGbxIAAAYCewQAAAQRBW/yAQAGbxQAAAYCewQAAAQRBW/8AQAGbxYAAAYCewQAAAQR
BW/2AQAGbxgAAAYCewQAAAQRBW/0AQAGbxoAAAYCewQAAAQRBW/6AQAGbxwAAAbeAybeAAARBW/4
AQAGEwYWEwcrQREGEQeaEwgCewUAAARvJgAABgJ7BQAABBEIbx8CAAZvJAAABgJ7BQAABBEIbx0C
AAZvIgAABt4DJt4AEQcXWBMHEQcRBo5pMrfeAybeAAACewwAAARvhAAABgJ7DAAABBEFb+4BAAZv
FgIABm9yAAAGAnsMAAAEEQVv7gEABm8YAgAGb3QAAAYCewwAAAQRBW/uAQAGbxQCAAZvdgAABgJ7
DAAABBEFb+4BAAZvDgIABm94AAAGAnsMAAAEEQVv7gEABm8KAgAGb3oAAAYCewwAAAQRBW/uAQAG
bxACAAZvfAAABgJ7DAAABBEFb+4BAAZvEgIABm9+AAAGAnsMAAAEEQVv7gEABm8MAgAGb4AAAAYC
ewwAAAQRBW/uAQAGbxoCAAZvggAABt4DJt4AAAJ7DQAABG+SAAAGAnsNAAAEEQVv7AEABm8BAgAG
b4gAAAYCew0AAAQRBW/sAQAGb/8BAAZvigAABgJ7DQAABBEFb+wBAAZvBwIABm+MAAAGAnsNAAAE
EQVv7AEABm8DAgAGb44AAAYCew0AAAQRBW/sAQAGbwUCAAZvkAAABt4DJt4ACBdYDAgRBI5pP539
///eAybeAAAGb/UAAAZvfAEABm9/AQAGEwkWDDjGAQAAEQkImhMKAnsGAAAEbzIAAAYCewYAAAQR
Cm+KAQAGbyoAAAYCewYAAAQRCm+UAQAGbywAAAYCewYAAAQRCm+QAQAGby4AAAYCewYAAAQRCm+S
AQAGbzAAAAbeAybeAAACewwAAARvhAAABgJ7DAAABBEKb44BAAZvrgEABm9yAAAGAnsMAAAEEQpv
jgEABm+wAQAGb3QAAAYCewwAAAQRCm+OAQAGb6wBAAZvdgAABgJ7DAAABBEKb44BAAZvpgEABm94
AAAGAnsMAAAEEQpvjgEABm+iAQAGb3oAAAYCewwAAAQRCm+OAQAGb6gBAAZvfAAABgJ7DAAABBEK
b44BAAZvqgEABm9+AAAGAnsMAAAEEQpvjgEABm+kAQAGb4AAAAYCewwAAAQRCm+OAQAGb7IBAAZv
ggAABt4DJt4AAAJ7DQAABG+SAAAGAnsNAAAEEQpvjAEABm+ZAQAGb4gAAAYCew0AAAQRCm+MAQAG
b5cBAAZvigAABgJ7DQAABBEKb4wBAAZvnwEABm+MAAAGAnsNAAAEEQpvjAEABm+bAQAGb44AAAYC
ew0AAAQRCm+MAQAGb50BAAZvkAAABt4DJt4ACBdYDAgRCY5pPzD+///eAybeAAAGb/UAAAZvfAEA
Bm+HAQAGEwsWDDgRAgAAEQsImhMMAnsHAAAEbzwAAAYCewcAAAQRDG9UAgAGbzYAAAYCewcAAAQR
DG9eAgAGbzgAAAYCewcAAAQRDG9cAgAGbzoAAAbeAybeAAARDG9aAgAGEw0WEwcrQRENEQeaEw4C
ewgAAARvRAAABgJ7CAAABBEOb4ECAAZvQgAABgJ7CAAABBEOb38CAAZvQAAABt4DJt4AEQcXWBMH
EQcRDY5pMrfeAybeAAACewwAAARvhAAABgJ7DAAABBEMb1gCAAZveAIABm9yAAAGAnsMAAAEEQxv
WAIABm96AgAGb3QAAAYCewwAAAQRDG9YAgAGb3YCAAZvdgAABgJ7DAAABBEMb1gCAAZvcAIABm94
AAAGAnsMAAAEEQxvWAIABm9sAgAGb3oAAAYCewwAAAQRDG9YAgAGb3ICAAZvfAAABgJ7DAAABBEM
b1gCAAZvdAIABm9+AAAGAnsMAAAEEQxvWAIABm9uAgAGb4AAAAYCewwAAAQRDG9YAgAGb3wCAAZv
ggAABt4DJt4AAAJ7DQAABG+SAAAGAnsNAAAEEQxvVgIABm9jAgAGb4gAAAYCew0AAAQRDG9WAgAG
b2ECAAZvigAABgJ7DQAABBEMb1YCAAZvaQIABm+MAAAGAnsNAAAEEQxvVgIABm9lAgAGb44AAAYC
ew0AAAQRDG9WAgAGb2cCAAZvkAAABt4DJt4ACBdYDAgRC45pP+X9///eAybeAAAGb/UAAAZvfAEA
Bm+BAQAGEw8WDDggAgAAEQ8ImhMQAnsJAAAEb1oAAAYCewkAAAQREG+1AQAGb0gAAAYCewkAAAQR
EG/HAQAGb0oAAAYCewkAAAQREG+9AQAGb0wAAAYCewkAAAQREG+/AQAGb04AAAYCewkAAAQREG/B
AQAGb1AAAAYCewkAAAQREG+7AQAGb1IAAAYCewkAAAQREG/JAQAGb1QAAAYCewkAAAQREG/DAQAG
b1YAAAYCewkAAAQREG/FAQAGb1gAAAbeAybeAAACewwAAARvhAAABgJ7DAAABBEQb7kBAAZv4wEA
Bm9yAAAGAnsMAAAEERBvuQEABm/lAQAGb3QAAAYCewwAAAQREG+5AQAGb+EBAAZvdgAABgJ7DAAA
BBEQb7kBAAZv2wEABm94AAAGAnsMAAAEERBvuQEABm/XAQAGb3oAAAYCewwAAAQREG+5AQAGb90B
AAZvfAAABgJ7DAAABBEQb7kBAAZv3wEABm9+AAAGAnsMAAAEERBvuQEABm/ZAQAGb4AAAAYCewwA
AAQREG+5AQAGb+cBAAZvggAABt4DJt4AAAJ7DQAABG+SAAAGAnsNAAAEERBvtwEABm/OAQAGb4gA
AAYCew0AAAQREG+3AQAGb8wBAAZvigAABgJ7DQAABBEQb7cBAAZv1AEABm+MAAAGAnsNAAAEERBv
twEABm/QAQAGb44AAAYCew0AAAQREG+3AQAGb9IBAAZvkAAABt4DJt4ACBdYDAgRD45pP9b9///e
AybeAAAGb/UAAAZvfAEABm+FAQAGExEWDDgjAgAAEREImhMSAnsKAAAEb2YAAAYCewoAAAQREm8i
AgAGb14AAAYCewoAAAQREm8sAgAGb2AAAAYCewoAAAQREm8oAgAGb2IAAAYCewoAAAQREm8uAgAG
b2QAAAbeAybeAAAREm8qAgAGExMWEwcrQRETEQeaExQCewsAAARvbgAABgJ7CwAABBEUb1ECAAZv
bAAABgJ7CwAABBEUb08CAAZvagAABt4DJt4AEQcXWBMHEQcRE45pMrfeAybeAAACewwAAARvhAAA
BgJ7DAAABBESbyYCAAZvSAIABm9yAAAGAnsMAAAEERJvJgIABm9KAgAGb3QAAAYCewwAAAQREm8m
AgAGb0YCAAZvdgAABgJ7DAAABBESbyYCAAZvQAIABm94AAAGAnsMAAAEERJvJgIABm88AgAGb3oA
AAYCewwAAAQREm8mAgAGb0ICAAZvfAAABgJ7DAAABBESbyYCAAZvRAIABm9+AAAGAnsMAAAEERJv
JgIABm8+AgAGb4AAAAYCewwAAAQREm8mAgAGb0wCAAZvggAABt4DJt4AAAJ7DQAABG+SAAAGAnsN
AAAEERJvJAIABm8zAgAGb4gAAAYCew0AAAQREm8kAgAGbzECAAZvigAABgJ7DQAABBESbyQCAAZv
OQIABm+MAAAGAnsNAAAEERJvJAIABm81AgAGb44AAAYCew0AAAQREm8kAgAGbzcCAAZvkAAABt4D
Jt4ACBdYDAgREY5pP9P9///eAybeACoAAABBJAQAAAAAABAAAAA5AAAASQAAAAMAAAAPAAABAAAA
AFwAAABAAAAAnAAAAAMAAAAPAAABAAAAAE0AAABeAAAAqwAAAAMAAAAPAAABAAAAAK8AAACNAAAA
PAEAAAMAAAAPAAABAAAAAEABAABSAAAAkgEAAAMAAAAPAAABAAAAAJYBAAB3AAAADQIAAAMAAAAP
AAABAAAAABECAABNAAAAXgIAAAMAAAAPAAABAAAAAGICAABSAAAAtAIAAAMAAAAPAAABAAAAALgC
AAB3AAAALwMAAAMAAAAPAAABAAAAADMDAADNAAAAAAQAAAMAAAAPAAABAAAAAAQEAABSAAAAVgQA
AAMAAAAPAAABAAAAAFoEAAB3AAAA0QQAAAMAAAAPAAABAAAAANUEAABNAAAAIgUAAAMAAAAPAAAB
AAAAACYFAABSAAAAeAUAAAMAAAAPAAABAAAAAHwFAAB3AAAA8wUAAAMAAAAPAAABAAAAAPcFAACN
AAAAhAYAAAMAAAAPAAABAAAAAIgGAABSAAAA2gYAAAMAAAAPAAABAAAAAN4GAAB3AAAAVQcAAAMA
AAAPAAABAAAAAHgHAACLAAAAAwgAAAMAAAAPAAABAAAAABwIAAAxAAAATQgAAAMAAAAPAAABAAAA
AAcIAABZAAAAYAgAAAMAAAAPAAABAAAAAGQIAADcAAAAQAkAAAMAAAAPAAABAAAAAEQJAACAAAAA
xAkAAAMAAAAPAAABAAAAAFkHAAB+AgAA1wkAAAMAAAAPAAABAAAAAPoJAABVAAAATwoAAAMAAAAP
AAABAAAAAFMKAADcAAAALwsAAAMAAAAPAAABAAAAADMLAACAAAAAswsAAAMAAAAPAAABAAAAANsJ
AADrAQAAxgsAAAMAAAAPAAABAAAAAOkLAABDAAAALAwAAAMAAAAPAAABAAAAAEUMAAAxAAAAdgwA
AAMAAAAPAAABAAAAADAMAABZAAAAiQwAAAMAAAAPAAABAAAAAI0MAADcAAAAaQ0AAAMAAAAPAAAB
AAAAAG0NAACAAAAA7Q0AAAMAAAAPAAABAAAAAMoLAAA2AgAAAA4AAAMAAAAPAAABAAAAACMOAACv
AAAA0g4AAAMAAAAPAAABAAAAANYOAADcAAAAsg8AAAMAAAAPAAABAAAAALYPAACAAAAANhAAAAMA
AAAPAAABAAAAAAQOAABFAgAASRAAAAMAAAAPAAABAAAAAGwQAABVAAAAwRAAAAMAAAAPAAABAAAA
ANoQAAAxAAAACxEAAAMAAAAPAAABAAAAAMUQAABZAAAAHhEAAAMAAAAPAAABAAAAACIRAADcAAAA
/hEAAAMAAAAPAAABAAAAAAISAACAAAAAghIAAAMAAAAPAAABAAAAAE0QAABIAgAAlRIAAAMAAAAP
AAABHgIo5wAABioqAgMEBSgaAAAKKiYCFgMoGwAACipaAywIAhYoHAAACipyUQAAcHMdAAAKeiYC
FwMoGwAACipaAywIAhcoHAAACipyUQAAcHMdAAAKeiYCGAMoGwAACipaAywIAhgoHAAACipyUQAA
cHMdAAAKeh4CKB4AAAoqHgIoHwAACioeAiggAAAKKjoCFwOMKAAAASgbAAAKKjoCGAOMKAAAASgb
AAAKKjoCGQOMKAAAASgbAAAKKloDLAgCGSgcAAAKKnJRAABwcx0AAAp6OgIaA4wpAAABKBsAAAoq
WgMsCAIaKBwAAAoqclEAAHBzHQAACno6AhsDjCkAAAEoGwAACipaAywIAhsoHAAACipyUQAAcHMd
AAAKeiYCHAMoGwAACipaAywIAhwoHAAACipyUQAAcHMdAAAKejoCFgOMKQAAASgbAAAKKjoCFwOM
KQAAASgbAAAKKjoCGAOMKQAAASgbAAAKKiYCGQMoGwAACio6AhkDjBMAAAEoGwAACio6AhoDjCgA
AAEoGwAACiomAhsDKBsAAAoqOgIdA4wTAAABKBsAAAoqWgMsCAIdKBwAAAoqclEAAHBzHQAACno6
Ah4DjCgAAAEoGwAACipaAywIAh4oHAAACipyUQAAcHMdAAAKejoCGQOMKQAAASgbAAAKKiYCGgMo
GwAACio6AhwDjCkAAAEoGwAACiomAh0DKBsAAAoqOgIeA4wpAAABKBsAAAoqOgIXA4wTAAABKBsA
AAoqfgIoIQAACgICc+wAAAZ9AQAABAICc+0AAAZ9AgAABCoGKhMwAgDvAQAAAAAAAAJ7AwAABCwS
AnsDAAAEbw0AAAYCFH0DAAAEAnsEAAAELBICewQAAARvHwAABgIUfQQAAAQCewUAAAQsEgJ7BQAA
BG8nAAAGAhR9BQAABAJ7BgAABCwSAnsGAAAEbzMAAAYCFH0GAAAEAnsHAAAELBICewcAAARvPQAA
BgIUfQcAAAQCewgAAAQsEgJ7CAAABG9FAAAGAhR9CAAABAJ7CQAABCwSAnsJAAAEb1sAAAYCFH0J
AAAEAnsKAAAELBICewoAAARvZwAABgIUfQoAAAQCewsAAAQsEgJ7CwAABG9vAAAGAhR9CwAABAJ7
DAAABCwSAnsMAAAEb4UAAAYCFH0MAAAEAnsNAAAELBICew0AAARvkwAABgIUfQ0AAAQCew4AAAQs
EgJ7DgAABG+bAAAGAhR9DgAABAJ7DwAABCwSAnsPAAAEb6cAAAYCFH0PAAAEAnsQAAAELBICexAA
AARvtwAABgIUfRAAAAQCexEAAAQsEgJ7EQAABG+/AAAGAhR9EQAABAJ7EgAABCwSAnsSAAAEb8kA
AAYCFH0SAAAEAnsTAAAELBICexMAAARv0QAABgIUfRMAAAQCexQAAAQsEgJ7FAAABG/dAAAGAhR9
FAAABAJ7FQAABCwSAnsVAAAEb+UAAAYCFH0VAAAEKgATMAUAQwMAAAIAABEWCjgiAwAABAaUDgRy
7gAAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzBQAABn0DAAAEBAaUDgRyBAEAcCgiAAAKMxkCBQaa
AgQGlCgjAAAKDgRzDwAABn0EAAAEBAaUDgRydgEAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzIQAA
Bn0FAAAEBAaUDgRyDQIAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzKQAABn0GAAAEBAaUDgRybQIA
cCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzNQAABn0HAAAEBAaUDgRyyQIAcCgiAAAKMxkCBQaaAgQG
lCgjAAAKDgRzPwAABn0IAAAEBAaUDgRyRQMAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzRwAABn0J
AAAEBAaUDgRypwMAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzXQAABn0KAAAEBAaUDgRyFwQAcCgi
AAAKMxkCBQaaAgQGlCgjAAAKDgRzaQAABn0LAAAEBAaUDgRyqgQAcCgiAAAKMxkCBQaaAgQGlCgj
AAAKDgRzcQAABn0MAAAEBAaUDgRyxAQAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzhwAABn0NAAAE
BAaUDgRy3AQAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzlQAABn0OAAAEBAaUDgRySgUAcCgiAAAK
MxkCBQaaAgQGlCgjAAAKDgRznQAABn0PAAAEBAaUDgRylgUAcCgiAAAKMxkCBQaaAgQGlCgjAAAK
DgRzqQAABn0QAAAEBAaUDgRy/gUAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzuQAABn0RAAAEBAaU
DgRyagYAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRzwQAABn0SAAAEBAaUDgRygAYAcCgiAAAKMxkC
BQaaAgQGlCgjAAAKDgRzywAABn0TAAAEBAaUDgRymAYAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRz
0wAABn0UAAAEBAaUDgRyFgcAcCgiAAAKMxkCBQaaAgQGlCgjAAAKDgRz3wAABn0VAAAEBhdYCgYD
P9f8//8Cb+sAAAYCb+gAAAYCKOkAAAYqOgIoJAAACgIDfRYAAAQqOgIoJAAACgIDfRcAAAQqlgJ7
FwAABG8lAAAKcjoHAHBvJgAACignAAAKbygAAAp0LgAAASoeAnsYAAAEKiICA30YAAAEKh4CexkA
AAQqIgIDfRkAAAQqHgJ7GgAABCoiAgN9GgAABCoeAnsbAAAEKiICA30bAAAEKh4CKCQAAAoqHgJ7
HAAABCoiAgN9HAAABCoeAnsdAAAEKiICA30dAAAEKh4Cex4AAAQqIgIDfR4AAAQqHgJ7HwAABCoi
AgN9HwAABCoeAnsgAAAEKiICA30gAAAEKh4CeyEAAAQqIgIDfSEAAAQqHgJ7IgAABCoiAgN9IgAA
BCoeAnsjAAAEKiICA30jAAAEKh4CeyQAAAQqIgIDfSQAAAQqHgJ7JQAABCoiAgN9JQAABCoeAnsm
AAAEKiICA30mAAAEKh4CeycAAAQqIgIDfScAAAQqHgJ7KAAABCoiAgN9KAAABCoeAnspAAAEKiIC
A30pAAAEKh4CeyoAAAQqIgIDfSoAAAQqHgJ7KwAABCoiAgN9KwAABCoeAnssAAAEKiICA30sAAAE
Kh4Cey0AAAQqIgIDfS0AAAQqHgJ7LgAABCoiAgN9LgAABCoeAnsvAAAEKiICA30vAAAEKh4CezAA
AAQqIgIDfTAAAAQqHgJ7MQAABCoiAgN9MQAABCoeAnsyAAAEKiICA30yAAAEKh4CezMAAAQqIgID
fTMAAAQqHgJ7NAAABCoiAgN9NAAABCoeAns1AAAEKiICA301AAAEKh4CezYAAAQqIgIDfTYAAAQq
HgJ7NwAABCoiAgN9NwAABCoeAns4AAAEKiICA304AAAEKh4CezkAAAQqIgIDfTkAAAQqHgJ7OgAA
BCoiAgN9OgAABCoeAns7AAAEKiICA307AAAEKh4CezwAAAQqIgIDfTwAAAQqHgJ7PQAABCoiAgN9
PQAABCoeAns+AAAEKiICA30+AAAEKh4Cez8AAAQqIgIDfT8AAAQqHgJ7QAAABCoiAgN9QAAABCoe
AntBAAAEKiICA31BAAAEKh4Ce0IAAAQqIgIDfUIAAAQqHgJ7QwAABCoiAgN9QwAABCoeAntEAAAE
KiICA31EAAAEKh4Ce0UAAAQqIgIDfUUAAAQqHgJ7RgAABCoiAgN9RgAABCoeAntHAAAEKiICA31H
AAAEKh4Ce0gAAAQqIgIDfUgAAAQqHgJ7SQAABCoiAgN9SQAABCoeAntKAAAEKiICA31KAAAEKh4C
e0sAAAQqIgIDfUsAAAQqHgJ7TAAABCoiAgN9TAAABCoeAntNAAAEKiICA31NAAAEKh4Ce04AAAQq
IgIDfU4AAAQqHgJ7TwAABCoiAgN9TwAABCoeAntQAAAEKiICA31QAAAEKh4Ce1EAAAQqIgIDfVEA
AAQqHgJ7UgAABCoiAgN9UgAABCoeAntTAAAEKiICA31TAAAEKh4Ce1QAAAQqIgIDfVQAAAQqHgJ7
VQAABCoiAgN9VQAABCoeAntWAAAEKiICA31WAAAEKh4Ce1cAAAQqIgIDfVcAAAQqHgJ7WAAABCoi
AgN9WAAABCoeAntZAAAEKiICA31ZAAAEKh4Ce1oAAAQqIgIDfVoAAAQqHgJ7WwAABCoiAgN9WwAA
BCoeAntcAAAEKiICA31cAAAEKh4Ce10AAAQqIgIDfV0AAAQqHgJ7XgAABCoiAgN9XgAABCoeAntf
AAAEKiICA31fAAAEKh4Ce2AAAAQqIgIDfWAAAAQqHgJ7YQAABCoiAgN9YQAABCoeAntiAAAEKiIC
A31iAAAEKh4Ce2MAAAQqIgIDfWMAAAQqHgJ7ZAAABCoiAgN9ZAAABCoeAntlAAAEKiICA31lAAAE
Kh4Ce2YAAAQqIgIDfWYAAAQqHgJ7ZwAABCoiAgN9ZwAABCoeAntoAAAEKiICA31oAAAEKh4Ce2kA
AAQqIgIDfWkAAAQqHgJ7agAABCoiAgN9agAABCoeAntrAAAEKiICA31rAAAEKh4Ce2wAAAQqIgID
fWwAAAQqHgJ7bQAABCoiAgN9bQAABCoeAntuAAAEKiICA31uAAAEKh4Ce28AAAQqIgIDfW8AAAQq
HgJ7cAAABCoiAgN9cAAABCoeAntxAAAEKiICA31xAAAEKh4Ce3IAAAQqIgIDfXIAAAQqHgJ7cwAA
BCoiAgN9cwAABCoeAnt0AAAEKiICA310AAAEKh4Ce3UAAAQqIgIDfXUAAAQqHgJ7dgAABCoiAgN9
dgAABCoeAnt3AAAEKiICA313AAAEKh4Ce3gAAAQqIgIDfXgAAAQqHgJ7eQAABCoiAgN9eQAABCoe
Ant6AAAEKiICA316AAAEKh4Ce3sAAAQqIgIDfXsAAAQqHgJ7fAAABCoiAgN9fAAABCoeAnt9AAAE
KiICA319AAAEKh4Ce34AAAQqIgIDfX4AAAQqHgJ7fwAABCoiAgN9fwAABCoeAnuAAAAEKiICA32A
AAAEKh4Ce4EAAAQqIgIDfYEAAAQqHgJ7ggAABCoiAgN9ggAABCoeAnuDAAAEKiICA32DAAAEKh4C
e4QAAAQqIgIDfYQAAAQqHgJ7hQAABCoiAgN9hQAABCoeAnuGAAAEKiICA32GAAAEKh4Ce4cAAAQq
IgIDfYcAAAQqHgJ7iAAABCoiAgN9iAAABCoeAnuJAAAEKiICA32JAAAEKh4Ce4oAAAQqIgIDfYoA
AAQqHgJ7iwAABCoiAgN9iwAABCoeAnuMAAAEKiICA32MAAAEKh4Ce40AAAQqIgIDfY0AAAQqHgJ7
jgAABCoiAgN9jgAABCoeAnuPAAAEKiICA32PAAAEKh4Ce5AAAAQqIgIDfZAAAAQqHgJ7kQAABCoi
AgN9kQAABCoeAnuSAAAEKiICA32SAAAEKh4Ce5MAAAQqIgIDfZMAAAQqHgJ7lAAABCoiAgN9lAAA
BCoeAnuVAAAEKiICA32VAAAEKh4Ce5YAAAQqIgIDfZYAAAQqHgJ7lwAABCoiAgN9lwAABCoeAnuY
AAAEKiICA32YAAAEKh4Ce5kAAAQqIgIDfZkAAAQqHgJ7mgAABCoiAgN9mgAABCoeAnubAAAEKiIC
A32bAAAEKh4Ce5wAAAQqIgIDfZwAAAQqHgJ7nQAABCoiAgN9nQAABCoeAnueAAAEKiICA32eAAAE
Kh4Ce58AAAQqIgIDfZ8AAAQqHgJ7oAAABCoiAgN9oAAABCoeAnuhAAAEKiICA32hAAAEKh4Ce6IA
AAQqIgIDfaIAAAQqHgJ7owAABCoiAgN9owAABCoeAnukAAAEKiICA32kAAAEKh4Ce6UAAAQqIgID
faUAAAQqHgJ7pgAABCoiAgN9pgAABCoeAnunAAAEKiICA32nAAAEKh4Ce6gAAAQqIgIDfagAAAQq
HgJ7qQAABCoiAgN9qQAABCoeAnuqAAAEKiICA32qAAAEKh4Ce6sAAAQqIgIDfasAAAQqHgJ7rAAA
BCoiAgN9rAAABCoeAnutAAAEKiICA32tAAAEKh4Ce64AAAQqIgIDfa4AAAQqHgJ7rwAABCoiAgN9
rwAABCoeAnuwAAAEKiICA32wAAAEKh4Ce7EAAAQqIgIDfbEAAAQqHgJ7sgAABCoiAgN9sgAABCoe
AnuzAAAEKiICA32zAAAEKh4Ce7QAAAQqIgIDfbQAAAQqHgJ7tQAABCoiAgN9tQAABCoeAnu2AAAE
KiICA322AAAEKh4Ce7cAAAQqIgIDfbcAAAQqHgJ7uAAABCoiAgN9uAAABCoeAnu5AAAEKiICA325
AAAEKh4Ce7oAAAQqIgIDfboAAAQqHgJ7uwAABCoiAgN9uwAABCoeAnu8AAAEKiICA328AAAEKh4C
e70AAAQqIgIDfb0AAAQqHgJ7vgAABCoiAgN9vgAABCoeAnu/AAAEKiICA32/AAAEKh4Ce8AAAAQq
IgIDfcAAAAQqHgJ7wQAABCoiAgN9wQAABCoeAnvCAAAEKiICA33CAAAEKh4Ce8MAAAQqIgIDfcMA
AAQqHgJ7xAAABCoiAgN9xAAABCoeAnvFAAAEKiICA33FAAAEKh4Ce8YAAAQqIgIDfcYAAAQqHgJ7
xwAABCoiAgN9xwAABCoeAnvIAAAEKiICA33IAAAEKh4Ce8kAAAQqIgIDfckAAAQqHgJ7ygAABCoi
AgN9ygAABCoeAnvLAAAEKiICA33LAAAEKh4Ce8wAAAQqIgIDfcwAAAQqHgJ7zQAABCoiAgN9zQAA
BCoeAnvOAAAEKiICA33OAAAEKlZ+zwAABCUtDCZzKQAACiWAzwAABCqCcyoAAAolcysAAAolAm8s
AAAKby0AAAolFmpvLgAACioAAAATMAQAPQAAAAMAABECby8AAAoohQIABnMwAAAKJRhvMQAACigy
AAAKCtABAAAbKDMAAApzNAAACgYoNQAACnUBAAAbpQEAABsqRiiEAgAGAm8vAAAKbwIAACsqrn7Q
AAAELR5yVAcAcNBBAAACKDMAAApvNwAACnM4AAAKgNAAAAR+0AAABCoaftEAAAQqHgKA0QAABCoa
ftIAAAQqHgIoOQAACiouc40CAAaA0gAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAC8UgAAI34AAChTAAD8KAAAI1N0cmluZ3MAAAAAJHwAAMgHAAAjVVMA7IMAABAAAAAj
R1VJRAAAAPyDAACsCAAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJDQAAAPoBMwAWAAABAAAANwAAAEIA
AADSAAAAjgIAAJABAAA5AAAArgAAAAMAAAA+AAAAUgEAAAoCAAABAAAAAQAAAAcAAAABAAAAAgAA
AAIAAAAAAJQSAQAAAAAABgAxEPcgBgCAEPcgBgA5EfcgBgBpD9YgEwCLIQAABgCWD5YbBgBjEJYb
BgBEEJYbBgAgEZYbBgCgEJYbBgC5EJYbBgDnD5YbBgACEOwRCgDoEHgOBgDbG9YXCgC3HngODgDE
HXgOCgBQHHgOBgBhEtYXCgA0JHgOBgD0I9YXEgCtD10bEgAPEV0bEgAbEF0bEgDRD10bEgDUEF0b
EgC+D10bFgCqIHYbBgC7FjcBEgCLHKEWBgBMD9YgBgBMIDchBgBEHEgbGgAWD2kSGgB9D2kSGgDd
DjMbBgAxD/cgBgDOCzcBBgDLG9YXBgAAGNYXBgA6ANYXHgARAFwgHgABAFwgUwCEKAAAHgAiAFwg
BgAGEtYXBgC1FjcBBgCEIDcBBgCRIDcBEgB5IqEWEgCDEqEWBgCwDtYXBgCeC9YXEgCcIF0bBgDx
KJYbAAAAAGQAAAAAAAEAAQABABAACBgAAFgAAQABAAEAEACVHAAAQQABAAUAAQAQAOQcAABBAAEA
DwABABAAIh4AAEEAAQAhAAEAEABXHQAAQQABACkAAQAQACMdAABBAAEANQABABAAcx4AAEEAAQA/
AAEAEACNHQAAQQABAEcAAQAQAKYcAABBAAEAXQABABAA0x0AAEEAAQBpAAEAEAA1IAAAQQABAHEA
AQAQACMgAABBAAEAhwABABAAqx8AAEEAAQCVAAEAEADEHgAAQQABAJ0AAQAQADUfAABBAAEAqQAB
ABAAbx8AAEEAAQC5AAEAEADoHwAAQQABAMEAAQAQAPkfAABBAAEAywABABAA8B4AAEEAAQDTAAEA
EAALIAAAQQABAN8AAQAQABYkAABRAAEA5wABABAAviIAAFUAFgDsAAEAEADVIQAAVQAXAO0AAQAQ
ANMLQABVABgA7wABABAANghAAFUAHAD4AAEAEADXJ0AAVQAfAP8AAQAQAJYjQABVACIABgEBABAA
qyZAAFUAJwARAQEAEADzCkAAVQArABoBAQAQAGIaQABVAC0AHwEBABAAMidAAFUALgAiAQEAEAA5
C0AAVQAyACsBAQAQAKkaQABVADQAMAEBABAAniVAAFUANQAzAQEAEABgCkAAVQA7AEABAQAQAM0Z
QABVAD0ARQEBABAA/yRAAFUAPgBIAQEAEAASCkAAVQBEAFUBAQAQAH4ZQABVAEYAWgEBABAAKCZA
AFUARwBdAQEAEACvCkAAVQBSAHQBAQAQAB0aQABVAFQAeQEBABAAHyhAAFUAVQB8AQEAEAD5IUAA
VQBWAH8BAQAQAJUNQABVAFsAigEBABAAkQlAAFUAYQCXAQEAEAD7GEAAVQBmAKIBAQAQAAgOQABV
AG8AtQEBABAA0QlAAFUAegDMAQEAEAA8GUAAVQB/ANcBAQAQALAMQABVAIgA6gEBABAACglAAFUA
kgD/AQEAEAByGEAAVQCXAAoCAQAQACwXQABVAKAAHQIBABAAJQxAAFUAogAiAgEAEADCCEAAVQCp
ADECAQAQACkYQABVAK4APAIBABAA1BZAAFUAtwBPAgEAEAAmDUAAVQC5AFQCAQAQAFMJQABVAL8A
YQIBABAAvBhAAFUAxABsAgEAEACGF0AAVQDNAH8CgAEQAOkgQABVAM8AhAIAABAAPiGaIVUA0ACI
AgABEACCIpohkQDSAIwCBgC+IhwBBgDVISABBgCVHCQBBgDkHCgBBgAiHiwBBgBXHTABBgAjHTQB
BgBzHjgBBgCNHTwBBgCmHEABBgDTHUQBBgA1IEgBBgAjIEwBBgCrH1ABBgDEHlQBBgA1H1gBBgBv
H1wBBgDoH2ABBgD5H2QBBgDwHmgBBgALIGwBAQAkJHABAQAkJHABAQAABXQBAQBPBXgBAQD/Bn0B
AQAVB4EBAQByAoYBAQDoAoYBAQBQBIYBAQBdA4YBAQDyBokBAQDwBYwBAQCrBpABAQDOBpQBAQBe
BpkBAQAzBp4BAQCKBqMBAQBgAoYBAQCXA6gBAQDlBKwBAQDoAoYBAQCkAoYBAQCXA4YBAQAMA7AB
AQBgAoYBAQCXA7MBAQDlBLgBAQDoAoYBAQCkAoYBAQCXA4YBAQAMA7ABAQBgAoYBAQCXA70BAQDl
BMIBAQAcA7ABAQA0A7ABAQDoAoYBAQCkAoYBAQCXA4YBAQAMA7ABAQBgAoYBAQCXA8cBAQDlBMwB
AQAUBYYBAQDwAnQBAQDoAoYBAQCkAoYBAQCXA4YBAQAMA7ABAQBgAoYBAQCXA9EBAQDlBNYBAQCx
BYkBAQDFAokBAQCeBLABAQDgBYYBAQCKBYYBAQCwAtsBAQA+BNsBAQDoAoYBAQCkAoYBAQCXA4YB
AQAMA7ABAQBgBd4BAQAFBOMBAQAhBOkBAQDGA+8BAQCiA/UBAQDrA/sBAQBgAoYBAQCXAwECAQDl
BAYCAQALBgsCAQCOAoYBAQD+BbABAQBNA4YBAQBpBIYBAQCkAoYBAQCXA4YBAQAaBg4CAQBQBIYB
AQBaBIYBAQDABIkBAQDxBIkBAQB8A4kBAQBWAg4CAQBuA4kBAQCHA7ABAQCXBYkBAQBgAoYBAQCX
AxECAQDlBBYCAQB3BIYBAQCFBIYBAQDbBHQBAQCeAbABAQA7B3QBAQCxAbABAQD+BbABAQCOAoYB
AQBNA4YBAQBpBIYBAQCkAoYBAQCXA4YBAQAaBgsCAQBQBIYBAQBaBIYBAQDABIkBAQDxBIkBAQB8
A4kBAQBWAhsCAQBuA4kBAQCHA7ABAQCXBYkBAQBgAoYBAQCXAx4CAQDlBCMCAQAcA7ABAQA0A7AB
AQCxBIkBAQDABIkBAQA3BSgCAQCOAoYBAQD+BbABAQBNA4YBAQBpBIYBAQCkAoYBAQCXA4YBAQAa
BgsCAQBQBIYBAQBaBIYBAQDABIkBAQDxBIkBAQB8A4kBAQBWAgsCAQBuA4kBAQCHA7ABAQCXBYkB
AQDPBIkBAQAoBgsCAQBgAoYBAQCXAy4CAQDlBDMCAQBuBQsCAQAgBTgCAQD+BbABAQCOAoYBAQBN
A4YBAQBpBIYBAQCkAoYBAQCXA4YBAQAaBgsCAQBQBIYBAQBaBIYBAQDABIkBAQDxBIkBAQB8A4kB
AQBWAg4CAQBuA4kBAQCHA7ABAQCXBYkBAQCTBIYBAQAoBgsCAQBgAoYBAQCXAz4CAQDlBEMCAQDK
BUgCAQCOAoYBAQD+BbABAQBNA4YBAQBpBIYBAQCkAoYBAQCXA4YBAQAaBgsCAQBQBIYBAQBaBIYB
AQDABIkBAQDxBIkBAQB8A4kBAQBWAgsCAQBuA4kBAQCHA7ABAQCXBYkBAQAsB4YBAQBHB4kBEQA/
HE4CEQDiF1ICEQDNDlcCEQAICFwCUCAAAAAAxgBXEQEAAQBYIAAAAADGAGIRAQABAGAgAAAAAMYA
yCMBAAEALDcAAAAAhhi/IAEAAQA0NwAAAACGGL8gagABAD83AAAAAIYIygAQAAQASTcAAAAAhgjy
EmECBQBgNwAAAACGCIYAEAAGAGo3AAAAAIYIzBJhAgcAgTcAAAAAhghNDhAACACLNwAAAACGCI4U
YQIJAKI3AAAAAIYAyigBAAoAqjcAAAAAhgD7IwEACgCyNwAAAACGAP4jegAKADQ3AAAAAIYYvyBq
AAoAPzcAAAAAhgieABAADQBJNwAAAACGCNoSYQIOALo3AAAAAIYIwQdhAg8AajcAAAAAhgjXE2EC
EADJNwAAAACGCPAHYQIRAIs3AAAAAIYI9RNhAhIA2DcAAAAAhgjoI2ECEwDnNwAAAACGCP0VYQIU
AP43AAAAAIYIUxIFABUADTgAAAAAhggnFWECFgAkOAAAAACGCDcSBQAXADM4AAAAAIYIEhVhAhgA
SjgAAAAAhgj6ABAAGQBUOAAAAACGCBQTYQIaAKI3AAAAAIYAyigBABsAqjcAAAAAhgD7IwEAGwCy
NwAAAACGAP4jegAbADQ3AAAAAIYYvyBqABsAazgAAAAAhggeEgUAHgBJNwAAAACGCAAVYQIfAHo4
AAAAAIYITiQFACAAajcAAAAAhggQFmECIQCiNwAAAACGAMooAQAiAKo3AAAAAIYA+yMBACIAsjcA
AAAAhgD+I3oAIgA0NwAAAACGGL8gagAiAD83AAAAAIYIngAQACUASTcAAAAAhgjaEmECJgC6NwAA
AACGCOgjYQInAGo3AAAAAIYI/RVhAigAiTgAAAAAhghmJAUAKQCLNwAAAACGCCEWYQIqAJg4AAAA
AIYI+gAQACsA5zcAAAAAhggUE2ECLACiNwAAAACGAMooAQAtAKo3AAAAAIYA+yMBAC0AsjcAAAAA
hgD+I3oALQA0NwAAAACGGL8gagAtAD83AAAAAIYIngAQADAASTcAAAAAhgjaEmECMQC6NwAAAACG
COgjYQIyAGo3AAAAAIYI/RVhAjMAgTcAAAAAhgj6ABAANACLNwAAAACGCBQTYQI1AKI3AAAAAIYA
yigBADYAqjcAAAAAhgD7IwEANgCyNwAAAACGAP4jegA2ADQ3AAAAAIYYvyBqADYAPzcAAAAAhghi
KBAAOQBJNwAAAACGCF0WYQI6AHo4AAAAAIYI3ygFADsAajcAAAAAhgiEFmECPACiNwAAAACGAMoo
AQA9AKo3AAAAAIYA+yMBAD0AsjcAAAAAhgD+I3oAPQA0NwAAAACGGL8gagA9AD83AAAAAIYIngAQ
AEAASTcAAAAAhgjaEmECQQC6NwAAAACGCOgjYQJCAGo3AAAAAIYI/RVhAkMAgTcAAAAAhgipERAA
RACLNwAAAACGCOwUYQJFAKI4AAAAAIYI9xdmAkYA5zcAAAAAhgg8FWECRwCxOAAAAACGCNgBYQJI
AA04AAAAAIYIQhNhAkkAwDgAAAAAhgiPERAASgAzOAAAAACGCNgUYQJLAEo4AAAAAIYI+gAQAEwA
VDgAAAAAhggUE2ECTQDKOAAAAACGCL8oZgJOANk4AAAAAIYIchZhAk8A8DgAAAAAhgj+AWECUAD/
OAAAAACGCFsTYQJRAKI3AAAAAIYAyigBAFIAqjcAAAAAhgD7IwEAUgCyNwAAAACGAP4jegBSADQ3
AAAAAIYYvyBqAFIAPzcAAAAAhgieABAAVQBJNwAAAACGCNoSYQJWALo3AAAAAIYI6CNhAlcAajcA
AAAAhgj9FWECWACJOAAAAACGCDkiBQBZAIs3AAAAAIYIcxVhAloAmDgAAAAAhgj6ABAAWwDnNwAA
AACGCBQTYQJcAKI3AAAAAIYAyigBAF0AqjcAAAAAhgD7IwEAXQCyNwAAAACGAP4jegBdADQ3AAAA
AIYYvyBqAF0APzcAAAAAhgh4ERAAYABJNwAAAACGCMcUYQJhAHo4AAAAAIYITiQFAGIAajcAAAAA
hggQFmECYwCiNwAAAACGAMooAQBkAKo3AAAAAIYA+yMBAGQAsjcAAAAAhgD+I3oAZAA0NwAAAACG
GL8gagBkAGs4AAAAAIYIjQgFAGcASTcAAAAAhghCFGECaAC6NwAAAACGCI8LYQJpAGo3AAAAAIYI
eBRhAmoAiTgAAAAAhgh2AAUAawCLNwAAAACGCLwSYQJsABY5AAAAAIYIUxIFAG0A5zcAAAAAhggn
FWECbgAlOQAAAACGCE0OEABvAA04AAAAAIYIjhRhAnAAJDgAAAAAhgj/GgUAcQAzOAAAAACGCEwV
YQJyAC85AAAAAIYIpAgFAHMAVDgAAAAAhghWFGECdAA+OQAAAACGCKcOEAB1ANk4AAAAAIYInhRh
AnYASDkAAAAAhgjjIgUAdwD/OAAAAACGCKgVYQJ4AKI3AAAAAIYAyigBAHkAqjcAAAAAhgD7IwEA
eQCyNwAAAACGAP4jegB5ADQ3AAAAAIYYvyBqAHkAPzcAAAAAhggCDxAAfABJNwAAAACGCLMUYQJ9
AGA3AAAAAIYIJwgQAH4AajcAAAAAhggUFGECfwCJOAAAAACGCIEkBQCAAIs3AAAAAIYINhZhAoEA
mDgAAAAAhghOARAAggDnNwAAAACGCDATYQKDACU5AAAAAIYIuAgQAIQADTgAAAAAhghnFGEChQCi
NwAAAACGAMooAQCGAKo3AAAAAIYA+yMBAIYAsjcAAAAAhgD+I3oAhgA0NwAAAACGGL8gagCGAD83
AAAAAIYIngAQAIkASTcAAAAAhgjaEmECigBgNwAAAACGCIYAEACLAGo3AAAAAIYIzBJhAowAojcA
AAAAhgDKKAEAjQCqNwAAAACGAPsjAQCNALI3AAAAAIYA/iN6AI0ANDcAAAAAhhi/IGoAjQA/NwAA
AACGCJ4AEACQAEk3AAAAAIYI2hJhApEAVzkAAAAAhghxB2YCkgBqNwAAAACGCJ8TYQKTAIE3AAAA
AIYIhgAQAJQAizcAAAAAhgjMEmEClQCYOAAAAACGCMAbEACWAOc3AAAAAIYIYRVhApcAojcAAAAA
hgDKKAEAmACqNwAAAACGAPsjAQCYALI3AAAAAIYA/iN6AJgANDcAAAAAhhi/IGoAmAA/NwAAAACG
CJ4AEACbAEk3AAAAAIYI2hJhApwAYDcAAAAAhghtIxAAnQBqNwAAAACGCOcVYQKeAIE3AAAAAIYI
hgAQAJ8AizcAAAAAhgjMEmECoAAWOQAAAACGCBQjBQChAOc3AAAAAIYIyBVhAqIA/jcAAAAAhgg0
AgUAowANOAAAAACGCHYTYQKkAMA4AAAAAIYInCIQAKUAMzgAAAAAhgiVFWECpgCiNwAAAACGAMoo
AQCnAKo3AAAAAIYA+yMBAKcAsjcAAAAAhgD+I3oApwA0NwAAAACGGL8gagCnAD83AAAAAIYIhgAQ
AKoASTcAAAAAhgjMEmECqwBgNwAAAACGCCcIEACsAGo3AAAAAIYIFBRhAq0AojcAAAAAhgDKKAEA
rgCqNwAAAACGAPsjAQCuALI3AAAAAIYA/iN6AK4ANDcAAAAAhhi/IGoArgA/NwAAAACGCIYAEACx
AEk3AAAAAIYIzBJhArIAYDcAAAAAhghOARAAswBqNwAAAACGCDATYQK0AIE3AAAAAIYIuAgQALUA
izcAAAAAhghnFGECtgCiNwAAAACGAMooAQC3AKo3AAAAAIYA+yMBALcAsjcAAAAAhgD+I3oAtwA0
NwAAAACGGL8gagC3AD83AAAAAIYIhgAQALoASTcAAAAAhgjMEmECuwC6NwAAAACGCJsHYQK8AGo3
AAAAAIYIwRNhAr0AojcAAAAAhgDKKAEAvgCqNwAAAACGAPsjAQC+ALI3AAAAAIYA/iN6AL4ANDcA
AAAAhhi/IGoAvgA/NwAAAACGCJ4AEADBAEk3AAAAAIYI2hJhAsIAYDcAAAAAhgiGABAAwwBqNwAA
AACGCMwSYQLEAMk3AAAAAIYIwQdhAsUAizcAAAAAhgjXE2ECxgDYNwAAAACGCPAHYQLHAOc3AAAA
AIYI9RNhAsgAojcAAAAAhgDKKAEAyQCqNwAAAACGAPsjAQDJALI3AAAAAIYA/iN6AMkANDcAAAAA
hhi/IGoAyQA/NwAAAACGCG8IEADMAEk3AAAAAIYIKhRhAs0AejgAAAAAhgihJwUAzgBqNwAAAACG
CEoWYQLPAKI3AAAAAIYAyigBANAAqjcAAAAAhgD7IwEA0ACyNwAAAACGAP4jegDQAGY5AAAAAIYY
vyABANAAhjkAAAAAxgG6IwEA0ACIOQAAAACBAIoBAQDQAIQ7AAAAAMYAPChsAtAAhjkAAAAAxgHI
IwEA1ADTPgAAAACGGL8geALUAOI+AAAAAIYYvyB4AtUA8T4AAAAAhgjCC7kA1gAXPwAAAACGCA0b
fgLWAB8/AAAAAIYIIBtmAtYAKD8AAAAAhggXIYMC1wAwPwAAAACGCCchiQLXADk/AAAAAIYIrSeQ
AtgAQT8AAAAAhgjCJ5UC2ABKPwAAAACGCPMnmwLZAFI/AAAAAIYICSihAtkAWz8AAAAAhhi/IAEA
2gBjPwAAAACGCK8AuQDaAGs/AAAAAIYIygAQANoAdD8AAAAAhgh/ALkA2wB8PwAAAACGCIYAEADb
AIU/AAAAAIYIRA65ANwAjT8AAAAAhghNDhAA3ABbPwAAAACGGL8gAQDdAJY/AAAAAIYITwi5AN0A
nj8AAAAAhghfCBAA3QCnPwAAAACGCJUnqALeAK8/AAAAAIYIoSesAt4AuD8AAAAAhgh8I7EC3wDA
PwAAAACGCIkjtgLfAFs/AAAAAIYYvyABAOAAyT8AAAAAhghnJrwC4ADRPwAAAACGCIkmwQLgANo/
AAAAAIYI7CbHAuEA4j8AAAAAhggPJ80C4QDrPwAAAACGCEgl1ALiAPM/AAAAAIYIcyXaAuIA/D8A
AAAAhgirJOEC4wAEQAAAAACGCNUk5wLjAA1AAAAAAIYI6CXuAuQAFUAAAAAAhggIJvQC5ABbPwAA
AACGGL8gAQDlAB5AAAAAAIYIjQC5AOUAJkAAAAAAhgieABAA5QAvQAAAAACGCK4I+wLmADdAAAAA
AIYIuAgAA+YAQEAAAAAAhggTGAYD5wBIQAAAAACGCB4YCwPnAFFAAAAAAIYIfwC5AOgAWUAAAAAA
hgiGABAA6ABbPwAAAACGGL8gAQDpAGJAAAAAAIYIQwG5AOkAakAAAAAAhghOARAA6QBzQAAAAACG
CK4IuQDqAHtAAAAAAIYIuAgQAOoAWz8AAAAAhhi/IAEA6wCEQAAAAACGCIwHegDrAIxAAAAAAIYI
mwdhAusAWz8AAAAAhhi/IAEA7ACVQAAAAACGCI0AuQDsAJ1AAAAAAIYIngAQAOwApkAAAAAAhgiu
CBED7QCuQAAAAACGCLgIFwPtALdAAAAAAIYIExgeA+4Av0AAAAAAhggeGCQD7gDIQAAAAACGCH8A
uQDvANBAAAAAAIYIhgAQAO8AWz8AAAAAhhi/IAEA8ADZQAAAAACGCEMBuQDwAOFAAAAAAIYITgEQ
APAA6kAAAAAAhgiuCLkA8QDyQAAAAACGCLgIEADxAFs/AAAAAIYYvyABAPIA+0AAAAAAhgiMB3oA
8gADQQAAAACGCJsHYQLyAFs/AAAAAIYYvyABAPMADEEAAAAAhgiNALkA8wAUQQAAAACGCJ4AEADz
AB1BAAAAAIYIrggrA/QAJUEAAAAAhgi4CDED9AAuQQAAAACGCBMYOAP1ADZBAAAAAIYIHhg+A/UA
P0EAAAAAhgiqB3oA9gBHQQAAAACGCMEHYQL2AFBBAAAAAIYI2Ad6APcAWEEAAAAAhgjwB2EC9wBh
QQAAAACGCH8AuQD4AGlBAAAAAIYIhgAQAPgAWz8AAAAAhhi/IAEA+QByQQAAAACGCEMBuQD5AHpB
AAAAAIYITgEQAPkAg0EAAAAAhgiuCLkA+gCLQQAAAACGCLgIEAD6AFs/AAAAAIYYvyABAPsAlEEA
AAAAhgiMB3oA+wCcQQAAAACGCJsHYQL7AFs/AAAAAIYYvyABAPwApUEAAAAAhgiNALkA/ACtQQAA
AACGCJ4AEAD8ALZBAAAAAIYIrghFA/0AvkEAAAAAhgi4CEsD/QDHQQAAAACGCBMYUgP+AM9BAAAA
AIYIHhhYA/4A2EEAAAAAhgi1G7kA/wDgQQAAAACGCMAbEAD/AOlBAAAAAIYIVgd+AgAB8UEAAAAA
hghxB2YCAAH6QQAAAACGCH8AuQABAQJCAAAAAIYIhgAQAAEBWz8AAAAAhhi/IAEAAgELQgAAAACG
CEMBuQACARNCAAAAAIYITgEQAAIBHEIAAAAAhgiuCLkAAwEkQgAAAACGCLgIEAADAVs/AAAAAIYY
vyABAAQBLUIAAAAAhgiMB3oABAE1QgAAAACGCJsHYQIEAVs/AAAAAIYYvyABAAUBPkIAAAAAhgiN
ALkABQFGQgAAAACGCJ4AEAAFAU9CAAAAAIYIrghfAwYBV0IAAAAAhgi4CGUDBgFgQgAAAACGCBMY
bAMHAWhCAAAAAIYIHhhyAwcBcUIAAAAAhgj8IqgCCAF5QgAAAACGCBQjrAIIAYJCAAAAAIYIEgKo
AgkBikIAAAAAhgg0AqwCCQGTQgAAAACGCLwRegAKAZtCAAAAAIYIzhFhAgoBpEIAAAAAhgheI7kA
CwGsQgAAAACGCG0jEAALAbVCAAAAAIYIkCK5AAwBvUIAAAAAhgicIhAADAHGQgAAAACGCGIBeQMN
Ac5CAAAAAIYIdgF9Aw0B10IAAAAAhghWDnkDDgHfQgAAAACGCGcOfQMOAehCAAAAAIYIfwC5AA8B
8EIAAAAAhgiGABAADwFbPwAAAACGGL8gAQAQAflCAAAAAIYIQwG5ABABAUMAAAAAhghOARAAEAEK
QwAAAACGCK4IuQARARJDAAAAAIYIuAgQABEBWz8AAAAAhhi/IAEAEgEbQwAAAACGCIwHegASASND
AAAAAIYImwdhAhIBWz8AAAAAhhi/IAEAEwEsQwAAAACGCN8hggMTATRDAAAAAIYI7CGIAxMBWz8A
AAAAhhi/IAEAFAE9QwAAAACGCF8NjwMUAUVDAAAAAIYIeg2WAxQBTkMAAAAAhgjQDZ4DFQFWQwAA
AACGCOwNpQMVAV9DAAAAAIYIaAytAxYBZ0MAAAAAhgiMDLQDFgFwQwAAAACGCN8LvAMXAXhDAAAA
AIYIAgzDAxcBgUMAAAAAhgj0DMsDGAGJQwAAAACGCA0N0gMYAVs/AAAAAIYYvyABABkBkkMAAAAA
hgiNALkAGQGaQwAAAACGCJ4AEAAZAaNDAAAAAIYIrgjaAxoBq0MAAAAAhgi4COADGgG0QwAAAACG
CBMY5wMbAbxDAAAAAIYIHhjtAxsBxUMAAAAAhghYJPQDHAHNQwAAAACGCGYk+AMcAdZDAAAAAIYI
5QC5AB0B3kMAAAAAhgj6ABAAHQHnQwAAAACGCNwjegAeAe9DAAAAAIYI6CNhAh4BWz8AAAAAhhi/
IAEAHwH4QwAAAACGCBgIuQAfAQBEAAAAAIYIJwgQAB8BCUQAAAAAhgj1DrkAIAERRAAAAACGCAIP
EAAgARpEAAAAAIYIQwG5ACEBIkQAAAAAhghOARAAIQErRAAAAACGCK4IuQAiATNEAAAAAIYIuAgQ
ACIBPEQAAAAAhgh0JP0DIwFERAAAAACGCIEkAQQjAVs/AAAAAIYYvyABACQBTUQAAAAAhghEDrkA
JAFVRAAAAACGCE0OEAAkAV5EAAAAAIYImQ65ACUBZkQAAAAAhginDhAAJQFvRAAAAACGCEUSqAIm
AXdEAAAAAIYIUxKsAiYBgEQAAAAAhgjxGqgCJwGIRAAAAACGCP8arAInAZFEAAAAAIYImgioAigB
mUQAAAAAhgikCKwCKAGiRAAAAACGCG0A/QMpAapEAAAAAIYIdgABBCkBs0QAAAAAhgiACKgCKgG7
RAAAAACGCI0IrAIqAcREAAAAAIYIgAt6ACsBzEQAAAAAhgiPC2ECKwHVRAAAAACGCMoiqAIsAd1E
AAAAAIYI4yKsAiwBWz8AAAAAhhi/IAEALQHmRAAAAACGCI0AuQAtAe5EAAAAAIYIngAQAC0B90QA
AAAAhgiuCAYELgH/RAAAAACGCLgIDAQuAQhFAAAAAIYIExgTBC8BEEUAAAAAhggeGBkELwEZRQAA
AACGCIIRuQAwASFFAAAAAIYIjxEQADABKkUAAAAAhgicEbkAMQEyRQAAAACGCKkREAAxATtFAAAA
AIYI7hd+AjIBQ0UAAAAAhgj3F2YCMgFMRQAAAACGCMYBegAzAVRFAAAAAIYI2AFhAjMBXUUAAAAA
hgi0KH4CNAFlRQAAAACGCL8oZgI0AW5FAAAAAIYI6gF6ADUBdkUAAAAAhgj+AWECNQF/RQAAAACG
CNwjegA2AYdFAAAAAIYI6CNhAjYBkEUAAAAAhgjlALkANwGYRQAAAACGCPoAEAA3AVs/AAAAAIYY
vyABADgBoUUAAAAAhggYCLkAOAGpRQAAAACGCCcIEAA4AbJFAAAAAIYI9Q65ADkBukUAAAAAhggC
DxAAOQHDRQAAAACGCEMBuQA6ActFAAAAAIYITgEQADoB1EUAAAAAhgiuCLkAOwHcRQAAAACGCLgI
EAA7AeVFAAAAAIYIdCT0AzwB7UUAAAAAhgiBJPgDPAFbPwAAAACGGL8gAQA9AfZFAAAAAIYIRA65
AD0B/kUAAAAAhghNDhAAPQEHRgAAAACGCJkOuQA+AQ9GAAAAAIYIpw4QAD4BGEYAAAAAhghFEqgC
PwEgRgAAAACGCFMSrAI/ASlGAAAAAIYI8RqoAkABMUYAAAAAhgj/GqwCQAE6RgAAAACGCJoIqAJB
AUJGAAAAAIYIpAisAkEBS0YAAAAAhghtACAEQgFTRgAAAACGCHYAJARCAVxGAAAAAIYIgAioAkMB
ZEYAAAAAhgiNCKwCQwFtRgAAAACGCIALegBEAXVGAAAAAIYIjwthAkQBfkYAAAAAhgjKIqgCRQGG
RgAAAACGCOMirAJFAVs/AAAAAIYYvyABAEYBj0YAAAAAhgiNALkARgGXRgAAAACGCJ4AEABGAaBG
AAAAAIYIrggpBEcBqEYAAAAAhgi4CC8ERwGxRgAAAACGCBMYNgRIAblGAAAAAIYIHhg8BEgBwkYA
AAAAhgiqB3oASQHKRgAAAACGCMEHYQJJAdNGAAAAAIYI2Ad6AEoB20YAAAAAhgjwB2ECSgHkRgAA
AACGCCkSqAJLAexGAAAAAIYINxKsAksB9UYAAAAAhghFEqgCTAH9RgAAAACGCFMSrAJMAQZHAAAA
AIYIERxDBE0BDkcAAAAAhggoHEoETQEXRwAAAACGCOUAuQBOAR9HAAAAAIYI+gAQAE4BKEcAAAAA
hgjcI3oATwEwRwAAAACGCOgjYQJPAVs/AAAAAIYYvyABAFABOUcAAAAAhggYCLkAUAFBRwAAAACG
CCcIEABQAUpHAAAAAIYI9Q65AFEBUkcAAAAAhggCDxAAUQFbRwAAAACGCEMBuQBSAWNHAAAAAIYI
TgEQAFIBbEcAAAAAhgiuCLkAUwF0RwAAAACGCLgIEABTAX1HAAAAAIYIdCT0A1QBhUcAAAAAhgiB
JPgDVAFbPwAAAACGGL8gAQBVAY5HAAAAAIYIRA65AFUBlkcAAAAAhghNDhAAVQGfRwAAAACGCJkO
uQBWAadHAAAAAIYIpw4QAFYBsEcAAAAAhghFEqgCVwG4RwAAAACGCFMSrAJXAcFHAAAAAIYI8Rqo
AlgByUcAAAAAhgj/GqwCWAHSRwAAAACGCJoIqAJZAdpHAAAAAIYIpAisAlkB40cAAAAAhghtAPQD
WgHrRwAAAACGCHYA+ANaAfRHAAAAAIYIgAioAlsB/EcAAAAAhgiNCKwCWwEFSAAAAACGCIALegBc
AQ1IAAAAAIYIjwthAlwBFkgAAAAAhgjKIqgCXQEeSAAAAACGCOMirAJdAVs/AAAAAIYYvyABAF4B
J0gAAAAAhggTEqgCXgEvSAAAAACGCB4SrAJeAThIAAAAAIYIRCT0A18BQEgAAAAAhghOJPgDXwFb
PwAAAACGGL8gAQBgAUlIAAAAAIYIjQC5AGABUUgAAAAAhgieABAAYAFaSAAAAACGCK4IUgRhAWJI
AAAAAIYIuAhYBGEBa0gAAAAAhggTGF8EYgFzSAAAAACGCB4YZQRiAXxIAAAAAIYIHiL0A2MBhEgA
AAAAhgg5IvgDYwGNSAAAAACGCOUbbARkAZVIAAAAAIYI+xtzBGQBnkgAAAAAhgjcI3oAZQGmSAAA
AACGCOgjYQJlAa9IAAAAAIYI5QC5AGYBt0gAAAAAhgj6ABAAZgFbPwAAAACGGL8gAQBnAcBIAAAA
AIYIGAi5AGcByEgAAAAAhggnCBAAZwHRSAAAAACGCPUOuQBoAdlIAAAAAIYIAg8QAGgB4kgAAAAA
hghDAbkAaQHqSAAAAACGCE4BEABpAfNIAAAAAIYIrgi5AGoB+0gAAAAAhgi4CBAAagEESQAAAACG
CHQk9ANrAQxJAAAAAIYIgST4A2sBWz8AAAAAhhi/IAEAbAEVSQAAAACGCEQOuQBsAR1JAAAAAIYI
TQ4QAGwBJkkAAAAAhgiZDrkAbQEuSQAAAACGCKcOEABtATdJAAAAAIYIRRKoAm4BP0kAAAAAhghT
EqwCbgFISQAAAACGCPEaqAJvAVBJAAAAAIYI/xqsAm8BWUkAAAAAhgiaCKgCcAFhSQAAAACGCKQI
rAJwAWpJAAAAAIYIbQD9A3EBckkAAAAAhgh2AAEEcQF7SQAAAACGCIAIqAJyAYNJAAAAAIYIjQis
AnIBjEkAAAAAhgiAC3oAcwGUSQAAAACGCI8LYQJzAZ1JAAAAAIYIyiKoAnQBpUkAAAAAhgjjIqwC
dAFbPwAAAACGGL8gAQB1Aa5JAAAAAIYIbhG5AHUBtkkAAAAAhgh4ERAAdQG/SQAAAACGCEQk9AN2
AcdJAAAAAIYITiT4A3YBWz8AAAAAhhi/IAEAdwHQSQAAAACGCI0AuQB3AdhJAAAAAIYIngAQAHcB
4UkAAAAAhgiuCHsEeAHpSQAAAACGCLgIgQR4AfJJAAAAAIYIExiIBHkB+kkAAAAAhggeGI4EeQED
SgAAAACGCCwjlQR6AQtKAAAAAIYIQSOcBHoBFEoAAAAAhgjlALkAewEcSgAAAACGCPoAEAB7ASVK
AAAAAIYI3CN6AHwBLUoAAAAAhgjoI2ECfAFbPwAAAACGGL8gAQB9ATZKAAAAAIYIGAi5AH0BPkoA
AAAAhggnCBAAfQFHSgAAAACGCPUOuQB+AU9KAAAAAIYIAg8QAH4BWEoAAAAAhghDAbkAfwFgSgAA
AACGCE4BEAB/AWlKAAAAAIYIrgi5AIABcUoAAAAAhgi4CBAAgAF6SgAAAACGCHQk9AOBAYJKAAAA
AIYIgST4A4EBWz8AAAAAhhi/IAEAggGLSgAAAACGCEQOuQCCAZNKAAAAAIYITQ4QAIIBnEoAAAAA
hgiZDrkAgwGkSgAAAACGCKcOEACDAa1KAAAAAIYIRRKoAoQBtUoAAAAAhghTEqwChAG+SgAAAACG
CPEaqAKFAcZKAAAAAIYI/xqsAoUBz0oAAAAAhgiaCKgChgHXSgAAAACGCKQIrAKGAeBKAAAAAIYI
bQD0A4cB6EoAAAAAhgh2APgDhwHxSgAAAACGCIAIqAKIAflKAAAAAIYIjQisAogBAksAAAAAhgiA
C3oAiQEKSwAAAACGCI8LYQKJARNLAAAAAIYIyiKoAooBG0sAAAAAhgjjIqwCigFbPwAAAACGGL8g
AQCLASRLAAAAAIYIVCi5AIsBLEsAAAAAhghiKBAAiwE1SwAAAACGCNEoqAKMAT1LAAAAAIYI3yis
AowBWz8AAAAAhhi/IAEAjQFGSwAAAACRCCQBpASNAVxLAAAAAJYArBapBI0BgEsAAAAAlgAbAa8E
jgHJSwAAAACWAC0BrwSPAVs/AAAAAIMYvyABAJAB20sAAAAAkwhIILYEkAEHTAAAAACTCLUOvASQ
AQ5MAAAAAJMIwQ7CBJABFkwAAAAAlggKJMkEkQEdTAAAAACGGL8gAQCRASVMAAAAAJEYxSDPBJEB
AAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
AEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAAD
AF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYR
AAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4c
AAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAAD
AF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEg
AAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYR
AAABALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABAEEg
AAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABAEEgAAACAFQiAAADAF4cAAABALYRAAABALYRAAABALYRAAABALYRAAABAMAjAAACAMwg
AAADAFYjAAAEAF4cAAABADokAAABADokAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYR
AAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAAB
ALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABALYRAAABAIsiAAABAIsiAAABAIsi
AAABALYRCQC/IAEAEQC/IAUAGQC/IAEAIQC/IAoAMQC/IBAAOQC/IBAAQQC/IBAASQC/IBAAUQC/
IBAAWQC/IBAAYQC/IBAAaQC/IBAAcQC/IAEAsQC/IAEAuQC/IAEAwQC/IBAAyQC/IAEA0QC/IBAA
2QC/IAEA+QC/IAEAGQG/IBUAKQG/IAEAoQBXEQEAoQBiEQEAMQFIKGAAgQC/IGoAgQDLFnQAgQCZ
FgUAOQG/IBAAgQDKKAEAgQD7IwEAgQD+I3oAoQC/IAEAoQAPAYIAoQBoIokAqQC/IAEAoQDJIY8A
UQHCFpUAoQCfKJwAWQFwKKIA4QC/IAEAeQG/IAEAgQG/IKkAiQErDxAAiQENEgEA6QCoG68AcQHd
F7kAkQG/IAEAkQF/Er0A8QAPD8QAoQGwC9EAsQG/INoAsQHgEeEA4QDgEecAoQHtKPMAAQG/IPkA
IQG/IAEALgALAPYFLgATAPsFLgAbAAQGLgAjACMGLgArACwGLgAzAFUGLgA7AFUGLgBDAFUGLgBL
ACwGLgBTAFsGLgBbAFUGLgBjAHIGQwBrAPYFIwNzALwGIwN7ABgHQwNzALwGYwNzALwGgwNzALwG
owNzALwGwwNzALwG4wNzALwGAwRzALwGIwRzALwGQwRzALwGYwRzALwGgwRzALwGowRzALwGwwRz
ALwG4wRzALwGAwVzALwGIwVzALwGQwVzALwGYwVzALwGgwVzALwGowVzALwGwwVzALwG4wVzALwG
AwZzALwGIwZzALwGQwZzALwGYwZzALwGgwZzALwGowZzALwGwwZzALwG4wZzALwGAwdzALwGIwdz
ALwGQwdzALwGYwdzALwGgwdzALwGowdzALwGwwdzALwG4wdzALwGAwgLAPYFIwijAPYFKRODAHEH
qROLAPYFyROLAPYFSRWLAPYFaRWLAPYFiRWLAPYFqRWLAPYFKRaLAPYFSRaLAPYFaRaLAPYFiRaL
APYFSReLAPYFaReLAPYFiReLAPYFqReLAPYFaRiLAPYFiRiLAPYFqRiLAPYFyRiLAPYFKRqLAPYF
QRqzAPYFSRqLAPYFaRqLAPYFiRqLAPYFyRqTAJIH6RqTAK4HCRuTAMsHKRuTAPAHSRuTABQI6RuL
APYFCRyLAPYFKRyLAPYFSRyLAPYFaRyLAPYFiRyLAPYFqRyLAPYFyRyLAPYF6RyLAPYFCR2LAPYF
KR2LAPYFSR2LAPYFaR2LAPYFiR2LAPYFqR2LAPYFyR2LAPYFqR6bAPYF6R6bAPYFCR+LAPYFKR+L
APYFSR+LAPYFaR+LAPYFiR+LAPYFqR+LAPYFyR+LAPYF6R+LAPYFCSCLAPYFKSCLAPYFSSCLAPYF
aSCLAPYFiSCLAPYFqSCLAPYFySCLAPYF6SCLAPYF6SGDAC4ICSKLAPYFKSKLAPYFSSKLAPYFaSKL
APYFiSKLAPYFqSKLAPYFySKLAPYF6SKLAPYFCSOLAPYFKSOLAPYFSSOLAPYFaSOLAPYFiSOLAPYF
qSOLAPYFySOLAPYF6SOLAPYFySSDAFgI6SSLAPYFCSWLAPYFKSWLAPYFSSWLAPYFaSWLAPYFiSWL
APYFqSWLAPYFySWLAPYF6SWLAPYFCSaLAPYFKSaLAPYFSSaLAPYFaSaLAPYFiSaLAPYFqSaLAPYF
ySaLAPYFiSeDAIEIqSeLAPYFySeLAPYF6SeLAPYFCSiLAPYFKSiLAPYFSSiLAPYFaSiLAPYFiSiL
APYFqSiLAPYFySiLAPYF6SiLAPYFCSmLAPYFKSmLAPYFSSmLAPYFaSmLAPYFiSmLAPYFCSqrACMG
KSqrACMGoFALAPYFwFALAPYF4FALAPYFHAB+ALQAAwABAAQABwAFABUABgAZAAcAIQAIACcACQAr
AAoAPQALAEUADABJAA0AWwAOAGUADwBpABAAcQARAH0AEgCBABMAhwAUAIsAFQCTABgAlwAZAJgA
GgCcABsAnwAcAKIAHQCnAB4AqwAfAK0AIACuACEAsgAiALQAIwC1ACQAuwAlAL0AJgC+ACcAxAAo
AMYAKQDHACoA0gArANQALADVAC0A1gAuANsALwDhADAA5gAxAO8AMgD6ADMA/wA0AAgBNQASATYA
FwE3ACABOAAiATkAKQE6AC4BOwA3ATwAOQE9AD8BPgBEAT8ATQFAAE8BQQBQAUIAUgEAAM4A0wQA
APYS1wQAABgB0wQAACYT1wQAAHMO0wQAAJIU1wQAAKIA0wQAAN4S1wQAAMUH1wQAANsT1wQAAPQH
1wQAAPkT1wQAAOwj1wQAAAEW1wQAAFcS2wQAACsV1wQAADsS2wQAABYV1wQAAP4A0wQAABgT1wQA
AFoS2wQAAC4V1wQAAIgk2wQAAD0W1wQAAKIA0wQAAN4S1wQAAOwj1wQAAAEW1wQAAGok2wQAACUW
1wQAAP4A0wQAABgT1wQAAKIA0wQAAN4S1wQAAOwj1wQAAAEW1wQAAP4A0wQAABgT1wQAAGYo0wQA
AGEW1wQAAOMo2wQAAIgW1wQAAKIA0wQAAN4S1wQAAOwj1wQAAAEW1wQAAK0R0wQAAPAU1wQAAPsX
3wQAAEAV1wQAANwB1wQAAEYT1wQAAJMR0wQAANwU1wQAAP4A0wQAABgT1wQAAMMo3wQAAHYW1wQA
AAIC1wQAAF8T1wQAAKIA0wQAAN4S1wQAAOwj1wQAAAEW1wQAAD0i2wQAAHcV1wQAAP4A0wQAABgT
1wQAALAR0wQAAPMU1wQAAIgk2wQAAD0W1wQAAJEI2wQAAEYU1wQAAJML1wQAAHwU1wQAAHoA2wQA
AMAS1wQAAFcS2wQAACsV1wQAAHMO0wQAAJIU1wQAAAMb2wQAAFAV1wQAAKgI2wQAAFoU1wQAAKsO
0wQAAKIU1wQAAOci2wQAAKwV1wQAAAYP0wQAALcU1wQAAEQI0wQAABgU1wQAAIUk2wQAADoW1wQA
AFIB0wQAADQT1wQAAHoL0wQAAGsU1wQAAKIA0wQAAN4S1wQAABgB0wQAACYT1wQAAKIA0wQAAN4S
1wQAAHUH3wQAAKMT1wQAABgB0wQAACYT1wQAAMQb0wQAAGUV1wQAAKIA0wQAAN4S1wQAAHEj0wQA
AOsV1wQAABgB0wQAACYT1wQAABgj2wQAAMwV1wQAADgC2wQAAHoT1wQAAKAi0wQAAJkV1wQAABgB
0wQAACYT1wQAAEQI0wQAABgU1wQAABgB0wQAACYT1wQAAFIB0wQAADQT1wQAAHoL0wQAAGsU1wQA
ABgB0wQAACYT1wQAAJ8H1wQAAMUT1wQAAKIA0wQAAN4S1wQAABgB0wQAACYT1wQAAMUH1wQAANsT
1wQAAPQH1wQAAPkT1wQAAHMI0wQAAC4U1wQAAKUn2wQAAE4W1wQAAMYL0wQAACQb3wQAACsh5AQA
AOIn6gQAACoo7wQAAM4A0wQAABgB0wQAAHMO0wQAAGMI0wQAAKUn9QQAALEj+QQAAM4m/gQAAFUn
AwUAAMElCQUAACIlDwUAAEsmFQUAAKIA0wQAAHoLGwUAAOoaIAUAABgB0wQAAFIB0wQAAHoL0wQA
AJ8H1wQAAKIA0wQAAHoLJQUAAOoaKwUAABgB0wQAAFIB0wQAAHoL0wQAAJ8H1wQAAKIA0wQAAHoL
MQUAAOoaNwUAAMUH1wQAAPQH1wQAABgB0wQAAFIB0wQAAHoL0wQAAJ8H1wQAAKIA0wQAAHoLPQUA
AOoaQwUAAMQb0wQAAHUH3wQAABgB0wQAAFIB0wQAAHoL0wQAAJ8H1wQAAKIA0wQAAHoLSQUAAOoa
TwUAABgj9QQAADgC9QQAANIR1wQAAHEj0wQAAKAi0wQAAHoBVQUAAGsOVQUAABgB0wQAAFIB0wQA
AHoL0wQAAJ8H1wQAABUiWQUAALkNXwUAACwOZgUAANQMbQUAAEkMdAUAAEoNewUAAKIA0wQAAHoL
ggUAAOoaiAUAAGokjgUAAP4A0wQAAOwj1wQAAEQI0wQAAAYP0wQAAFIB0wQAAHoL0wQAAIUkkgUA
AHMO0wQAAKsO0wQAAFcS9QQAAAMb9QQAAKgI9QQAAHoAkgUAAJEI9QQAAJML1wQAAOci9QQAAKIA
0wQAAHoLlgUAAOoanAUAAJMR0wQAAK0R0wQAAPsX3wQAANwB1wQAAMMo3wQAAAIC1wQAAOwj1wQA
AP4A0wQAAEQI0wQAAAYP0wQAAFIB0wQAAHoL0wQAAIUkjgUAAHMO0wQAAKsO0wQAAFcS9QQAAAMb
9QQAAKgI9QQAAHoAogUAAJEI9QQAAJML1wQAAOci9QQAAKIA0wQAAHoLpgUAAOoarAUAAMUH1wQA
APQH1wQAADsS9QQAAFcS9QQAACwcsgUAAP4A0wQAAOwj1wQAAEQI0wQAAAYP0wQAAFIB0wQAAHoL
0wQAAIUkjgUAAHMO0wQAAKsO0wQAAFcS9QQAAAMb9QQAAKgI9QQAAHoAjgUAAJEI9QQAAJML1wQA
AOci9QQAAFoS9QQAAIgkjgUAAKIA0wQAAHoLuQUAAOoavwUAAD0ijgUAAP8bxQUAAOwj1wQAAP4A
0wQAAEQI0wQAAAYP0wQAAFIB0wQAAHoL0wQAAIUkjgUAAHMO0wQAAKsO0wQAAFcS9QQAAAMb9QQA
AKgI9QQAAHoAkgUAAJEI9QQAAJML1wQAAOci9QQAALAR0wQAAIgkjgUAAKIA0wQAAHoLzAUAAOoa
0gUAAEUj2AUAAP4A0wQAAOwj1wQAAEQI0wQAAAYP0wQAAFIB0wQAAHoL0wQAAIUkjgUAAHMO0wQA
AKsO0wQAAFcS9QQAAAMb9QQAAKgI9QQAAHoAjgUAAJEI9QQAAJML1wQAAOci9QQAAGYo0wQAAOMo
9QQAADIB3wUAAEwg5AUAANUO6gUAAA4k8AUBAAYAAwABAAcABQABAAgABwABAAkACQABAAoACwAB
AAsADQABABAADwABABEAEQABABIAEwABABMAFQABABQAFwABABUAGQABABYAGwABABcAHQABABgA
HwABABkAIQABABoAIwABABsAJQABABwAJwABAB0AKQABACIAKwABACMALQABACQALwABACUAMQAB
ACoAMwABACsANQABACwANwABAC0AOQABAC4AOwABAC8APQABADAAPwABADEAQQABADYAQwABADcA
RQABADgARwABADkASQABADoASwABADsATQABAEAATwABAEEAUQABAEIAUwABAEMAVQABAEgAVwAB
AEkAWQABAEoAWwABAEsAXQABAEwAXwABAE0AYQABAE4AYwABAE8AZQABAFAAZwABAFEAaQABAFIA
awABAFMAbQABAFQAbwABAFUAcQABAFYAcwABAFcAdQABAFgAdwABAFkAeQABAF4AewABAF8AfQAB
AGAAfwABAGEAgQABAGIAgwABAGMAhQABAGQAhwABAGUAiQABAGoAiwABAGsAjQABAGwAjwABAG0A
kQABAHIAkwABAHMAlQABAHQAlwABAHUAmQABAHYAmwABAHcAnQABAHgAnwABAHkAoQABAHoAowAB
AHsApQABAHwApwABAH0AqQABAH4AqwABAH8ArQABAIAArwABAIEAsQABAIIAswABAIMAtQABAIgA
twABAIkAuQABAIoAuwABAIsAvQABAIwAvwABAI0AwQABAI4AwwABAI8AxQABAJAAxwABAJEAyQAB
AJYAywABAJcAzQABAJgAzwABAJkA0QABAJ4A0wABAJ8A1QABAKAA1wABAKEA2QABAKIA2wABAKMA
3QABAKQA3wABAKUA4QABAKoA4wABAKsA5QABAKwA5wABAK0A6QABAK4A6wABAK8A7QABALAA7wAB
ALEA8QABALIA8wABALMA9QABALQA9wABALUA+QABALoA+wABALsA/QABALwA/wABAL0AAQEBAMIA
AwEBAMMABQEBAMQABwEBAMUACQEBAMYACwEBAMcADQEBAMwADwEBAM0AEQEBAM4AEwEBAM8AFQEB
ANQAFwEBANUAGQEBANYAGwEBANcAHQEBANgAHwEBANkAIQEBANoAIwEBANsAJQEBAOAAJwEBAOEA
KQEBAOIAKwEBAOMALQECAO4ALwECAO8AMQEBAPAAMQECAPEAMwEBAPIAMwECAPMANQEBAPQANQEC
APUANwEBAPYANwECAPgAOQEBAPkAOQECAPoAOwEBAPsAOwECAPwAPQEBAP0APQECAP8APwEBAAAB
PwECAAEBQQEBAAIBQQECAAMBQwEBAAQBQwECAAYBRQEBAAcBRQECAAgBRwEBAAkBRwECAAoBSQEB
AAsBSQECAAwBSwEBAA0BSwECAA4BTQEBAA8BTQECABEBTwEBABIBTwECABMBUQEBABQBUQECABUB
UwEBABYBUwECABcBVQEBABgBVQECABoBVwEBABsBVwECABwBWQEBAB0BWQECAB8BWwEBACABWwEC
ACIBXQEBACMBXQECACQBXwEBACUBXwECACYBYQEBACcBYQECACgBYwEBACkBYwECACsBZQEBACwB
ZQECAC0BZwEBAC4BZwECADABaQEBADEBaQECADMBawEBADQBawECADUBbQEBADYBbQECADcBbwEB
ADgBbwECADkBcQEBADoBcQECADsBcwEBADwBcwECAD0BdQEBAD4BdQECAEABdwEBAEEBdwECAEIB
eQEBAEMBeQECAEUBewEBAEYBewECAEgBfQEBAEkBfQECAEoBfwEBAEsBfwECAEwBgQEBAE0BgQEC
AE4BgwEBAE8BgwECAFABhQEBAFEBhQECAFIBhwEBAFMBhwECAFUBiQEBAFYBiQECAFcBiwEBAFgB
iwECAFoBjQEBAFsBjQECAF0BjwEBAF4BjwECAF8BkQEBAGABkQECAGEBkwEBAGIBkwECAGMBlQEB
AGQBlQECAGUBlwEBAGYBlwECAGcBmQEBAGgBmQECAGkBmwEBAGoBmwECAGsBnQEBAGwBnQECAG0B
nwEBAG4BnwECAG8BoQEBAHABoQECAHEBowEBAHIBowECAHQBpQEBAHUBpQECAHYBpwEBAHcBpwEC
AHkBqQEBAHoBqQECAHwBqwEBAH0BqwECAH8BrQEBAIABrQECAIEBrwEBAIIBrwECAIMBsQEBAIQB
sQECAIUBswEBAIYBswECAIcBtQEBAIgBtQECAIoBtwEBAIsBtwECAIwBuQEBAI0BuQECAI4BuwEB
AI8BuwECAJABvQEBAJEBvQECAJIBvwEBAJMBvwECAJQBwQEBAJUBwQECAJcBwwEBAJgBwwECAJkB
xQEBAJoBxQECAJsBxwEBAJwBxwECAJ0ByQEBAJ4ByQECAJ8BywEBAKABywECAKIBzQEBAKMBzQEC
AKQBzwEBAKUBzwECAKYB0QEBAKcB0QECAKgB0wEBAKkB0wECAKoB1QEBAKsB1QECAKwB1wEBAK0B
1wECAK4B2QEBAK8B2QECALAB2wEBALEB2wECALIB3QEBALMB3QECALUB3wEBALYB3wECALcB4QEB
ALgB4QECALkB4wEBALoB4wECALsB5QEBALwB5QECAL0B5wEBAL4B5wECAL8B6QEBAMAB6QECAMEB
6wEBAMIB6wECAMMB7QEBAMQB7QECAMUB7wEBAMYB7wECAMcB8QEBAMgB8QECAMkB8wEBAMoB8wEC
AMwB9QEBAM0B9QECAM4B9wEBAM8B9wECANAB+QEBANEB+QECANIB+wEBANMB+wECANQB/QEBANUB
/QECANcB/wEBANgB/wECANkBAQIBANoBAQICANsBAwIBANwBAwICAN0BBQIBAN4BBQICAN8BBwIB
AOABBwICAOEBCQIBAOIBCQICAOMBCwIBAOQBCwICAOUBDQIBAOYBDQICAOcBDwIBAOgBDwICAOoB
EQIBAOsBEQICAOwBEwIBAO0BEwICAO4BFQIBAO8BFQICAPABFwIBAPEBFwICAPIBGQIBAPMBGQIC
APQBGwIBAPUBGwICAPYBHQIBAPcBHQICAPgBHwIBAPkBHwICAPoBIQIBAPsBIQICAPwBIwIBAP0B
IwICAP8BJQIBAAACJQICAAECJwIBAAICJwICAAMCKQIBAAQCKQICAAUCKwIBAAYCKwICAAcCLQIB
AAgCLQICAAoCLwIBAAsCLwICAAwCMQIBAA0CMQICAA4CMwIBAA8CMwICABACNQIBABECNQICABIC
NwIBABMCNwICABQCOQIBABUCOQICABYCOwIBABcCOwICABgCPQIBABkCPQICABoCPwIBABsCPwIC
AB0CQQIBAB4CQQICAB8CQwIBACACQwICACICRQIBACMCRQICACQCRwIBACUCRwICACYCSQIBACcC
SQICACgCSwIBACkCSwICACoCTQIBACsCTQICACwCTwIBAC0CTwICAC4CUQIBAC8CUQICADECUwIB
ADICUwICADMCVQIBADQCVQICADUCVwIBADYCVwICADcCWQIBADgCWQICADkCWwIBADoCWwICADwC
XQIBAD0CXQICAD4CXwIBAD8CXwICAEACYQIBAEECYQICAEICYwIBAEMCYwICAEQCZQIBAEUCZQIC
AEYCZwIBAEcCZwICAEgCaQIBAEkCaQICAEoCawIBAEsCawICAEwCbQIBAE0CbQICAE8CbwIBAFAC
bwICAFECcQIBAFICcQICAFQCcwIBAFUCcwICAFYCdQIBAFcCdQICAFgCdwIBAFkCdwICAFoCeQIB
AFsCeQICAFwCewIBAF0CewICAF4CfQIBAF8CfQICAGECfwIBAGICfwICAGMCgQIBAGQCgQICAGUC
gwIBAGYCgwICAGcChQIBAGgChQICAGkChwIBAGoChwICAGwCiQIBAG0CiQICAG4CiwIBAG8CiwIC
AHACjQIBAHECjQICAHICjwIBAHMCjwICAHQCkQIBAHUCkQICAHYCkwIBAHcCkwICAHgClQIBAHkC
lQICAHoClwIBAHsClwICAHwCmQIBAH0CmQICAH8CmwIBAIACmwICAIECnQIBAIICnQICAIQCnwIC
AIkCoQICAIoCowIBAIsCowICAIwCpQLOAASAAAABAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAAAAAAA
AAABAVkBAAAAAA0AAAAAAAAAAAAAAAoBjiQAAAAADQAAAAAAAAAAAAAACgF0JwAAAAAEAAAAAAAA
AAAAAAABAaEWAAAAAAQAAAAAAAAAAAAAABMBqCIAAAAABAAAAAAAAAAAAAAAAQHWFwAAAAANAAAA
AAAAAAAAAAAKAWgcAAAAAAAAAAABAAAASCEAAAAABAANBUEBAAAEAA8FQQEMBWUAbQDuAAAAAAAA
SURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAA
SW50MzIAU0NfMDZhMGUzZDViMmQ1NGVlZWJlZThiYzQzOTE5NmM4MzkAPE1vZHVsZT4AZ2V0X0xD
SUQAc2V0X0xDSUQAZ2V0X0lEAHNldF9JRABnZXRfRGF0YVNvdXJjZUlEAHNldF9EYXRhU291cmNl
SUQAZ2V0X0R0c0Nvbm5lY3Rpb25NYW5hZ2VySUQAc2V0X0R0c0Nvbm5lY3Rpb25NYW5hZ2VySUQA
Z2V0X1Byb2ZpbGVSZXF1ZXN0SUQAc2V0X1Byb2ZpbGVSZXF1ZXN0SUQAR2V0T3V0cHV0SUQAUGFy
c2VYTUwAZ2V0X0pTT04AUGFyc2VKU09OAFN5c3RlbS5JTwBUAGdldF9TY2hlbWEAc2V0X1NjaGVt
YQBtc2NvcmxpYgBnZXRfVGFnRGF0YVNvdXJjZUlkAHNldF9UYWdEYXRhU291cmNlSWQATWFya091
dHB1dHNGaW5pc2hlZABtZWFuRmllbGRTcGVjaWZpZWQAc3RkRGV2RmllbGRTcGVjaWZpZWQAZ2V0
X01lYW5TcGVjaWZpZWQAc2V0X01lYW5TcGVjaWZpZWQAZ2V0X1N0ZERldlNwZWNpZmllZABzZXRf
U3RkRGV2U3BlY2lmaWVkAGdldF9QZXJjZW50YWdlRGF0YUNvdmVyYWdlRGVzaXJlZABzZXRfUGVy
Y2VudGFnZURhdGFDb3ZlcmFnZURlc2lyZWQAbENJREZpZWxkAGRhdGFTb3VyY2VJREZpZWxkAGR0
c0Nvbm5lY3Rpb25NYW5hZ2VySURGaWVsZABwcm9maWxlUmVxdWVzdElERmllbGQAc2NoZW1hRmll
bGQAdGFnRGF0YVNvdXJjZUlkRmllbGQAcGVyY2VudGFnZURhdGFDb3ZlcmFnZURlc2lyZWRGaWVs
ZABpZEZpZWxkAGZyZXF1ZW50VmFsdWVUaHJlc2hvbGRGaWVsZABpc1dpbGRDYXJkRmllbGQAaWdu
b3JlTGVhZGluZ1NwYWNlRmllbGQAaWdub3JlVHJhaWxpbmdTcGFjZUZpZWxkAGRhdGFTb3VyY2VG
aWVsZABwcm9maWxlTW9kZUZpZWxkAGNvZGVQYWdlRmllbGQAc2NhbGVGaWVsZABpc051bGxhYmxl
RmllbGQAdGFibGVGaWVsZABjb2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVGaWVsZABjb2x1
bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlRmllbGQAY29sdW1uUGF0dGVyblByb2ZpbGVGaWVs
ZABjb2x1bW5OdWxsUmF0aW9Qcm9maWxlRmllbGQAY29sdW1uU3RhdGlzdGljc1Byb2ZpbGVGaWVs
ZAB0YWdUYWJsZU5hbWVGaWVsZABuYW1lRmllbGQAc3FsRGJUeXBlRmllbGQAZGF0YWJhc2VGaWVs
ZABtaW5WYWx1ZUZpZWxkAG1heFZhbHVlRmllbGQAdmFsdWVGaWVsZABjYXNlU2Vuc2l0aXZlRmll
bGQAbWluTGVuZ3RoRmllbGQAbWF4TGVuZ3RoRmllbGQAbGVuZ3RoRmllbGQAbWVhbkZpZWxkAGNv
bHVtbkZpZWxkAHByZWNpc2lvbkZpZWxkAHByb2ZpbGVWZXJzaW9uRmllbGQAb3B0aW9uRmllbGQA
dmFsdWVEaXN0cmlidXRpb25GaWVsZABsZW5ndGhEaXN0cmlidXRpb25GaWVsZABkYXRhU291cmNl
c0ZpZWxkAHByb2ZpbGVzRmllbGQAbnVtYmVyT2ZEaXN0aW5jdFZhbHVlc0ZpZWxkAHN5bWJvbHNG
aWVsZABzdHJpbmdDb21wYXJlT3B0aW9uc0ZpZWxkAG1heE51bWJlck9mUGF0dGVybnNGaWVsZAB0
b3BSZWdleFBhdHRlcm5zRmllbGQAZGVsaW1pdGVyc0ZpZWxkAHJlcXVlc3RzRmllbGQAaXNFeGFj
dEZpZWxkAG51bGxDb3VudEZpZWxkAHJvd0NvdW50RmllbGQAY291bnRGaWVsZABjb2x1bW5WYWx1
ZURpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0RmllbGQAY29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9u
UHJvZmlsZVJlcXVlc3RGaWVsZABjb2x1bW5QYXR0ZXJuUHJvZmlsZVJlcXVlc3RGaWVsZABjb2x1
bW5OdWxsUmF0aW9Qcm9maWxlUmVxdWVzdEZpZWxkAGNvbHVtblN0YXRpc3RpY3NQcm9maWxlUmVx
dWVzdEZpZWxkAHRpbWVvdXRGaWVsZABkYXRhUHJvZmlsZUlucHV0RmllbGQAZGF0YVByb2ZpbGVP
dXRwdXRGaWVsZAByZWdleFRleHRGaWVsZABzdGREZXZGaWVsZABmcmVxdWVuY3lGaWVsZABnZXRf
RnJlcXVlbnRWYWx1ZVRocmVzaG9sZABzZXRfRnJlcXVlbnRWYWx1ZVRocmVzaG9sZABnZXRfSXNX
aWxkQ2FyZABzZXRfSXNXaWxkQ2FyZABnZXRfSWdub3JlTGVhZGluZ1NwYWNlAHNldF9JZ25vcmVM
ZWFkaW5nU3BhY2UAZ2V0X0lnbm9yZVRyYWlsaW5nU3BhY2UAc2V0X0lnbm9yZVRyYWlsaW5nU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAGdldF9EYXRhU291cmNlAHNldF9EYXRhU291cmNlAERhdGFQcm9m
aWxlRHRzRGF0YVNvdXJjZQBnZXRfUHJvZmlsZU1vZGUAc2V0X1Byb2ZpbGVNb2RlAHNldF9Qcm9m
aWxlck1vZGUAZ2V0X0NvZGVQYWdlAHNldF9Db2RlUGFnZQBnZXRfU2NhbGUAc2V0X1NjYWxlAGdl
dF9UYWJsZQBzZXRfVGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29s
dW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlVGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91
dHB1dFByb2ZpbGVzQ29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmlsZVRhYmxlAERhdGFQcm9m
aWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblBhdHRlcm5Qcm9maWxlVGFibGUARGF0
YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uTnVsbFJhdGlvUHJvZmlsZVRh
YmxlAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblN0YXRpc3RpY3NQ
cm9maWxlVGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5WYWx1
ZURpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0VGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlu
cHV0UmVxdWVzdHNDb2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdFRhYmxlAERh
dGFQcm9maWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uUGF0dGVyblByb2ZpbGVSZXF1
ZXN0VGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5OdWxsUmF0
aW9Qcm9maWxlUmVxdWVzdFRhYmxlAERhdGFQcm9maWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3Rz
Q29sdW1uU3RhdGlzdGljc1Byb2ZpbGVSZXF1ZXN0VGFibGUAZ2V0X0lzTnVsbGFibGUAc2V0X0lz
TnVsbGFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3ZDdXJyZW50
RmlsZQBEYXRhUHJvZmlsZQBnZXRfQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlAHNldF9D
b2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1
dFByb2ZpbGVzQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlAGdldF9Db2x1bW5MZW5ndGhE
aXN0cmlidXRpb25Qcm9maWxlAHNldF9Db2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlAERh
dGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtbkxlbmd0aERpc3RyaWJ1dGlv
blByb2ZpbGUAZ2V0X0NvbHVtblBhdHRlcm5Qcm9maWxlAHNldF9Db2x1bW5QYXR0ZXJuUHJvZmls
ZQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5QYXR0ZXJuUHJvZmls
ZQBnZXRfQ29sdW1uTnVsbFJhdGlvUHJvZmlsZQBzZXRfQ29sdW1uTnVsbFJhdGlvUHJvZmlsZQBE
YXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5OdWxsUmF0aW9Qcm9maWxl
AGdldF9Db2x1bW5TdGF0aXN0aWNzUHJvZmlsZQBzZXRfQ29sdW1uU3RhdGlzdGljc1Byb2ZpbGUA
RGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uU3RhdGlzdGljc1Byb2Zp
bGUAZ2V0X05hbWUAc2V0X05hbWUAZ2V0X1RhZ1RhYmxlTmFtZQBzZXRfVGFnVGFibGVOYW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9TcWxEYlR5cGUAc2V0X1NxbERiVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAZ2V0X0RhdGFiYXNlAHNldF9EYXRhYmFzZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAFhtbFR5cGVBdHRyaWJ1dGUAWG1sSWdub3JlQXR0cmlidXRl
AFhtbEF0dHJpYnV0ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAWG1sQXJyYXlJdGVtQXR0cmlidXRlAEV4dGVuc2lvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBYbWxFbGVtZW50QXR0cmlidXRlAFNTSVNT
Y3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFhtbFJvb3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1
dGUAUG9zdEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBnZXRfTWluVmFsdWUAc2V0X01pblZh
bHVlAGdldF9NYXhWYWx1ZQBzZXRfTWF4VmFsdWUAdmFsdWUAZ2V0X0Nhc2VTZW5zaXRpdmUAc2V0
X0Nhc2VTZW5zaXRpdmUARGVzZXJpYWxpemUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJp
bmcARmx1c2gAZ2V0X0xlbmd0aABzZXRfTGVuZ3RoAGdldF9NaW5MZW5ndGgAc2V0X01pbkxlbmd0
aABnZXRfTWF4TGVuZ3RoAHNldF9NYXhMZW5ndGgARGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAc2V0X0NvbmZvcm1hbmNlTGV2ZWwAU0NfMDZhMGUzZDViMmQ1NGVlZWJlZThiYzQzOTE5NmM4
MzkuZGxsAHNldF9MQ0lEX0lzTnVsbABzZXRfSURfSXNOdWxsAHNldF9EYXRhU291cmNlSURfSXNO
dWxsAHNldF9EdHNDb25uZWN0aW9uTWFuYWdlcklEX0lzTnVsbABzZXRfUHJvZmlsZVJlcXVlc3RJ
RF9Jc051bGwAc2V0X1NjaGVtYV9Jc051bGwAc2V0X01lYW5TcGVjaWZpZWRfSXNOdWxsAHNldF9T
dGREZXZTcGVjaWZpZWRfSXNOdWxsAHNldF9QZXJjZW50YWdlRGF0YUNvdmVyYWdlRGVzaXJlZF9J
c051bGwAc2V0X0ZyZXF1ZW50VmFsdWVUaHJlc2hvbGRfSXNOdWxsAHNldF9Jc1dpbGRDYXJkX0lz
TnVsbABzZXRfSWdub3JlTGVhZGluZ1NwYWNlX0lzTnVsbABzZXRfSWdub3JlVHJhaWxpbmdTcGFj
ZV9Jc051bGwAc2V0X0RhdGFTb3VyY2VfSXNOdWxsAHNldF9Qcm9maWxlck1vZGVfSXNOdWxsAHNl
dF9Db2RlUGFnZV9Jc051bGwAc2V0X1NjYWxlX0lzTnVsbABzZXRfVGFibGVfSXNOdWxsAHNldF9J
c051bGxhYmxlX0lzTnVsbABzZXRfTmFtZV9Jc051bGwAc2V0X1NxbERiVHlwZV9Jc051bGwAc2V0
X0RhdGFiYXNlX0lzTnVsbABzZXRfVmFsdWVfSXNOdWxsAHNldF9NaW5WYWx1ZV9Jc051bGwAc2V0
X01heFZhbHVlX0lzTnVsbABzZXRfTGVuZ3RoX0lzTnVsbABzZXRfTWluTGVuZ3RoX0lzTnVsbABz
ZXRfTWF4TGVuZ3RoX0lzTnVsbABzZXRfTWVhbl9Jc051bGwAc2V0X1ByZWNpc2lvbl9Jc051bGwA
c2V0X09wdGlvbl9Jc051bGwAc2V0X051bWJlck9mRGlzdGluY3RWYWx1ZXNfSXNOdWxsAHNldF9T
eW1ib2xzX0lzTnVsbABzZXRfU3RyaW5nQ29tcGFyZU9wdGlvbnNfSXNOdWxsAHNldF9NYXhOdW1i
ZXJPZlBhdHRlcm5zX0lzTnVsbABzZXRfRGVsaW1pdGVyc19Jc051bGwAc2V0X0lzRXhhY3RfSXNO
dWxsAHNldF9Db3VudF9Jc051bGwAc2V0X051bGxDb3VudF9Jc051bGwAc2V0X1Jvd0NvdW50X0lz
TnVsbABzZXRfVGltZW91dF9Jc051bGwAc2V0X1JlZ2V4VGV4dF9Jc051bGwAc2V0X1N0ZERldl9J
c051bGwAc2V0X0ZyZXF1ZW5jeV9Jc051bGwAU2V0TnVsbABTeXN0ZW0uWG1sAFRvU3RyZWFtAE1l
bW9yeVN0cmVhbQBnZXRfSXRlbQBzZXRfSXRlbQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0
UHJvZmlsZXNDb2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVWYWx1ZURpc3RyaWJ1dGlvbkl0
ZW0ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uTGVuZ3RoRGlzdHJp
YnV0aW9uUHJvZmlsZUxlbmd0aERpc3RyaWJ1dGlvbkl0ZW0ARGF0YVByb2ZpbGVEYXRhUHJvZmls
ZU91dHB1dFByb2ZpbGVzQ29sdW1uUGF0dGVyblByb2ZpbGVQYXR0ZXJuRGlzdHJpYnV0aW9uSXRl
bQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1hbgBnZXRfTWVhbgBzZXRfTWVhbgBCb29sZWFuAFNjcmlw
dE1haW4AZ2V0X0NvbHVtbgBzZXRfQ29sdW1uAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQ
cm9maWxlc0NvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJvZmlsZUNvbHVtbgBEYXRhUHJvZmlsZURh
dGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlQ29s
dW1uAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblBhdHRlcm5Qcm9m
aWxlQ29sdW1uAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtbk51bGxS
YXRpb1Byb2ZpbGVDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29s
dW1uU3RhdGlzdGljc1Byb2ZpbGVDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVx
dWVzdHNDb2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0Q29sdW1uAERhdGFQcm9m
aWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmls
ZVJlcXVlc3RDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5Q
YXR0ZXJuUHJvZmlsZVJlcXVlc3RDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVx
dWVzdHNDb2x1bW5OdWxsUmF0aW9Qcm9maWxlUmVxdWVzdENvbHVtbgBEYXRhUHJvZmlsZURhdGFQ
cm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtblN0YXRpc3RpY3NQcm9maWxlUmVxdWVzdENvbHVtbgBn
ZXRfUHJlY2lzaW9uAHNldF9QcmVjaXNpb24AZ2V0X1Byb2ZpbGVWZXJzaW9uAHNldF9Qcm9maWxl
VmVyc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
WG1sLlNlcmlhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBzZXRfUG9zaXRpb24AZ2V0X09wdGlvbgBzZXRfT3B0aW9uAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AZ2V0X1ZhbHVlRGlzdHJpYnV0aW9uAHNldF9WYWx1ZURpc3RyaWJ1dGlv
bgBnZXRfTGVuZ3RoRGlzdHJpYnV0aW9uAHNldF9MZW5ndGhEaXN0cmlidXRpb24AanNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAFhtbFJlYWRlcgBEYXRhU291cmNlQnVmZmVyAERhdGFQcm9maWxlT3V0cHV0UHJv
ZmlsZXNDb2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVCdWZmZXIARGF0YVByb2ZpbGVPdXRw
dXRQcm9maWxlc0NvbHVtbkxlbmd0aERpc3RyaWJ1dGlvblByb2ZpbGVCdWZmZXIARGF0YVByb2Zp
bGVPdXRwdXRQcm9maWxlc0NvbHVtblBhdHRlcm5Qcm9maWxlQnVmZmVyAERhdGFQcm9maWxlT3V0
cHV0UHJvZmlsZXNDb2x1bW5OdWxsUmF0aW9Qcm9maWxlQnVmZmVyAERhdGFQcm9maWxlT3V0cHV0
UHJvZmlsZXNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZUJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBEYXRh
UHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlVmFsdWVE
aXN0cmlidXRpb25CdWZmZXIARGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtbkxlbmd0aERp
c3RyaWJ1dGlvblByb2ZpbGVMZW5ndGhEaXN0cmlidXRpb25CdWZmZXIARGF0YVByb2ZpbGVPdXRw
dXRQcm9maWxlc0NvbHVtblBhdHRlcm5Qcm9maWxlVG9wUmVnZXhQYXR0ZXJuc0J1ZmZlcgBTY3Jp
cHRCdWZmZXIAQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdEJ1ZmZlcgBEYXRh
UHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVz
dEJ1ZmZlcgBEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5QYXR0ZXJuUHJvZmlsZVJlcXVl
c3RCdWZmZXIARGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uTnVsbFJhdGlvUHJvZmlsZVJl
cXVlc3RCdWZmZXIARGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uU3RhdGlzdGljc1Byb2Zp
bGVSZXF1ZXN0QnVmZmVyAFRhYmxlSW5wdXRCdWZmZXIAQ29sdW1uSW5wdXRCdWZmZXIARGF0YVBy
b2ZpbGVySW5wdXRCdWZmZXIAVGFibGVPdXRwdXRCdWZmZXIAQ29sdW1uT3V0cHV0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVy
AFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAFhtbFNlcmlhbGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6
ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MASGVscGVyTWV0aG9k
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAGdldF9EYXRhU291cmNlcwBzZXRfRGF0
YVNvdXJjZXMAU3lzdGVtLlJlc291cmNlcwBTQ18wNmEwZTNkNWIyZDU0ZWVlYmVlOGJjNDM5MTk2
YzgzOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMDZh
MGUzZDViMmQ1NGVlZWJlZThiYzQzOTE5NmM4MzkuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJp
YWJsZXMAZ2V0X1Byb2ZpbGVzAHNldF9Qcm9maWxlcwBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0
cHV0UHJvZmlsZXMAZ2V0X051bWJlck9mRGlzdGluY3RWYWx1ZXMAc2V0X051bWJlck9mRGlzdGlu
Y3RWYWx1ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFhtbFJlYWRlclNl
dHRpbmdzAHRoaXMAZ2V0X1N5bWJvbHMAc2V0X1N5bWJvbHMAU3lzdGVtLldlYi5FeHRlbnNpb25z
AENvbm5lY3Rpb25zAGdldF9TdHJpbmdDb21wYXJlT3B0aW9ucwBzZXRfU3RyaW5nQ29tcGFyZU9w
dGlvbnMAZ2V0X01heE51bWJlck9mUGF0dGVybnMAc2V0X01heE51bWJlck9mUGF0dGVybnMAZ2V0
X1RvcFJlZ2V4UGF0dGVybnMAc2V0X1RvcFJlZ2V4UGF0dGVybnMAQnVmZmVycwBnZXRfRGVsaW1p
dGVycwBzZXRfRGVsaW1pdGVycwBnZXRfUmVxdWVzdHMAc2V0X1JlcXVlc3RzAERhdGFQcm9maWxl
RGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93
cwBnZXRfSXNFeGFjdABzZXRfSXNFeGFjdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1
bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9Db3Vu
dABzZXRfQ291bnQAZ2V0X051bGxDb3VudABzZXRfTnVsbENvdW50AGdldF9Sb3dDb3VudABzZXRf
Um93Q291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABnZXRfQ29sdW1uVmFsdWVEaXN0
cmlidXRpb25Qcm9maWxlUmVxdWVzdABzZXRfQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxl
UmVxdWVzdABEYXRhUHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtblZhbHVlRGlz
dHJpYnV0aW9uUHJvZmlsZVJlcXVlc3QAZ2V0X0NvbHVtbkxlbmd0aERpc3RyaWJ1dGlvblByb2Zp
bGVSZXF1ZXN0AHNldF9Db2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdABEYXRh
UHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtbkxlbmd0aERpc3RyaWJ1dGlvblBy
b2ZpbGVSZXF1ZXN0AGdldF9Db2x1bW5QYXR0ZXJuUHJvZmlsZVJlcXVlc3QAc2V0X0NvbHVtblBh
dHRlcm5Qcm9maWxlUmVxdWVzdABEYXRhUHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0Nv
bHVtblBhdHRlcm5Qcm9maWxlUmVxdWVzdABnZXRfQ29sdW1uTnVsbFJhdGlvUHJvZmlsZVJlcXVl
c3QAc2V0X0NvbHVtbk51bGxSYXRpb1Byb2ZpbGVSZXF1ZXN0AERhdGFQcm9maWxlRGF0YVByb2Zp
bGVJbnB1dFJlcXVlc3RzQ29sdW1uTnVsbFJhdGlvUHJvZmlsZVJlcXVlc3QAZ2V0X0NvbHVtblN0
YXRpc3RpY3NQcm9maWxlUmVxdWVzdABzZXRfQ29sdW1uU3RhdGlzdGljc1Byb2ZpbGVSZXF1ZXN0
AERhdGFQcm9maWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uU3RhdGlzdGljc1Byb2Zp
bGVSZXF1ZXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AGdldF9UaW1lb3V0AHNl
dF9UaW1lb3V0AGdldF9EYXRhUHJvZmlsZUlucHV0AHNldF9EYXRhUHJvZmlsZUlucHV0AERhdGFQ
cm9maWxlRGF0YVByb2ZpbGVJbnB1dABnZXRfRGF0YVByb2ZpbGVPdXRwdXQAc2V0X0RhdGFQcm9m
aWxlT3V0cHV0AERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXQAUHJpbWVPdXRwdXQAUmVhZEFs
bFRleHQAZ2V0X1JlZ2V4VGV4dABzZXRfUmVnZXhUZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2Ny
aXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAZ2V0X1N0ZERldgBz
ZXRfU3RkRGV2AEFkZFJvdwBnZXRfRnJlcXVlbmN5AHNldF9GcmVxdWVuY3kAZ2V0X0Fzc2VtYmx5
AAAAAE9DADoAXAB0AGUAcwB0AFwAUAByAG8AZgBpAGwAZQByAFIAZQBzAHUAbAB0AHMAXABEAGkA
bQBDAHUAcwB0AG8AbQBlAHIALgB4AG0AbAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AABVEAGEAdABhAFMAbwB1AHIAYwBlAABxRABhAHQAYQBQAHIAbwBmAGkAbABl
AE8AdQB0AHAAdQB0AFAAcgBvAGYAaQBsAGUAcwBDAG8AbAB1AG0AbgBMAGUAbgBnAHQAaABEAGkA
cwB0AHIAaQBiAHUAdABpAG8AbgBQAHIAbwBmAGkAbABlAACAlUQAYQB0AGEAUAByAG8AZgBpAGwA
ZQBPAHUAdABwAHUAdABQAHIAbwBmAGkAbABlAHMAQwBvAGwAdQBtAG4ATABlAG4AZwB0AGgARABp
AHMAdAByAGkAYgB1AHQAaQBvAG4AUAByAG8AZgBpAGwAZQBMAGUAbgBnAHQAaABEAGkAcwB0AHIA
aQBiAHUAdABpAG8AbgAAX0QAYQB0AGEAUAByAG8AZgBpAGwAZQBPAHUAdABwAHUAdABQAHIAbwBm
AGkAbABlAHMAQwBvAGwAdQBtAG4ATgB1AGwAbABSAGEAdABpAG8AUAByAG8AZgBpAGwAZQAAW0QA
YQB0AGEAUAByAG8AZgBpAGwAZQBPAHUAdABwAHUAdABQAHIAbwBmAGkAbABlAHMAQwBvAGwAdQBt
AG4AUABhAHQAdABlAHIAbgBQAHIAbwBmAGkAbABlAAB7RABhAHQAYQBQAHIAbwBmAGkAbABlAE8A
dQB0AHAAdQB0AFAAcgBvAGYAaQBsAGUAcwBDAG8AbAB1AG0AbgBQAGEAdAB0AGUAcgBuAFAAcgBv
AGYAaQBsAGUAVABvAHAAUgBlAGcAZQB4AFAAYQB0AHQAZQByAG4AcwAAYUQAYQB0AGEAUAByAG8A
ZgBpAGwAZQBPAHUAdABwAHUAdABQAHIAbwBmAGkAbABlAHMAQwBvAGwAdQBtAG4AUwB0AGEAdABp
AHMAdABpAGMAcwBQAHIAbwBmAGkAbABlAABvRABhAHQAYQBQAHIAbwBmAGkAbABlAE8AdQB0AHAA
dQB0AFAAcgBvAGYAaQBsAGUAcwBDAG8AbAB1AG0AbgBWAGEAbAB1AGUARABpAHMAdAByAGkAYgB1
AHQAaQBvAG4AUAByAG8AZgBpAGwAZQAAgJFEAGEAdABhAFAAcgBvAGYAaQBsAGUATwB1AHQAcAB1
AHQAUAByAG8AZgBpAGwAZQBzAEMAbwBsAHUAbQBuAFYAYQBsAHUAZQBEAGkAcwB0AHIAaQBiAHUA
dABpAG8AbgBQAHIAbwBmAGkAbABlAFYAYQBsAHUAZQBEAGkAcwB0AHIAaQBiAHUAdABpAG8AbgAA
GUMAbwBsAHUAbQBuAE8AdQB0AHAAdQB0AAAXVABhAGIAbABlAE8AdQB0AHAAdQB0AABtRABhAHQA
YQBQAHIAbwBmAGkAbABlAEkAbgBwAHUAdABSAGUAcQB1AGUAcwB0AHMAQwBvAGwAdQBtAG4AUwB0
AGEAdABpAHMAdABpAGMAcwBQAHIAbwBmAGkAbABlAFIAZQBxAHUAZQBzAHQAAEtDAG8AbAB1AG0A
bgBWAGEAbAB1AGUARABpAHMAdAByAGkAYgB1AHQAaQBvAG4AUAByAG8AZgBpAGwAZQBSAGUAcQB1
AGUAcwB0AABnRABhAHQAYQBQAHIAbwBmAGkAbABlAEkAbgBwAHUAdABSAGUAcQB1AGUAcwB0AHMA
QwBvAGwAdQBtAG4AUABhAHQAdABlAHIAbgBQAHIAbwBmAGkAbABlAFIAZQBxAHUAZQBzAHQAAGtE
AGEAdABhAFAAcgBvAGYAaQBsAGUASQBuAHAAdQB0AFIAZQBxAHUAZQBzAHQAcwBDAG8AbAB1AG0A
bgBOAHUAbABsAFIAYQB0AGkAbwBQAHIAbwBmAGkAbABlAFIAZQBxAHUAZQBzAHQAABVUAGEAYgBs
AGUASQBuAHAAdQB0AAAXQwBvAGwAdQBtAG4ASQBuAHAAdQB0AAB9RABhAHQAYQBQAHIAbwBmAGkA
bABlAEkAbgBwAHUAdABSAGUAcQB1AGUAcwB0AHMAQwBvAGwAdQBtAG4ATABlAG4AZwB0AGgARABp
AHMAdAByAGkAYgB1AHQAaQBvAG4AUAByAG8AZgBpAGwAZQBSAGUAcQB1AGUAcwB0AAAjRABhAHQA
YQBQAHIAbwBmAGkAbABlAHIASQBuAHAAdQB0AAAZdgBDAHUAcgByAGUAbgB0AEYAaQBsAGUAAHFT
AEMAXwAwADYAYQAwAGUAMwBkADUAYgAyAGQANQA0AGUAZQBlAGIAZQBlADgAYgBjADQAMwA5ADEA
OQA2AGMAOAAzADkALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
BqrwYKS0EUWsj6Kbw7mhtAADIAABBCABAQgFIAEBERUEIAEBDgYgAQERgIlDBxUSZB0SaAgSaB0S
gNASgNAdEoDcCBKA3B0SgLgSgLgdEoDwEoDwHRKA/BKA/B0SgMQSgMQdEoDgEoDgHRKA7BKA7AQA
AQ4OBAoBEmQJIAMBEkUdCBJJBSACAQgcAyAAAgMHAQgGAAIIEkkOBSABHQgIBSAAEoCpBiABEoCt
HAUAABKAsQYgARwSgLUFIAEBEnUEIAEBCgQHARJ5AyAADgYgAQERgM0JAAISeRJ1EoDJAh4ACAAB
EoDREYDVBiABARKA0QUgARwSeQYwAQEeAA4ECgEeAAUgABKA3QcgAgEOEoDdCLd6XFYZNOCJCImE
Xc2AgMyRCDG/OFatNk41AwYSXAMGEmADBhIMAwYSEAMGEhQDBhIYAwYSHAMGEiADBhIkAwYSKAMG
EiwDBhIwAwYSNAMGEjgDBhI8AwYSQAMGEkQDBhJIAwYSTAMGElADBhJUAwYSUQMGEU0EBh0SaAMG
EmwEBhKAsAIGDgIGBQMGEnADBhJ0BAYSgIAEBhKAjAQGEoCYBAYSgKQDBhJ4AwYSfAIGAgQGEoCE
BAYSgIgEBhKAkAQGEoCUBAYSgJwEBhKAoAQGEoCoBAYSgKwCBhwEBhKAtAUGHRKAuAUGHRKAxAUG
HRKA0AUGHRKA4AUGHRKA8AQGEoC8BAYSgMACBgcCBgYEBhKAyAQGEoDMAgYEBAYSgNQEBhKA2AUG
HRKA3AQGEoDkBAYSgOgFBh0SgOwEBhKA9AQGEoD4BQYdEoD8AwYScQQGEoCBBAYSgIUEBhKBCAQg
AQECBSABARFNCyAEAQgdCB0SRRJJBSABARJRBCAAEU0FIAAdEmgGIAEBHRJoBCAAEmwFIAEBEmwF
IAASgLAGIAEBEoCwAyAABQQgAQEFBCAAEnAFIAEBEnAEIAASdAUgAQESdAUgABKAgAYgAQESgIAF
IAASgIwGIAEBEoCMBSAAEoCYBiABARKAmAUgABKApAYgAQESgKQEIAASeAUgAQESeAQgABJ8BSAB
ARJ8BSAAEoCEBiABARKAhAUgABKAiAYgAQESgIgFIAASgJAGIAEBEoCQBSAAEoCUBiABARKAlAUg
ABKAnAYgAQESgJwFIAASgKAGIAEBEoCgBSAAEoCoBiABARKAqAUgABKArAYgAQESgKwDIAAcBCAB
ARwFIAASgLQGIAEBEoC0BiAAHRKAuAcgAQEdEoC4BiAAHRKAxAcgAQEdEoDEBiAAHRKA0AcgAQEd
EoDQBiAAHRKA4AcgAQEdEoDgBiAAHRKA8AcgAQEdEoDwBSAAEoC8BiABARKAvAUgABKAwAYgAQES
gMADIAAHBCABAQcDIAAGBCABAQYFIAASgMgGIAEBEoDIBSAAEoDMBiABARKAzAMgAAQEIAEBBAUg
ABKA1AYgAQESgNQFIAASgNgGIAEBEoDYBiAAHRKA3AcgAQEdEoDcBSAAEoDkBiABARKA5AUgABKA
6AYgAQESgOgGIAAdEoDsByABAR0SgOwFIAASgPQGIAEBEoD0BSAAEoD4BiABARKA+AYgAB0SgPwH
IAEBHRKA/AQAABJxBQABEnUOBhABAR4ADgUAABKAgQUAABKAhQYAAQESgIUFAAASgQgDAAABAygA
DgMoAAIDKAAIBCgAEU0FKAAdEmgEKAASbAUoABKAsAMoAAUEKAAScAQoABJ0BSgAEoCABSgAEoCM
BSgAEoCYBSgAEoCkBCgAEngEKAASfAUoABKAhAUoABKAiAUoABKAkAUoABKAlAUoABKAnAUoABKA
oAUoABKAqAUoABKArAMoABwFKAASgLQGKAAdEoC4BigAHRKAxAYoAB0SgNAGKAAdEoDgBigAHRKA
8AUoABKAvAUoABKAwAMoAAcDKAAGBSgAEoDIBSgAEoDMAygABAUoABKA1AUoABKA2AYoAB0SgNwF
KAASgOQFKAASgOgGKAAdEoDsBSgAEoD0BSgAEoD4BigAHRKA/AQIABJxBQgAEoCBBQgAEoCFBQgA
EoEIBAEAAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NDXzA2YTBlM2Q1YjJkNTRlZWViZWU4YmM0MzkxOTZjODM5AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41WwEAAgBUAg1Bbm9ueW1vdXNUeXBlAVQOCU5h
bWVzcGFjZTlodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NxbHNlcnZlci8yMDA4L0RhdGFE
ZWJ1Z2dlci9YAQACAFQOCU5hbWVzcGFjZTlodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3Nx
bHNlcnZlci8yMDA4L0RhdGFEZWJ1Z2dlci9UAgpJc051bGxhYmxlACABAA1EdHNEYXRhU291cmNl
AQBUAgpJc051bGxhYmxlABsBABZDb2x1bW5OdWxsUmF0aW9Qcm9maWxlAAAcAQAXQ29sdW1uU3Rh
dGlzdGljc1Byb2ZpbGUAACQBAB9Db2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlAAAjAQAe
Q29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlAAAZAQAUQ29sdW1uUGF0dGVyblByb2ZpbGUA
ACkBABZMZW5ndGhEaXN0cmlidXRpb25JdGVtAQBUAgpJc051bGxhYmxlACgBABVWYWx1ZURpc3Ry
aWJ1dGlvbkl0ZW0BAFQCCklzTnVsbGFibGUAKgEAF1BhdHRlcm5EaXN0cmlidXRpb25JdGVtAQBU
AgpJc051bGxhYmxlALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC82QAAAAAAAAAAAADW2QAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAyNkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY4AAA7AMAAAAAAAAAAAAA7AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA
AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMAA2AGEAMABlADMAZAA1AGIA
MgBkADUANABlAGUAZQBiAGUAZQA4AGIAYwA0ADMAOQAxADkANgBjADgAMwA5AAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwAwADYAYQAwAGUAMwBkADUAYgAyAGQANQA0AGUAZQBlAGIAZQBl
ADgAYgBjADQAMwA5ADEAOQA2AGMAOAAzADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAANgBhADAAZQAzAGQANQBiADIAZAA1ADQAZQBl
AGUAYgBlAGUAOABiAGMANAAzADkAMQA5ADYAYwA4ADMAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwADYAYQAwAGUAMwBkADUAYgAyAGQANQA0AGUAZQBl
AGIAZQBlADgAYgBjADQAMwA5ADEAOQA2AGMAOAAzADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA0AAADAAAAOg5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_06a0e3d5b2d54eeebee8bc439196c839</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::vCurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">60b6e263665ffa38edd55451843a687d</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">ae140904326a5ee6af726871b16f34e4021356a7</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource]"
                      hasSideEffects="true"
                      name="DataSource">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]"
                          name="DtsConnectionManagerID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]"
                          name="Name" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnLengthDistributionProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]"
                          name="IgnoreLeadingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]"
                          name="IgnoreTrailingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]"
                          name="MaxLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]"
                          name="MinLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]"
                          name="Length" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]"
                          name="Count" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnNullRatioProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]"
                          name="NullCount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnPatternProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]"
                          name="RegexText" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]"
                          name="Frequency" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnStatisticsProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]"
                          name="MaxValue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]"
                          name="Mean"
                          precision="18"
                          scale="4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]"
                          name="MeanSpecified" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]"
                          name="MinValue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]"
                          name="StdDev"
                          precision="18"
                          scale="4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]"
                          name="StdDevSpecified" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnValueDistributionProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]"
                          name="NumberOfDistinctValues" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]"
                          name="Value" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]"
                          name="Count" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput]"
                      hasSideEffects="true"
                      name="ColumnOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]"
                          name="CodePage" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]"
                          name="IsNullable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]"
                          name="LCID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]"
                          name="MaxLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]"
                          name="Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]"
                          name="Precision" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]"
                          name="Scale" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]"
                          name="SqlDbType" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]"
                          name="StringCompareOptions" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput]"
                      hasSideEffects="true"
                      name="TableOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]"
                          name="Database" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]"
                          name="DataSource" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]"
                          name="RowCount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]"
                          name="Schema" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]"
                          name="Table" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnStatisticsProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]"
                          name="ID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest]"
                      hasSideEffects="true"
                      name="ColumnValueDistributionProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]"
                          name="FrequentValueThreshold" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]"
                          name="Option" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnPatternProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]"
                          name="Delimiters" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]"
                          name="MaxNumberOfPatterns" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]"
                          name="PercentageDataCoverageDesired" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]"
                          name="Symbols" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnNullRatioProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]"
                          name="DataSource" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput]"
                      hasSideEffects="true"
                      name="TableInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]"
                          name="Schema" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]"
                          name="Table" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput]"
                      hasSideEffects="true"
                      name="ColumnInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]"
                          name="IsWildCard" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnLengthDistributionProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]"
                          name="IgnoreLeadingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]"
                          name="IgnoreTrailingSpace" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput]"
                      hasSideEffects="true"
                      name="DataProfilerInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]"
                          name="ProfilerMode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]"
                          name="Timeout" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\TableInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="TableInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[TableInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[Schema]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Schema"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[Table]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Table"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Schema" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Table" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\TableOutput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="TableOutput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[TableOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Database]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Database"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Database]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[DataSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSource"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[RowCount]"
                          cachedDataType="i4"
                          cachedName="RowCount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[RowCount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Schema]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Schema"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Table]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Table"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[ExecutionID]"
                          cachedDataType="guid"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Database]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Database" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSource" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[RowCount]"
                          dataType="i4"
                          name="RowCount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Schema" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Table" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[ExecutionID]"
                          dataType="guid"
                          name="ExecutionID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Inputs[Derived Column Input]"
                  name="ColumnInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnOutput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="ColumnOutput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnValueDistributionProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Inputs[Derived Column Input]"
                  name="ColumnValueDistributionProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Inputs[Derived Column Input]"
                  name="DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnNullRatioProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Inputs[Derived Column Input]"
                  name="DataProfileInputRequestsColumnNullRatioProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnPatternProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Inputs[Derived Column Input]"
                  name="DataProfileInputRequestsColumnPatternProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnStatisticsProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Inputs[Derived Column Input]"
                  name="DataProfileInputRequestsColumnStatisticsProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnNullRatioProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnNullRatioProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnPatternProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnStatisticsProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnStatisticsProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnValueDistributionProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Inputs[Derived Column Input]"
                  name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfilerInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Inputs[Derived Column Input]"
                  name="DataProfilerInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataSource]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Inputs[Derived Column Input]"
                  name="DataSource"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output18]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 18.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output17]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 7.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output16]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 8.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output15]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 9.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output14]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 5.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output13]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 10.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output12]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 11.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output11]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 4.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output10]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 12.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 17.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output8]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 13.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output7]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 14.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output6]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output5]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 15.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 16.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output9]"
                  endId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[TableInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 6.Inputs[Derived Column Input]"
                  name="TableInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[TableOutput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column 3.Inputs[Derived Column Input]"
                  name="TableOutput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7C9300B3-C389-4FFB-B132-125B1D89CF66}"
          DTS:ObjectName="{7C9300B3-C389-4FFB-B132-125B1D89CF66}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::vCurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate new ExecutionID"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{19F82B5B-670C-4C22-8DC9-677D36BCD005}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate new ExecutionID"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4730BC44-8674-44B9-A567-555709429F72}"
          SQLTask:SqlStatementSource="Select NewID() ExecutionID"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="ExecutionID"
            SQLTask:DtsVariableName="User::ExecutionID" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate new ExecutionTime"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DBF86A9A-E52C-4D67-9F35-238B777FBB90}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate new ExecutionTime"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4730BC44-8674-44B9-A567-555709429F72}"
          SQLTask:SqlStatementSource="SELECT GETDATE() AS ExecutionTIme"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="ExecutionTIme"
            SQLTask:DtsVariableName="User::ExecutionTime" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AE8173CE-A9FE-4B1D-977B-A2A4DE1E4D80}"
      DTS:From="Package\Generate new ExecutionID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Generate new ExecutionTime" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CB56E4C5-60DC-4EB3-BAB1-08AB48191738}"
      DTS:From="Package\Generate new ExecutionTime"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{D561BBCB-88F4-49FE-9C6A-5ADE8A292445}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="162,102"
          Size="162,146"
          Id="Package\Foreach Loop Container"
          TopLeft="492,467.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Generate new ExecutionID"
          TopLeft="470.5,161.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\Generate new ExecutionTime"
          TopLeft="464.5,263.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="573,203.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Execute SQL Task"
          TopLeft="491.5,365.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="573,305.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="573,407.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Script Component"
          TopLeft="2693,5.49999999999966" />
        <NodeLayout
          Size="140,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnInput"
          TopLeft="328.5,209.5" />
        <NodeLayout
          Size="147,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnOutput"
          TopLeft="529,209.5" />
        <NodeLayout
          Size="262,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest"
          TopLeft="5.5,209.5" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest"
          TopLeft="6147,209.499999999999" />
        <NodeLayout
          Size="335,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest"
          TopLeft="5751,209.499999999999" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest"
          TopLeft="5347,209.499999999999" />
        <NodeLayout
          Size="348,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile"
          TopLeft="4938.5,209.499999999999" />
        <NodeLayout
          Size="296,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile"
          TopLeft="4581.5,209.499999999999" />
        <NodeLayout
          Size="434,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
          TopLeft="4086.5,209.499999999999" />
        <NodeLayout
          Size="382,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
          TopLeft="3643.5,209.5" />
        <NodeLayout
          Size="303,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile"
          TopLeft="3280,209.5" />
        <NodeLayout
          Size="304,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile"
          TopLeft="2915.5,209.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput"
          TopLeft="2694.5,209.5" />
        <NodeLayout
          Size="342,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile"
          TopLeft="2291.5,209.5" />
        <NodeLayout
          Size="422,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
          TopLeft="1808.5,209.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Data Flow Task\TableInput"
          TopLeft="1577,209.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataSource"
          TopLeft="1383,209.5" />
        <NodeLayout
          Size="388,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest"
          TopLeft="934.5,209.5" />
        <NodeLayout
          Size="137,42"
          Id="Package\Foreach Loop Container\Data Flow Task\TableOutput"
          TopLeft="737,209.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column"
          TopLeft="1192.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 1"
          TopLeft="977.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 2"
          TopLeft="762.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnValueDistributionProfileRequest]"
          TopLeft="2704.75,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1865.25,60.0000000000002"
              Start="0,0"
              End="-1865.25,52.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,3.56032171581772" />
                  <mssgle:CubicBezierSegment
                    Point1="0,3.56032171581772"
                    Point2="0,7.56032171581772"
                    Point3="-4,7.56032171581772" />
                  <mssgle:LineSegment
                    End="-1861.25,7.56032171581772" />
                  <mssgle:CubicBezierSegment
                    Point1="-1861.25,7.56032171581772"
                    Point2="-1865.25,7.56032171581772"
                    Point3="-1865.25,11.5603217158177" />
                  <mssgle:LineSegment
                    End="-1865.25,52.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1019.13390625,12.5603217158177,173.0178125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output2]"
          TopLeft="839.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-703,60.0000000000001"
              Start="0,0"
              End="-703,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0000000000001"
                    Point2="0,30.0000000000001"
                    Point3="-4,30.0000000000001" />
                  <mssgle:LineSegment
                    End="-699,30.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-699,30.0000000000001"
                    Point2="-703,30.0000000000001"
                    Point3="-703,34.0000000000001" />
                  <mssgle:LineSegment
                    End="-703,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnInput]"
          TopLeft="2712.5,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1658,60.0000000000002"
              Start="0,0"
              End="-1658,52.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.58415841584163" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.58415841584163"
                    Point2="0,11.5841584158416"
                    Point3="-4,11.5841584158416" />
                  <mssgle:LineSegment
                    End="-1654,11.5841584158416" />
                  <mssgle:CubicBezierSegment
                    Point1="-1654,11.5841584158416"
                    Point2="-1658,11.5841584158416"
                    Point3="-1658,15.5841584158416" />
                  <mssgle:LineSegment
                    End="-1658,52.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-858.35890625,16.5841584158416,58.7178125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output4]"
          TopLeft="1054.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-656,60"
              Start="0,0"
              End="-656,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-652,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-652,30"
                    Point2="-656,30"
                    Point3="-656,34" />
                  <mssgle:LineSegment
                    End="-656,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnOutput]"
          TopLeft="2720.25,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1450.75,60.0000000000001"
              Start="0,0"
              End="-1450.75,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.0344827586207" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.0344827586207"
                    Point2="0,15.0344827586207"
                    Point3="-4,15.0344827586207" />
                  <mssgle:LineSegment
                    End="-1446.75,15.0344827586207" />
                  <mssgle:CubicBezierSegment
                    Point1="-1446.75,15.0344827586207"
                    Point2="-1450.75,15.0344827586207"
                    Point3="-1450.75,19.0344827586207" />
                  <mssgle:LineSegment
                    End="-1450.75,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-758.07890625,20.0344827586207,65.4078125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output6]"
          TopLeft="1269.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-667,60.0000000000001"
              Start="0,0"
              End="-667,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0000000000001"
                    Point2="0,30.0000000000001"
                    Point3="-4,30.0000000000001" />
                  <mssgle:LineSegment
                    End="-663,30.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-663,30.0000000000001"
                    Point2="-667,30.0000000000001"
                    Point3="-667,34.0000000000001" />
                  <mssgle:LineSegment
                    End="-667,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 3"
          TopLeft="1407.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 4"
          TopLeft="1622.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 5"
          TopLeft="1837.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 6"
          TopLeft="2052.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 7"
          TopLeft="2267.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 8"
          TopLeft="2482.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 9"
          TopLeft="2697.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 10"
          TopLeft="2912.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 11"
          TopLeft="3127.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 12"
          TopLeft="3342.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[TableOutput]"
          TopLeft="2728,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1243.5,60.0000000000001"
              Start="0,0"
              End="-1243.5,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0257510729614" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0257510729614"
                    Point2="0,18.0257510729614"
                    Point3="-4,18.0257510729614" />
                  <mssgle:LineSegment
                    End="-1239.5,18.0257510729614" />
                  <mssgle:CubicBezierSegment
                    Point1="-1239.5,18.0257510729614"
                    Point2="-1243.5,18.0257510729614"
                    Point3="-1243.5,22.0257510729614" />
                  <mssgle:LineSegment
                    End="-1243.5,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-650.05748046875,23.0257510729614,56.6149609375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output9]"
          TopLeft="1484.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-679,60.0000000000001"
              Start="0,0"
              End="-679,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0000000000001"
                    Point2="0,30.0000000000001"
                    Point3="-4,30.0000000000001" />
                  <mssgle:LineSegment
                    End="-675,30.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-675,30.0000000000001"
                    Point2="-679,30.0000000000001"
                    Point3="-679,34.0000000000001" />
                  <mssgle:LineSegment
                    End="-679,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
          TopLeft="2735.75,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1036.25,60.0000000000001"
              Start="0,0"
              End="-1036.25,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6438631790745" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6438631790745"
                    Point2="0,20.6438631790745"
                    Point3="-4,20.6438631790745" />
                  <mssgle:LineSegment
                    End="-1032.25,20.6438631790745" />
                  <mssgle:CubicBezierSegment
                    Point1="-1032.25,20.6438631790745"
                    Point2="-1036.25,20.6438631790745"
                    Point3="-1036.25,24.6438631790745" />
                  <mssgle:LineSegment
                    End="-1036.25,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-663.40638671875,25.6438631790745,290.5627734375,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output11]"
          TopLeft="1699.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-571,60.0000000000001"
              Start="0,0"
              End="-571,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0000000000001"
                    Point2="0,30.0000000000001"
                    Point3="-4,30.0000000000001" />
                  <mssgle:LineSegment
                    End="-567,30.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-567,30.0000000000001"
                    Point2="-571,30.0000000000001"
                    Point3="-571,34.0000000000001" />
                  <mssgle:LineSegment
                    End="-571,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataSource]"
          TopLeft="2743.5,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-829,60.0000000000001"
              Start="0,0"
              End="-829,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9545454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9545454545455"
                    Point2="0,22.9545454545455"
                    Point3="-4,22.9545454545455" />
                  <mssgle:LineSegment
                    End="-825,22.9545454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="-825,22.9545454545455"
                    Point2="-829,22.9545454545455"
                    Point3="-829,26.9545454545455" />
                  <mssgle:LineSegment
                    End="-829,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-440.33634765625,27.9545454545455,51.6726953125,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output14]"
          TopLeft="1914.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-465,60"
              Start="0,0"
              End="-465,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-461,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-461,30"
                    Point2="-465,30"
                    Point3="-465,34" />
                  <mssgle:LineSegment
                    End="-465,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[TableInput]"
          TopLeft="2751.25,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-621.75,60.0000000000001"
              Start="0,0"
              End="-621.75,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0089445438283" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0089445438283"
                    Point2="0,25.0089445438283"
                    Point3="-4,25.0089445438283" />
                  <mssgle:LineSegment
                    End="-617.75,25.0089445438283" />
                  <mssgle:CubicBezierSegment
                    Point1="-617.75,25.0089445438283"
                    Point2="-621.75,25.0089445438283"
                    Point3="-621.75,29.0089445438283" />
                  <mssgle:LineSegment
                    End="-621.75,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-335.83748046875,30.0089445438283,49.9249609375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="2129.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-467,60"
              Start="0,0"
              End="-467,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-463,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-463,30"
                    Point2="-467,30"
                    Point3="-467,34" />
                  <mssgle:LineSegment
                    End="-467,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
          TopLeft="2759,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-414.5,60"
              Start="0,0"
              End="-414.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8474576271186"
                    Point2="0,26.8474576271186"
                    Point3="-4,26.8474576271186" />
                  <mssgle:LineSegment
                    End="-410.5,26.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="-410.5,26.8474576271186"
                    Point2="-414.5,26.8474576271186"
                    Point3="-414.5,30.8474576271186" />
                  <mssgle:LineSegment
                    End="-414.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-368.17693359375,31.8474576271186,321.8538671875,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output17]"
          TopLeft="2344.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-325,60.0000000000001"
              Start="0,0"
              End="-325,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0000000000001"
                    Point2="0,30.0000000000001"
                    Point3="-4,30.0000000000001" />
                  <mssgle:LineSegment
                    End="-321,30.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-321,30.0000000000001"
                    Point2="-325,30.0000000000001"
                    Point3="-325,34.0000000000001" />
                  <mssgle:LineSegment
                    End="-325,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfile]"
          TopLeft="2766.75,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-207.25,60"
              Start="0,0"
              End="-207.25,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5024154589372"
                    Point2="0,28.5024154589372"
                    Point3="-4,28.5024154589372" />
                  <mssgle:LineSegment
                    End="-203.25,28.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="-203.25,28.5024154589372"
                    Point2="-207.25,28.5024154589372"
                    Point3="-207.25,32.5024154589372" />
                  <mssgle:LineSegment
                    End="-207.25,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-227.30634765625,33.5024154589372,247.3626953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output16]"
          TopLeft="2559.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-97,60"
              Start="0,0"
              End="-97,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-93,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-93,30"
                    Point2="-97,30"
                    Point3="-97,34" />
                  <mssgle:LineSegment
                    End="-97,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfilerInput]"
          TopLeft="2774.5,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.39638671875,20.4208984375,76.7927734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output15]"
          TopLeft="2774.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnNullRatioProfile]"
          TopLeft="2782.25,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="207.25,60"
              Start="0,0"
              End="207.25,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5024154589372"
                    Point2="0,28.5024154589372"
                    Point3="4,28.5024154589372" />
                  <mssgle:LineSegment
                    End="203.25,28.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="203.25,28.5024154589372"
                    Point2="207.25,28.5024154589372"
                    Point3="207.25,32.5024154589372" />
                  <mssgle:LineSegment
                    End="207.25,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.30134765625002,33.5024154589372,211.8526953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output13]"
          TopLeft="2989.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78,60"
              Start="0,0"
              End="78,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="74,30" />
                  <mssgle:CubicBezierSegment
                    Point1="74,30"
                    Point2="78,30"
                    Point3="78,34" />
                  <mssgle:LineSegment
                    End="78,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnStatisticsProfile]"
          TopLeft="2790,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="414.5,59.9999999999999"
              Start="0,0"
              End="414.5,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8474576271186"
                    Point2="0,26.8474576271186"
                    Point3="4,26.8474576271186" />
                  <mssgle:LineSegment
                    End="410.5,26.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="410.5,26.8474576271186"
                    Point2="414.5,26.8474576271186"
                    Point3="414.5,30.8474576271186" />
                  <mssgle:LineSegment
                    End="414.5,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="101.52365234375,31.8474576271186,211.4526953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output12]"
          TopLeft="3204.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="227,60"
              Start="0,0"
              End="227,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="223,30" />
                  <mssgle:CubicBezierSegment
                    Point1="223,30"
                    Point2="227,30"
                    Point3="227,34" />
                  <mssgle:LineSegment
                    End="227,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 13"
          TopLeft="3557.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 14"
          TopLeft="3772.5,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 15"
          TopLeft="3987.5,107.499999999999" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 16"
          TopLeft="4202.5,107.499999999999" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 17"
          TopLeft="4417.5,107.499999999999" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column 18"
          TopLeft="4632.5,107.499999999999" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
          TopLeft="2797.75,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="621.75,59.9999999999999"
              Start="0,0"
              End="621.75,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0089445438282" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0089445438282"
                    Point2="0,25.0089445438282"
                    Point3="4,25.0089445438282" />
                  <mssgle:LineSegment
                    End="617.75,25.0089445438282" />
                  <mssgle:CubicBezierSegment
                    Point1="617.75,25.0089445438282"
                    Point2="621.75,25.0089445438282"
                    Point3="621.75,29.0089445438282" />
                  <mssgle:LineSegment
                    End="621.75,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="168.472421875,30.0089445438282,284.80515625,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output10]"
          TopLeft="3419.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="415,60"
              Start="0,0"
              End="415,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="411,30" />
                  <mssgle:CubicBezierSegment
                    Point1="411,30"
                    Point2="415,30"
                    Point3="415,34" />
                  <mssgle:LineSegment
                    End="415,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
          TopLeft="2805.5,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="829,59.9999999999999"
              Start="0,0"
              End="829,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9545454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9545454545454"
                    Point2="0,22.9545454545454"
                    Point3="4,22.9545454545454" />
                  <mssgle:LineSegment
                    End="825,22.9545454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="825,22.9545454545454"
                    Point2="829,22.9545454545454"
                    Point3="829,26.9545454545454" />
                  <mssgle:LineSegment
                    End="829,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="247.65306640625,27.9545454545454,333.6938671875,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output8]"
          TopLeft="3634.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="669,59.9999999999999"
              Start="0,0"
              End="669,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="665,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="665,29.9999999999999"
                    Point2="669,29.9999999999999"
                    Point3="669,33.9999999999999" />
                  <mssgle:LineSegment
                    End="669,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfile]"
          TopLeft="2813.25,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1036.25,59.9999999999999"
              Start="0,0"
              End="1036.25,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6438631790744" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6438631790744"
                    Point2="0,20.6438631790744"
                    Point3="4,20.6438631790744" />
                  <mssgle:LineSegment
                    End="1032.25,20.6438631790744" />
                  <mssgle:CubicBezierSegment
                    Point1="1032.25,20.6438631790744"
                    Point2="1036.25,20.6438631790744"
                    Point3="1036.25,24.6438631790744" />
                  <mssgle:LineSegment
                    End="1036.25,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="415.93365234375,25.6438631790744,204.3826953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output7]"
          TopLeft="3849.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="880,59.9999999999999"
              Start="0,0"
              End="880,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="876,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="876,29.9999999999999"
                    Point2="880,29.9999999999999"
                    Point3="880,33.9999999999999" />
                  <mssgle:LineSegment
                    End="880,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfile]"
          TopLeft="2821,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1243.5,59.9999999999998"
              Start="0,0"
              End="1243.5,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0257510729613" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0257510729613"
                    Point2="0,18.0257510729613"
                    Point3="4,18.0257510729613" />
                  <mssgle:LineSegment
                    End="1239.5,18.0257510729613" />
                  <mssgle:CubicBezierSegment
                    Point1="1239.5,18.0257510729613"
                    Point2="1243.5,18.0257510729613"
                    Point3="1243.5,22.0257510729613" />
                  <mssgle:LineSegment
                    End="1243.5,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="495.10865234375,23.0257510729613,253.2826953125,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output5]"
          TopLeft="4064.5,149.499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1048,59.9999999999999"
              Start="0,0"
              End="1048,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="1044,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="1044,29.9999999999999"
                    Point2="1048,29.9999999999999"
                    Point3="1048,33.9999999999999" />
                  <mssgle:LineSegment
                    End="1048,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnStatisticsProfileRequest]"
          TopLeft="2828.75,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1450.75,59.9999999999998"
              Start="0,0"
              End="1450.75,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.0344827586206" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.0344827586206"
                    Point2="0,15.0344827586206"
                    Point3="4,15.0344827586206" />
                  <mssgle:LineSegment
                    End="1446.75,15.0344827586206" />
                  <mssgle:CubicBezierSegment
                    Point1="1446.75,15.0344827586206"
                    Point2="1450.75,15.0344827586206"
                    Point3="1450.75,19.0344827586206" />
                  <mssgle:LineSegment
                    End="1450.75,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="601.00861328125,20.0344827586206,248.7327734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output3]"
          TopLeft="4279.5,149.499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1239,59.9999999999999"
              Start="0,0"
              End="1239,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="1235,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="1235,29.9999999999999"
                    Point2="1239,29.9999999999999"
                    Point3="1239,33.9999999999999" />
                  <mssgle:LineSegment
                    End="1239,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnPatternProfileRequest]"
          TopLeft="2836.5,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1658,59.9999999999998"
              Start="0,0"
              End="1658,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.58415841584154" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.58415841584154"
                    Point2="0,11.5841584158415"
                    Point3="4,11.5841584158415" />
                  <mssgle:LineSegment
                    End="1654,11.5841584158415" />
                  <mssgle:CubicBezierSegment
                    Point1="1654,11.5841584158415"
                    Point2="1658,11.5841584158415"
                    Point3="1658,15.5841584158415" />
                  <mssgle:LineSegment
                    End="1658,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="708.16861328125,16.5841584158415,241.6627734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output1]"
          TopLeft="4494.5,149.499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1424,59.9999999999998"
              Start="0,0"
              End="1424,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="1420,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="1420,29.9999999999999"
                    Point2="1424,29.9999999999999"
                    Point3="1424,33.9999999999999" />
                  <mssgle:LineSegment
                    End="1424,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnNullRatioProfileRequest]"
          TopLeft="2844.25,47.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1865.25,59.9999999999998"
              Start="0,0"
              End="1865.25,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,3.56032171581766" />
                  <mssgle:CubicBezierSegment
                    Point1="0,3.56032171581766"
                    Point2="0,7.56032171581766"
                    Point3="4,7.56032171581766" />
                  <mssgle:LineSegment
                    End="1861.25,7.56032171581766" />
                  <mssgle:CubicBezierSegment
                    Point1="1861.25,7.56032171581766"
                    Point2="1865.25,7.56032171581766"
                    Point3="1865.25,11.5603217158177" />
                  <mssgle:LineSegment
                    End="1865.25,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="808.05861328125,12.5603217158177,249.1327734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output18]"
          TopLeft="4709.5,149.499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1609,59.9999999999998"
              Start="0,0"
              End="1609,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="1605,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="1605,29.9999999999999"
                    Point2="1609,29.9999999999999"
                    Point3="1609,33.9999999999999" />
                  <mssgle:LineSegment
                    End="1609,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnOutput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\TableInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataSource">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\TableOutput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>