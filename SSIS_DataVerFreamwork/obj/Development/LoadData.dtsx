<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/27/2017 11:59:20 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MT-LPT-0334"
  DTS:CreatorName="BETSSON\sldr01"
  DTS:DTSID="{DC6F75CB-179D-40FC-8019-F194A7D40D21}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadData"
  DTS:PackageType="5"
  DTS:VersionBuild="54"
  DTS:VersionGUID="{D695A3BC-BCB9-45D0-B55C-214EA6AD8777}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4730BC44-8674-44B9-A567-555709429F72}"
      DTS:ObjectName=".\sql2016.SSIS_DataVerificationFreamwork">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.\sql2016;Initial Catalog=SSIS_DataVerificationFreamwork;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{404DDDB1-D52B-4695-8A16-543B9DD06B42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{F1A60BDE-FE03-42F7-974B-3345E2F4A651}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{96647DAB-A0F4-4856-B211-F67373A39E45}"
        DTS:ObjectName="{96647DAB-A0F4-4856-B211-F67373A39E45}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::VerificationFreamworkOutputDirectory]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\test\ProfilerResults" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{235CDF29-53BF-45E4-8064-81871C8CEE08}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].Columns[IsWildCard]"
                          cachedDataType="bool"
                          cachedName="IsWildCard"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[IsWildCard]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input].ExternalColumns[IsWildCard]"
                          dataType="bool"
                          name="IsWildCard" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnOutput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[CodePage]"
                          cachedDataType="i4"
                          cachedName="CodePage"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[CodePage]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[IsNullable]"
                          cachedDataType="bool"
                          cachedName="IsNullable"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[IsNullable]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[LCID]"
                          cachedDataType="i4"
                          cachedName="LCID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[LCID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[MaxLength]"
                          cachedDataType="i4"
                          cachedName="MaxLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Precision]"
                          cachedDataType="i4"
                          cachedName="Precision"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Precision]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[Scale]"
                          cachedDataType="i4"
                          cachedName="Scale"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Scale]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[SqlDbType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="SqlDbType"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[SqlDbType]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].Columns[StringCompareOptions]"
                          cachedDataType="i4"
                          cachedName="StringCompareOptions"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[StringCompareOptions]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[CodePage]"
                          dataType="i4"
                          name="CodePage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[IsNullable]"
                          dataType="bool"
                          name="IsNullable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[LCID]"
                          dataType="i4"
                          name="LCID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          dataType="i4"
                          name="MaxLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Precision]"
                          dataType="i4"
                          name="Precision" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[Scale]"
                          dataType="i4"
                          name="Scale" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[SqlDbType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="SqlDbType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input].ExternalColumns[StringCompareOptions]"
                          dataType="i4"
                          name="StringCompareOptions" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ColumnValueDistributionProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[ColumnValueDistributionProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[FrequentValueThreshold]"
                          cachedDataType="decimal"
                          cachedName="FrequentValueThreshold"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[FrequentValueThreshold]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[Option]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Option"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Option]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[FrequentValueThreshold]"
                          dataType="numeric"
                          name="FrequentValueThreshold"
                          precision="28" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Option]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Option" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnLengthDistributionProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[IgnoreLeadingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreLeadingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].Columns[IgnoreTrailingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreTrailingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          dataType="bool"
                          name="IgnoreLeadingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          dataType="bool"
                          name="IgnoreTrailingSpace" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnNullRatioProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnNullRatioProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSource"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSource" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnPatternProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnPatternProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[Delimiters]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Delimiters"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Delimiters]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[MaxNumberOfPatterns]"
                          cachedDataType="i4"
                          cachedName="MaxNumberOfPatterns"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[MaxNumberOfPatterns]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[PercentageDataCoverageDesired]"
                          cachedDataType="i4"
                          cachedName="PercentageDataCoverageDesired"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[PercentageDataCoverageDesired]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].Columns[Symbols]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Symbols"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Symbols]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Delimiters]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Delimiters" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[MaxNumberOfPatterns]"
                          dataType="i4"
                          name="MaxNumberOfPatterns" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[PercentageDataCoverageDesired]"
                          dataType="i4"
                          name="PercentageDataCoverageDesired" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[Symbols]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Symbols" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileInputRequestsColumnStatisticsProfileRequest"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileInputRequestsColumnStatisticsProfileRequest]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnLengthDistributionProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IgnoreLeadingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreLeadingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IgnoreTrailingSpace]"
                          cachedDataType="bool"
                          cachedName="IgnoreTrailingSpace"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[MaxLength]"
                          cachedDataType="i4"
                          cachedName="MaxLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[MinLength]"
                          cachedDataType="i4"
                          cachedName="MinLength"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinLength]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreLeadingSpace]"
                          dataType="bool"
                          name="IgnoreLeadingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IgnoreTrailingSpace]"
                          dataType="bool"
                          name="IgnoreTrailingSpace" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxLength]"
                          dataType="i4"
                          name="MaxLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinLength]"
                          dataType="i4"
                          name="MinLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].Columns[Length]"
                          cachedDataType="i4"
                          cachedName="Length"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Length]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].Columns[Count]"
                          cachedDataType="i4"
                          cachedName="Count"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Length]"
                          dataType="i4"
                          name="Length" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          dataType="i4"
                          name="Count" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnNullRatioProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnNullRatioProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[NullCount]"
                          cachedDataType="i4"
                          cachedName="NullCount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[NullCount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[NullCount]"
                          dataType="i4"
                          name="NullCount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnPatternProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnPatternProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          dataType="wstr"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].Columns[RegexText]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="RegexText"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[RegexText]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].Columns[Frequency]"
                          cachedDataType="i4"
                          cachedName="Frequency"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[Frequency]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[RegexText]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="RegexText" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input].ExternalColumns[Frequency]"
                          dataType="i4"
                          name="Frequency" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnStatisticsProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnStatisticsProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MaxValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="MaxValue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxValue]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[Mean]"
                          cachedDataType="numeric"
                          cachedName="Mean"
                          cachedPrecision="18"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[Mean]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MeanSpecified]"
                          cachedDataType="bool"
                          cachedName="MeanSpecified"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MeanSpecified]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[MinValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="MinValue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinValue]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[StdDev]"
                          cachedDataType="numeric"
                          cachedName="StdDev"
                          cachedPrecision="18"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDev]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].Columns[StdDevSpecified]"
                          cachedDataType="bool"
                          cachedName="StdDevSpecified"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDevSpecified]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MaxValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="MaxValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[Mean]"
                          dataType="numeric"
                          name="Mean"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MeanSpecified]"
                          dataType="bool"
                          name="MeanSpecified" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[MinValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="MinValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDev]"
                          dataType="numeric"
                          name="StdDev"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input].ExternalColumns[StdDevSpecified]"
                          dataType="bool"
                          name="StdDevSpecified" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnValueDistributionProfile"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnValueDistributionProfile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[DataSourceID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[IsExact]"
                          cachedDataType="bool"
                          cachedName="IsExact"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[NumberOfDistinctValues]"
                          cachedDataType="i4"
                          cachedName="NumberOfDistinctValues"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDistinctValues]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].Columns[ProfileRequestID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfileRequestID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[IsExact]"
                          dataType="bool"
                          name="IsExact" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDistinctValues]"
                          dataType="i4"
                          name="NumberOfDistinctValues" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input].ExternalColumns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfileRequestID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].Columns[Value]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Value"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Value]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].Columns[Count]"
                          cachedDataType="i4"
                          cachedName="Count"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Value" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          dataType="i4"
                          name="Count" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataProfilerInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataProfilerInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].Columns[ProfilerMode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ProfilerMode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ProfilerMode]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].Columns[Timeout]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Timeout"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[Timeout]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[ProfilerMode]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProfilerMode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input].ExternalColumns[Timeout]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Timeout" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\DataSource"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DataSource"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[DataSource]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[DtsConnectionManagerID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DtsConnectionManagerID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[DtsConnectionManagerID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[DtsConnectionManagerID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DtsConnectionManagerID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\DataSource.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="39">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using SC_06a0e3d5b2d54eeebee8bc439196c839;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    

    public override void CreateNewOutputRows()
    {

        string xml = File.ReadAllText(@"C:\test\ProfilerResults\DimCustomer.xml");
        var allProfilerResults = xml.ParseXML<DataProfile>();

        #region Data Sources

        try
        {
            foreach (var x in allProfilerResults.DataSources)
            {
                try
                {
                    DataSourceBuffer.AddRow();
                    DataSourceBuffer.DtsConnectionManagerID = x.DtsConnectionManagerID;
                    DataSourceBuffer.ID = x.ID;
                    DataSourceBuffer.Name = x.Name;
                }
                catch (Exception exc)
                {
                    // throw exc;
                }
            }
        }
        catch (Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Inptut

        #region Data Profile Input Requests Column Length Distribution Profile Request

        try
        {
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.IgnoreLeadingSpace = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.IgnoreLeadingSpace;
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.IgnoreTrailingSpace = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.IgnoreTrailingSpace;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Column.IsWildCard;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnLengthDistributionProfileRequest.Table.Table;
        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Data Profile Input Requests Column Null Ratio Profile Request

        try
        {
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.DataSource = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnNullRatioProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Data Profile Input Requests Column Pattern Profile Request

        try
        {
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.Delimiters = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Delimiters;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.MaxNumberOfPatterns = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.MaxNumberOfPatterns;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.PercentageDataCoverageDesired = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.PercentageDataCoverageDesired;
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.Symbols = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Symbols;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnPatternProfileRequest.Table.Table;
        }
        catch (Exception exc)
        {

            // throw exc;
        }

        #endregion ColumnStatisticsProfileRequest

        #region Column Statistics Profile Request

        try
        {
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.AddRow();
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.DataSourceID;
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnStatisticsProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }


        #endregion

        #region Column Value Distribution Profile Request

        try
        {
            ColumnValueDistributionProfileRequestBuffer.AddRow();
            ColumnValueDistributionProfileRequestBuffer.DataSourceID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.DataSourceID;
            ColumnValueDistributionProfileRequestBuffer.FrequentValueThreshold = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.FrequentValueThreshold;
            ColumnValueDistributionProfileRequestBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            ColumnValueDistributionProfileRequestBuffer.Option = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Option;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            ColumnInputBuffer.AddRow();
            ColumnInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            ColumnInputBuffer.IsWildCard = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Column.IsWildCard;

        }
        catch (Exception exc)
        {

            // throw exc;
        }

        try
        {
            TableInputBuffer.AddRow();
            TableInputBuffer.ID = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.ID;
            TableInputBuffer.Schema = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Table.Schema;
            TableInputBuffer.Table = allProfilerResults.DataProfileInput.Requests.ColumnValueDistributionProfileRequest.Table.Table;

        }
        catch (Exception exc)
        {

            // throw exc;
        }




        #endregion

        #endregion

        #region Data Profile Output

        #region Data Profile Output Profiles Column Length Distribution Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnLengthDistributionProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IgnoreLeadingSpace = item.IgnoreLeadingSpace;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IgnoreTrailingSpace = item.IgnoreTrailingSpace;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.MaxLength = item.MaxLength;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.MinLength = item.MinLength;
                    DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    foreach (var childItem in item.LengthDistribution)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.AddRow();
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.Count = childItem.Count;
                            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.Length = childItem.Length;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                   }
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


            }
        }catch(Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Null Ratio Profile

        try
        {


            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnNullRatioProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.NullCount = item.NullCount;
                    DataProfileOutputProfilesColumnNullRatioProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }
              

            }
        }catch(Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Pattern Profile


        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnPatternProfile)
            {

                try
                {
                    DataProfileOutputProfilesColumnPatternProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnPatternProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnPatternProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnPatternProfileBuffer.ProfileRequestID = item.ProfileRequestID;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }



                try
                {
                    foreach (var childItem in item.TopRegexPatterns)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.AddRow();
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.Frequency = childItem.Frequency;
                            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.RegexText = childItem.RegexText;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                      }
                }catch(Exception exc)
                {
                    // throw exc;
                }

                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

            }
        }catch(Exception exc)
        {

        }

        #endregion

        #region Data Profile Output Profiles Column Statistics Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnStatisticsProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MaxValue = item.MaxValue;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.Mean = item.Mean;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MeanSpecified = item.MeanSpecified;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.MinValue = item.MinValue;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.ProfileRequestID = item.ProfileRequestID;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.StdDev = item.StdDev;
                    DataProfileOutputProfilesColumnStatisticsProfileBuffer.StdDevSpecified = item.StdDevSpecified;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }
          
            }
        }
        catch (Exception exc)
        {
            // throw exc;
        }

        #endregion

        #region Data Profile Output Profiles Column Value Distribution Profile

        try
        {
            foreach (var item in allProfilerResults.DataProfileOutput.Profiles.ColumnValueDistributionProfile)
            {
                try
                {
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.AddRow();
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.DataSourceID = item.DataSourceID;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.IsExact = item.IsExact;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.NumberOfDistinctValues = item.NumberOfDistinctValues;
                    DataProfileOutputProfilesColumnValueDistributionProfileBuffer.ProfileRequestID = item.ProfileRequestID;

                }
                catch (Exception exc)
                {

                    // throw exc;
                }


                try
                {
                    foreach (var childItem in item.ValueDistribution)
                    {
                        try
                        {
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.AddRow();
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.Count = childItem.Count;
                            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.Value = childItem.Value;

                        }
                        catch (Exception exc)
                        {

                            // throw exc;
                        }
                     }
                }
                catch (Exception exc)
                {

                    // throw exc;
                }



                try
                {
                    ColumnOutputBuffer.AddRow();
                    ColumnOutputBuffer.CodePage = item.Column.CodePage;
                    ColumnOutputBuffer.IsNullable = item.Column.IsNullable;
                    ColumnOutputBuffer.LCID = item.Column.LCID;
                    ColumnOutputBuffer.MaxLength = item.Column.MaxLength;
                    ColumnOutputBuffer.Name = item.Column.Name;
                    ColumnOutputBuffer.Precision = item.Column.Precision;
                    ColumnOutputBuffer.Scale = item.Column.Scale;
                    ColumnOutputBuffer.SqlDbType = item.Column.SqlDbType;
                    ColumnOutputBuffer.StringCompareOptions = item.Column.StringCompareOptions;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }

                try
                {
                    TableOutputBuffer.AddRow();
                    TableOutputBuffer.Database = item.Table.Database;
                    TableOutputBuffer.DataSource = item.Table.DataSource;
                    TableOutputBuffer.RowCount = item.Table.RowCount;
                    TableOutputBuffer.Schema = item.Table.Schema;
                    TableOutputBuffer.Table = item.Table.Table;
                }
                catch (Exception exc)
                {

                    // throw exc;
                }


            }
        }
        catch (Exception exc)
        {

            // throw exc;
        }
        #endregion

        #endregion

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_06a0e3d5b2d54eeebee8bc439196c839.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{969ACC6C-4160-416E-9824-D68519DE4500}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_06a0e3d5b2d54eeebee8bc439196c839</RootNamespace>
    <AssemblyName>SC_06a0e3d5b2d54eeebee8bc439196c839</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataProfile.cs" />
    <Compile Include="HelperMethods.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class DataSourceBuffer: ScriptBuffer

{
    public DataSourceBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DtsConnectionManagerID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DtsConnectionManagerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Name
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnLengthDistributionProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnLengthDistributionProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreLeadingSpace
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IgnoreLeadingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreTrailingSpace
    {
        set
        {
            this[2] = value;
        }
    }
    public bool IgnoreTrailingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxLength
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MaxLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MinLength
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MinLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 Length
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Length_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Count
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Count_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnNullRatioProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnNullRatioProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 NullCount
    {
        set
        {
            this[2] = value;
        }
    }
    public bool NullCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnPatternProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnPatternProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RegexText
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RegexText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Frequency
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Frequency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnStatisticsProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnStatisticsProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MaxValue
    {
        set
        {
            this[2] = value;
        }
    }
    public bool MaxValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Mean
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Mean_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean MeanSpecified
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MeanSpecified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MinValue
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MinValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal StdDev
    {
        set
        {
            this[7] = value;
        }
    }
    public bool StdDev_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean StdDevSpecified
    {
        set
        {
            this[8] = value;
        }
    }
    public bool StdDevSpecified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnValueDistributionProfileBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnValueDistributionProfileBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsExact
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsExact_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 NumberOfDistinctValues
    {
        set
        {
            this[2] = value;
        }
    }
    public bool NumberOfDistinctValues_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfileRequestID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ProfileRequestID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer: ScriptBuffer

{
    public DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Value
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Value_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Count
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Count_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnOutputBuffer: ScriptBuffer

{
    public ColumnOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CodePage
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CodePage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsNullable
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsNullable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 LCID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool LCID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxLength
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MaxLength_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Name
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Precision
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Precision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Scale
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Scale_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SqlDbType
    {
        set
        {
            this[7] = value;
        }
    }
    public bool SqlDbType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StringCompareOptions
    {
        set
        {
            this[8] = value;
        }
    }
    public bool StringCompareOptions_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class TableOutputBuffer: ScriptBuffer

{
    public TableOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Database
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Database_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DataSource
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DataSource_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowCount
    {
        set
        {
            this[2] = value;
        }
    }
    public bool RowCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Schema
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Schema_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Table
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Table_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnStatisticsProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnStatisticsProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnValueDistributionProfileRequestBuffer: ScriptBuffer

{
    public ColumnValueDistributionProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FrequentValueThreshold
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FrequentValueThreshold_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Option
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Option_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnPatternProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnPatternProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Delimiters
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Delimiters_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MaxNumberOfPatterns
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MaxNumberOfPatterns_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PercentageDataCoverageDesired
    {
        set
        {
            this[4] = value;
        }
    }
    public bool PercentageDataCoverageDesired_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Symbols
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Symbols_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnNullRatioProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnNullRatioProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DataSource
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DataSource_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class TableInputBuffer: ScriptBuffer

{
    public TableInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Schema
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Schema_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Table
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Table_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ColumnInputBuffer: ScriptBuffer

{
    public ColumnInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsWildCard
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsWildCard_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer: ScriptBuffer

{
    public DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DataSourceID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DataSourceID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreLeadingSpace
    {
        set
        {
            this[2] = value;
        }
    }
    public bool IgnoreLeadingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IgnoreTrailingSpace
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IgnoreTrailingSpace_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class DataProfilerInputBuffer: ScriptBuffer

{
    public DataProfilerInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ProfilerMode
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ProfilerMode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Timeout
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Timeout_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Settings.get_Default():SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Sett" +
    "ings")]

namespace SC_06a0e3d5b2d54eeebee8bc439196c839.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public DataSourceBuffer DataSourceBuffer;

    public DataProfileOutputProfilesColumnLengthDistributionProfileBuffer DataProfileOutputProfilesColumnLengthDistributionProfileBuffer;

    public DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer;

    public DataProfileOutputProfilesColumnNullRatioProfileBuffer DataProfileOutputProfilesColumnNullRatioProfileBuffer;

    public DataProfileOutputProfilesColumnPatternProfileBuffer DataProfileOutputProfilesColumnPatternProfileBuffer;

    public DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer;

    public DataProfileOutputProfilesColumnStatisticsProfileBuffer DataProfileOutputProfilesColumnStatisticsProfileBuffer;

    public DataProfileOutputProfilesColumnValueDistributionProfileBuffer DataProfileOutputProfilesColumnValueDistributionProfileBuffer;

    public DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer;

    public ColumnOutputBuffer ColumnOutputBuffer;

    public TableOutputBuffer TableOutputBuffer;

    public DataProfileInputRequestsColumnStatisticsProfileRequestBuffer DataProfileInputRequestsColumnStatisticsProfileRequestBuffer;

    public ColumnValueDistributionProfileRequestBuffer ColumnValueDistributionProfileRequestBuffer;

    public DataProfileInputRequestsColumnPatternProfileRequestBuffer DataProfileInputRequestsColumnPatternProfileRequestBuffer;

    public DataProfileInputRequestsColumnNullRatioProfileRequestBuffer DataProfileInputRequestsColumnNullRatioProfileRequestBuffer;

    public TableInputBuffer TableInputBuffer;

    public ColumnInputBuffer ColumnInputBuffer;

    public DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer;

    public DataProfilerInputBuffer DataProfilerInputBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != DataSourceBuffer)
        {
            DataSourceBuffer.SetEndOfRowset();
            DataSourceBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnLengthDistributionProfileBuffer)
        {
            DataProfileOutputProfilesColumnLengthDistributionProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnLengthDistributionProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer)
        {
            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnNullRatioProfileBuffer)
        {
            DataProfileOutputProfilesColumnNullRatioProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnNullRatioProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnPatternProfileBuffer)
        {
            DataProfileOutputProfilesColumnPatternProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnPatternProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer)
        {
            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnStatisticsProfileBuffer)
        {
            DataProfileOutputProfilesColumnStatisticsProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnStatisticsProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnValueDistributionProfileBuffer)
        {
            DataProfileOutputProfilesColumnValueDistributionProfileBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnValueDistributionProfileBuffer = null;
        }

        if (null != DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer)
        {
            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer.SetEndOfRowset();
            DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer = null;
        }

        if (null != ColumnOutputBuffer)
        {
            ColumnOutputBuffer.SetEndOfRowset();
            ColumnOutputBuffer = null;
        }

        if (null != TableOutputBuffer)
        {
            TableOutputBuffer.SetEndOfRowset();
            TableOutputBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnStatisticsProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnStatisticsProfileRequestBuffer = null;
        }

        if (null != ColumnValueDistributionProfileRequestBuffer)
        {
            ColumnValueDistributionProfileRequestBuffer.SetEndOfRowset();
            ColumnValueDistributionProfileRequestBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnPatternProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnPatternProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnPatternProfileRequestBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnNullRatioProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnNullRatioProfileRequestBuffer = null;
        }

        if (null != TableInputBuffer)
        {
            TableInputBuffer.SetEndOfRowset();
            TableInputBuffer = null;
        }

        if (null != ColumnInputBuffer)
        {
            ColumnInputBuffer.SetEndOfRowset();
            ColumnInputBuffer = null;
        }

        if (null != DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer)
        {
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer.SetEndOfRowset();
            DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer = null;
        }

        if (null != DataProfilerInputBuffer)
        {
            DataProfilerInputBuffer.SetEndOfRowset();
            DataProfilerInputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataSource"))
            {
                DataSourceBuffer = new DataSourceBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnLengthDistributionProfile"))
            {
                DataProfileOutputProfilesColumnLengthDistributionProfileBuffer = new DataProfileOutputProfilesColumnLengthDistributionProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"))
            {
                DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer = new DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnNullRatioProfile"))
            {
                DataProfileOutputProfilesColumnNullRatioProfileBuffer = new DataProfileOutputProfilesColumnNullRatioProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnPatternProfile"))
            {
                DataProfileOutputProfilesColumnPatternProfileBuffer = new DataProfileOutputProfilesColumnPatternProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"))
            {
                DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer = new DataProfileOutputProfilesColumnPatternProfileTopRegexPatternsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnStatisticsProfile"))
            {
                DataProfileOutputProfilesColumnStatisticsProfileBuffer = new DataProfileOutputProfilesColumnStatisticsProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnValueDistributionProfile"))
            {
                DataProfileOutputProfilesColumnValueDistributionProfileBuffer = new DataProfileOutputProfilesColumnValueDistributionProfileBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"))
            {
                DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer = new DataProfileOutputProfilesColumnValueDistributionProfileValueDistributionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnOutput"))
            {
                ColumnOutputBuffer = new ColumnOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"TableOutput"))
            {
                TableOutputBuffer = new TableOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnStatisticsProfileRequest"))
            {
                DataProfileInputRequestsColumnStatisticsProfileRequestBuffer = new DataProfileInputRequestsColumnStatisticsProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnValueDistributionProfileRequest"))
            {
                ColumnValueDistributionProfileRequestBuffer = new ColumnValueDistributionProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnPatternProfileRequest"))
            {
                DataProfileInputRequestsColumnPatternProfileRequestBuffer = new DataProfileInputRequestsColumnPatternProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnNullRatioProfileRequest"))
            {
                DataProfileInputRequestsColumnNullRatioProfileRequestBuffer = new DataProfileInputRequestsColumnNullRatioProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"TableInput"))
            {
                TableInputBuffer = new TableInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ColumnInput"))
            {
                ColumnInputBuffer = new ColumnInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfileInputRequestsColumnLengthDistributionProfileRequest"))
            {
                DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer = new DataProfileInputRequestsColumnLengthDistributionProfileRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"DataProfilerInput"))
            {
                DataProfilerInputBuffer = new DataProfilerInputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String vCurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["vCurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_06a0e3d5b2d54eeebee8bc439196c839</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_06a0e3d5b2d54eeebee8bc439196c839</msb:DisplayName>
		<msb:ProjectId>{82252194-36B3-48E8-9BC3-4B14B836352D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_06a0e3d5b2d54eeebee8bc439196c839.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="DataProfile.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="HelperMethods.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_06a0e3d5b2d54eeebee8bc439196c839")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_06a0e3d5b2d54eeebee8bc439196c839")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_06a0e3d5b2d54eeebee8bc439196c839.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_06a0e3d5b2d54eeebee8bc439196c839.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[DataProfilerHelpers.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/", IsNullable = false)]
    public partial class DataProfile
    {

        private decimal profileVersionField;

        private DataProfileDtsDataSource[] dataSourcesField;

        private DataProfileDataProfileInput dataProfileInputField;

        private DataProfileDataProfileOutput dataProfileOutputField;

        /// <remarks/>
        public decimal ProfileVersion
        {
            get
            {
                return this.profileVersionField;
            }
            set
            {
                this.profileVersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DtsDataSource", IsNullable = false)]
        public DataProfileDtsDataSource[] DataSources
        {
            get
            {
                return this.dataSourcesField;
            }
            set
            {
                this.dataSourcesField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInput DataProfileInput
        {
            get
            {
                return this.dataProfileInputField;
            }
            set
            {
                this.dataProfileInputField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutput DataProfileOutput
        {
            get
            {
                return this.dataProfileOutputField;
            }
            set
            {
                this.dataProfileOutputField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDtsDataSource
    {

        private string dtsConnectionManagerIDField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public string DtsConnectionManagerID
        {
            get
            {
                return this.dtsConnectionManagerIDField;
            }
            set
            {
                this.dtsConnectionManagerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInput
    {

        private string profileModeField;

        private byte timeoutField;

        private DataProfileDataProfileInputRequests requestsField;

        /// <remarks/>
        public string ProfileMode
        {
            get
            {
                return this.profileModeField;
            }
            set
            {
                this.profileModeField = value;
            }
        }

        /// <remarks/>
        public byte Timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequests Requests
        {
            get
            {
                return this.requestsField;
            }
            set
            {
                this.requestsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequests
    {

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest columnNullRatioProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest columnStatisticsProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest columnLengthDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest columnValueDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequest columnPatternProfileRequestField;

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest ColumnNullRatioProfileRequest
        {
            get
            {
                return this.columnNullRatioProfileRequestField;
            }
            set
            {
                this.columnNullRatioProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest ColumnStatisticsProfileRequest
        {
            get
            {
                return this.columnStatisticsProfileRequestField;
            }
            set
            {
                this.columnStatisticsProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest ColumnLengthDistributionProfileRequest
        {
            get
            {
                return this.columnLengthDistributionProfileRequestField;
            }
            set
            {
                this.columnLengthDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest ColumnValueDistributionProfileRequest
        {
            get
            {
                return this.columnValueDistributionProfileRequestField;
            }
            set
            {
                this.columnValueDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequest ColumnPatternProfileRequest
        {
            get
            {
                return this.columnPatternProfileRequestField;
            }
            set
            {
                this.columnPatternProfileRequestField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn columnField;

        private string optionField;

        private decimal frequentValueThresholdField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string Option
        {
            get
            {
                return this.optionField;
            }
            set
            {
                this.optionField = value;
            }
        }

        /// <remarks/>
        public decimal FrequentValueThreshold
        {
            get
            {
                return this.frequentValueThresholdField;
            }
            set
            {
                this.frequentValueThresholdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn columnField;

        private byte maxNumberOfPatternsField;

        private byte percentageDataCoverageDesiredField;

        private bool caseSensitiveField;

        private string delimitersField;

        private string symbolsField;

        private object tagDataSourceIdField;

        private object tagTableNameField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public byte MaxNumberOfPatterns
        {
            get
            {
                return this.maxNumberOfPatternsField;
            }
            set
            {
                this.maxNumberOfPatternsField = value;
            }
        }

        /// <remarks/>
        public byte PercentageDataCoverageDesired
        {
            get
            {
                return this.percentageDataCoverageDesiredField;
            }
            set
            {
                this.percentageDataCoverageDesiredField = value;
            }
        }

        /// <remarks/>
        public bool CaseSensitive
        {
            get
            {
                return this.caseSensitiveField;
            }
            set
            {
                this.caseSensitiveField = value;
            }
        }

        /// <remarks/>
        public string Delimiters
        {
            get
            {
                return this.delimitersField;
            }
            set
            {
                this.delimitersField = value;
            }
        }

        /// <remarks/>
        public string Symbols
        {
            get
            {
                return this.symbolsField;
            }
            set
            {
                this.symbolsField = value;
            }
        }

        /// <remarks/>
        public object TagDataSourceId
        {
            get
            {
                return this.tagDataSourceIdField;
            }
            set
            {
                this.tagDataSourceIdField = value;
            }
        }

        /// <remarks/>
        public object TagTableName
        {
            get
            {
                return this.tagTableNameField;
            }
            set
            {
                this.tagTableNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutput
    {

        private DataProfileDataProfileOutputProfiles profilesField;

        /// <remarks/>
        public DataProfileDataProfileOutputProfiles Profiles
        {
            get
            {
                return this.profilesField;
            }
            set
            {
                this.profilesField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfiles
    {

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] columnNullRatioProfileField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] columnStatisticsProfileField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] columnLengthDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] columnValueDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfile[] columnPatternProfileField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnNullRatioProfile")]
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] ColumnNullRatioProfile
        {
            get
            {
                return this.columnNullRatioProfileField;
            }
            set
            {
                this.columnNullRatioProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnStatisticsProfile")]
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] ColumnStatisticsProfile
        {
            get
            {
                return this.columnStatisticsProfileField;
            }
            set
            {
                this.columnStatisticsProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnLengthDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] ColumnLengthDistributionProfile
        {
            get
            {
                return this.columnLengthDistributionProfileField;
            }
            set
            {
                this.columnLengthDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnValueDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] ColumnValueDistributionProfile
        {
            get
            {
                return this.columnValueDistributionProfileField;
            }
            set
            {
                this.columnValueDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnPatternProfile")]
        public DataProfileDataProfileOutputProfilesColumnPatternProfile[] ColumnPatternProfile
        {
            get
            {
                return this.columnPatternProfileField;
            }
            set
            {
                this.columnPatternProfileField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn columnField;

        private ushort nullCountField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NullCount
        {
            get
            {
                return this.nullCountField;
            }
            set
            {
                this.nullCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private short rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn columnField;

        private string minValueField;

        private string maxValueField;

        private decimal meanField;

        private bool meanFieldSpecified;

        private decimal stdDevField;

        private bool stdDevFieldSpecified;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string MinValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                this.minValueField = value;
            }
        }

        /// <remarks/>
        public string MaxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                this.maxValueField = value;
            }
        }

        /// <remarks/>
        public decimal Mean
        {
            get
            {
                return this.meanField;
            }
            set
            {
                this.meanField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanSpecified
        {
            get
            {
                return this.meanFieldSpecified;
            }
            set
            {
                this.meanFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal StdDev
        {
            get
            {
                return this.stdDevField;
            }
            set
            {
                this.stdDevField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StdDevSpecified
        {
            get
            {
                return this.stdDevFieldSpecified;
            }
            set
            {
                this.stdDevFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private sbyte lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sbyte LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private byte minLengthField;

        private byte maxLengthField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] lengthDistributionField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        public byte MinLength
        {
            get
            {
                return this.minLengthField;
            }
            set
            {
                this.minLengthField = value;
            }
        }

        /// <remarks/>
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("LengthDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] LengthDistribution
        {
            get
            {
                return this.lengthDistributionField;
            }
            set
            {
                this.lengthDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem
    {

        private byte lengthField;

        private ushort countField;

        /// <remarks/>
        public byte Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn columnField;

        private ushort numberOfDistinctValuesField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] valueDistributionField;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NumberOfDistinctValues
        {
            get
            {
                return this.numberOfDistinctValuesField;
            }
            set
            {
                this.numberOfDistinctValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] ValueDistribution
        {
            get
            {
                return this.valueDistributionField;
            }
            set
            {
                this.valueDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem
    {

        private string valueField;

        private ushort countField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileColumn columnField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] topRegexPatternsField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("PatternDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] TopRegexPatterns
        {
            get
            {
                return this.topRegexPatternsField;
            }
            set
            {
                this.topRegexPatternsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem
    {

        private string regexTextField;

        private byte frequencyField;

        /// <remarks/>
        public string RegexText
        {
            get
            {
                return this.regexTextField;
            }
            set
            {
                this.regexTextField = value;
            }
        }

        /// <remarks/>
        public byte Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[HelperMethods.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Xml;
using System.Xml.Serialization;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    internal static class HelperMethods
    {
        private static JavaScriptSerializer json;
        private static JavaScriptSerializer JSON { get { return json ?? (json = new JavaScriptSerializer()); } }

        public static Stream ToStream(this string @this)
        {
            var stream = new MemoryStream();
            var writer = new StreamWriter(stream);
            writer.Write(@this);
            writer.Flush();
            stream.Position = 0;
            return stream;
        }


        public static T ParseXML<T>(this string @this) where T : class
        {
            var reader = XmlReader.Create(@this.Trim().ToStream(), new XmlReaderSettings() { ConformanceLevel = ConformanceLevel.Document });
            return new XmlSerializer(typeof(T)).Deserialize(reader) as T;
        }

        public static T ParseJSON<T>(this string @this) where T : class
        {
            return JSON.Deserialize<T>(@this.Trim());
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[DataProfile.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_06a0e3d5b2d54eeebee8bc439196c839
{
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/", IsNullable = false)]
    public partial class DataProfile
    {

        private decimal profileVersionField;

        private DataProfileDtsDataSource[] dataSourcesField;

        private DataProfileDataProfileInput dataProfileInputField;

        private DataProfileDataProfileOutput dataProfileOutputField;

        /// <remarks/>
        public decimal ProfileVersion
        {
            get
            {
                return this.profileVersionField;
            }
            set
            {
                this.profileVersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DtsDataSource", IsNullable = false)]
        public DataProfileDtsDataSource[] DataSources
        {
            get
            {
                return this.dataSourcesField;
            }
            set
            {
                this.dataSourcesField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInput DataProfileInput
        {
            get
            {
                return this.dataProfileInputField;
            }
            set
            {
                this.dataProfileInputField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutput DataProfileOutput
        {
            get
            {
                return this.dataProfileOutputField;
            }
            set
            {
                this.dataProfileOutputField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDtsDataSource
    {

        private string dtsConnectionManagerIDField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public string DtsConnectionManagerID
        {
            get
            {
                return this.dtsConnectionManagerIDField;
            }
            set
            {
                this.dtsConnectionManagerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInput
    {

        private string profileModeField;

        private byte timeoutField;

        private DataProfileDataProfileInputRequests requestsField;

        /// <remarks/>
        public string ProfileMode
        {
            get
            {
                return this.profileModeField;
            }
            set
            {
                this.profileModeField = value;
            }
        }

        /// <remarks/>
        public byte Timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequests Requests
        {
            get
            {
                return this.requestsField;
            }
            set
            {
                this.requestsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequests
    {

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest columnNullRatioProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest columnStatisticsProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest columnLengthDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest columnValueDistributionProfileRequestField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequest columnPatternProfileRequestField;

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest ColumnNullRatioProfileRequest
        {
            get
            {
                return this.columnNullRatioProfileRequestField;
            }
            set
            {
                this.columnNullRatioProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest ColumnStatisticsProfileRequest
        {
            get
            {
                return this.columnStatisticsProfileRequestField;
            }
            set
            {
                this.columnStatisticsProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest ColumnLengthDistributionProfileRequest
        {
            get
            {
                return this.columnLengthDistributionProfileRequestField;
            }
            set
            {
                this.columnLengthDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest ColumnValueDistributionProfileRequest
        {
            get
            {
                return this.columnValueDistributionProfileRequestField;
            }
            set
            {
                this.columnValueDistributionProfileRequestField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequest ColumnPatternProfileRequest
        {
            get
            {
                return this.columnPatternProfileRequestField;
            }
            set
            {
                this.columnPatternProfileRequestField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnNullRatioProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn columnField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnStatisticsProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnLengthDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn columnField;

        private string optionField;

        private decimal frequentValueThresholdField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string Option
        {
            get
            {
                return this.optionField;
            }
            set
            {
                this.optionField = value;
            }
        }

        /// <remarks/>
        public decimal FrequentValueThreshold
        {
            get
            {
                return this.frequentValueThresholdField;
            }
            set
            {
                this.frequentValueThresholdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnValueDistributionProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequest
    {

        private string dataSourceIDField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable tableField;

        private DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn columnField;

        private byte maxNumberOfPatternsField;

        private byte percentageDataCoverageDesiredField;

        private bool caseSensitiveField;

        private string delimitersField;

        private string symbolsField;

        private object tagDataSourceIdField;

        private object tagTableNameField;

        private string idField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public byte MaxNumberOfPatterns
        {
            get
            {
                return this.maxNumberOfPatternsField;
            }
            set
            {
                this.maxNumberOfPatternsField = value;
            }
        }

        /// <remarks/>
        public byte PercentageDataCoverageDesired
        {
            get
            {
                return this.percentageDataCoverageDesiredField;
            }
            set
            {
                this.percentageDataCoverageDesiredField = value;
            }
        }

        /// <remarks/>
        public bool CaseSensitive
        {
            get
            {
                return this.caseSensitiveField;
            }
            set
            {
                this.caseSensitiveField = value;
            }
        }

        /// <remarks/>
        public string Delimiters
        {
            get
            {
                return this.delimitersField;
            }
            set
            {
                this.delimitersField = value;
            }
        }

        /// <remarks/>
        public string Symbols
        {
            get
            {
                return this.symbolsField;
            }
            set
            {
                this.symbolsField = value;
            }
        }

        /// <remarks/>
        public object TagDataSourceId
        {
            get
            {
                return this.tagDataSourceIdField;
            }
            set
            {
                this.tagDataSourceIdField = value;
            }
        }

        /// <remarks/>
        public object TagTableName
        {
            get
            {
                return this.tagTableNameField;
            }
            set
            {
                this.tagTableNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestTable
    {

        private string schemaField;

        private string tableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileInputRequestsColumnPatternProfileRequestColumn
    {

        private bool isWildCardField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsWildCard
        {
            get
            {
                return this.isWildCardField;
            }
            set
            {
                this.isWildCardField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutput
    {

        private DataProfileDataProfileOutputProfiles profilesField;

        /// <remarks/>
        public DataProfileDataProfileOutputProfiles Profiles
        {
            get
            {
                return this.profilesField;
            }
            set
            {
                this.profilesField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfiles
    {

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] columnNullRatioProfileField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] columnStatisticsProfileField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] columnLengthDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] columnValueDistributionProfileField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfile[] columnPatternProfileField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnNullRatioProfile")]
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfile[] ColumnNullRatioProfile
        {
            get
            {
                return this.columnNullRatioProfileField;
            }
            set
            {
                this.columnNullRatioProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnStatisticsProfile")]
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfile[] ColumnStatisticsProfile
        {
            get
            {
                return this.columnStatisticsProfileField;
            }
            set
            {
                this.columnStatisticsProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnLengthDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile[] ColumnLengthDistributionProfile
        {
            get
            {
                return this.columnLengthDistributionProfileField;
            }
            set
            {
                this.columnLengthDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnValueDistributionProfile")]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfile[] ColumnValueDistributionProfile
        {
            get
            {
                return this.columnValueDistributionProfileField;
            }
            set
            {
                this.columnValueDistributionProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnPatternProfile")]
        public DataProfileDataProfileOutputProfilesColumnPatternProfile[] ColumnPatternProfile
        {
            get
            {
                return this.columnPatternProfileField;
            }
            set
            {
                this.columnPatternProfileField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn columnField;

        private ushort nullCountField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NullCount
        {
            get
            {
                return this.nullCountField;
            }
            set
            {
                this.nullCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private short rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnNullRatioProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn columnField;

        private string minValueField;

        private string maxValueField;

        private decimal meanField;

        private bool meanFieldSpecified;

        private decimal stdDevField;

        private bool stdDevFieldSpecified;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public string MinValue
        {
            get
            {
                return this.minValueField;
            }
            set
            {
                this.minValueField = value;
            }
        }

        /// <remarks/>
        public string MaxValue
        {
            get
            {
                return this.maxValueField;
            }
            set
            {
                this.maxValueField = value;
            }
        }

        /// <remarks/>
        public decimal Mean
        {
            get
            {
                return this.meanField;
            }
            set
            {
                this.meanField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanSpecified
        {
            get
            {
                return this.meanFieldSpecified;
            }
            set
            {
                this.meanFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal StdDev
        {
            get
            {
                return this.stdDevField;
            }
            set
            {
                this.stdDevField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StdDevSpecified
        {
            get
            {
                return this.stdDevFieldSpecified;
            }
            set
            {
                this.stdDevFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnStatisticsProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private sbyte lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sbyte LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn columnField;

        private bool ignoreLeadingSpaceField;

        private bool ignoreTrailingSpaceField;

        private byte minLengthField;

        private byte maxLengthField;

        private DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] lengthDistributionField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreLeadingSpace
        {
            get
            {
                return this.ignoreLeadingSpaceField;
            }
            set
            {
                this.ignoreLeadingSpaceField = value;
            }
        }

        /// <remarks/>
        public bool IgnoreTrailingSpace
        {
            get
            {
                return this.ignoreTrailingSpaceField;
            }
            set
            {
                this.ignoreTrailingSpaceField = value;
            }
        }

        /// <remarks/>
        public byte MinLength
        {
            get
            {
                return this.minLengthField;
            }
            set
            {
                this.minLengthField = value;
            }
        }

        /// <remarks/>
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("LengthDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem[] LengthDistribution
        {
            get
            {
                return this.lengthDistributionField;
            }
            set
            {
                this.lengthDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnLengthDistributionProfileLengthDistributionItem
    {

        private byte lengthField;

        private ushort countField;

        /// <remarks/>
        public byte Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn columnField;

        private ushort numberOfDistinctValuesField;

        private DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] valueDistributionField;

        private bool isExactField;

        private string profileRequestIDField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        public ushort NumberOfDistinctValues
        {
            get
            {
                return this.numberOfDistinctValuesField;
            }
            set
            {
                this.numberOfDistinctValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem[] ValueDistribution
        {
            get
            {
                return this.valueDistributionField;
            }
            set
            {
                this.valueDistributionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private short lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnValueDistributionProfileValueDistributionItem
    {

        private string valueField;

        private ushort countField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public ushort Count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfile
    {

        private string dataSourceIDField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileTable tableField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfileColumn columnField;

        private DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] topRegexPatternsField;

        private string profileRequestIDField;

        private bool isExactField;

        /// <remarks/>
        public string DataSourceID
        {
            get
            {
                return this.dataSourceIDField;
            }
            set
            {
                this.dataSourceIDField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileTable Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        public DataProfileDataProfileOutputProfilesColumnPatternProfileColumn Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("PatternDistributionItem", IsNullable = false)]
        public DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem[] TopRegexPatterns
        {
            get
            {
                return this.topRegexPatternsField;
            }
            set
            {
                this.topRegexPatternsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProfileRequestID
        {
            get
            {
                return this.profileRequestIDField;
            }
            set
            {
                this.profileRequestIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsExact
        {
            get
            {
                return this.isExactField;
            }
            set
            {
                this.isExactField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileTable
    {

        private string dataSourceField;

        private string databaseField;

        private string schemaField;

        private string tableField;

        private ushort rowCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database
        {
            get
            {
                return this.databaseField;
            }
            set
            {
                this.databaseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema
        {
            get
            {
                return this.schemaField;
            }
            set
            {
                this.schemaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort RowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfileColumn
    {

        private string nameField;

        private string sqlDbTypeField;

        private byte maxLengthField;

        private byte precisionField;

        private byte scaleField;

        private ushort lCIDField;

        private byte codePageField;

        private bool isNullableField;

        private byte stringCompareOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SqlDbType
        {
            get
            {
                return this.sqlDbTypeField;
            }
            set
            {
                this.sqlDbTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte MaxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort LCID
        {
            get
            {
                return this.lCIDField;
            }
            set
            {
                this.lCIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte CodePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.isNullableField;
            }
            set
            {
                this.isNullableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte StringCompareOptions
        {
            get
            {
                return this.stringCompareOptionsField;
            }
            set
            {
                this.stringCompareOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/")]
    public partial class DataProfileDataProfileOutputProfilesColumnPatternProfilePatternDistributionItem
    {

        private string regexTextField;

        private byte frequencyField;

        /// <remarks/>
        public string RegexText
        {
            get
            {
                return this.regexTextField;
            }
            set
            {
                this.regexTextField = value;
            }
        }

        /// <remarks/>
        public byte Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }
    }

}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_06a0e3d5b2d54eeebee8bc439196c839.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AARvpwAABgIUfQ8AAAQCexAAAAQsEgJ7EAAABG+3AAAGAhR9EAAABAJ7EQAABCwSAnsRAAAEb78A
AAYCFH0RAAAEAnsSAAAELBICexIAAARvyQAABgIUfRIAAAQCexMAAAQsEgJ7EwAABG/RAAAGAhR9
EwAABAJ7FAAABCwSAnsUAAAEb90AAAYCFH0UAAAEAnsVAAAELBICexUAAARv5QAABgIUfRUAAAQq
ABMwBQBDAwAAAgAAERYKOCIDAAAEBpQOBHLuAABwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHMFAAAG
fQMAAAQEBpQOBHIEAQBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHMPAAAGfQQAAAQEBpQOBHJ2AQBw
KCIAAAozGQIFBpoCBAaUKCMAAAoOBHMhAAAGfQUAAAQEBpQOBHINAgBwKCIAAAozGQIFBpoCBAaU
KCMAAAoOBHMpAAAGfQYAAAQEBpQOBHJtAgBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHM1AAAGfQcA
AAQEBpQOBHLJAgBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHM/AAAGfQgAAAQEBpQOBHJFAwBwKCIA
AAozGQIFBpoCBAaUKCMAAAoOBHNHAAAGfQkAAAQEBpQOBHKnAwBwKCIAAAozGQIFBpoCBAaUKCMA
AAoOBHNdAAAGfQoAAAQEBpQOBHIXBABwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHNpAAAGfQsAAAQE
BpQOBHKqBABwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHNxAAAGfQwAAAQEBpQOBHLEBABwKCIAAAoz
GQIFBpoCBAaUKCMAAAoOBHOHAAAGfQ0AAAQEBpQOBHLcBABwKCIAAAozGQIFBpoCBAaUKCMAAAoO
BHOVAAAGfQ4AAAQEBpQOBHJKBQBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHOdAAAGfQ8AAAQEBpQO
BHKWBQBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHOpAAAGfRAAAAQEBpQOBHL+BQBwKCIAAAozGQIF
BpoCBAaUKCMAAAoOBHO5AAAGfREAAAQEBpQOBHJqBgBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHPB
AAAGfRIAAAQEBpQOBHKABgBwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHPLAAAGfRMAAAQEBpQOBHKY
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
VxWiCQkNAAAA+gEzABYAAAEAAAA3AAAAQgAAANIAAACOAgAAkAEAADkAAACuAAAAAwAAAD4AAABS
AQAACgIAAAEAAAABAAAABwAAAAEAAAACAAAAAgAAAAAAlBIBAAAAAAAGADEQ9yAGAIAQ9yAGADkR
9yAGAGkP1iATAIshAAAGAJYPlhsGAGMQlhsGAEQQlhsGACARlhsGAKAQlhsGALkQlhsGAOcPlhsG
AAIQ7BEKAOgQeA4GANsb1hcKALceeA4OAMQdeA4KAFAceA4GAGES1hcKADQkeA4GAPQj1hcSAK0P
XRsSAA8RXRsSABsQXRsSANEPXRsSANQQXRsSAL4PXRsWAKogdhsGALsWNwESAIscoRYGAEwP1iAG
AEwgNyEGAEQcSBsaABYPaRIaAH0PaRIaAN0OMxsGADEP9yAGAM4LNwEGAMsb1hcGAAAY1hcGADoA
1hceABEAXCAeAAEAXCBTAIQoAAAeACIAXCAGAAYS1hcGALUWNwEGAIQgNwEGAJEgNwESAHkioRYS
AIMSoRYGALAO1hcGAJ4L1hcSAJwgXRsGAPEolhsAAAAAZAAAAAAAAQABAAEAEAAIGAAAWAABAAEA
AQAQAJUcAABBAAEABQABABAA5BwAAEEAAQAPAAEAEAAiHgAAQQABACEAAQAQAFcdAABBAAEAKQAB
ABAAIx0AAEEAAQA1AAEAEABzHgAAQQABAD8AAQAQAI0dAABBAAEARwABABAAphwAAEEAAQBdAAEA
EADTHQAAQQABAGkAAQAQADUgAABBAAEAcQABABAAIyAAAEEAAQCHAAEAEACrHwAAQQABAJUAAQAQ
AMQeAABBAAEAnQABABAANR8AAEEAAQCpAAEAEABvHwAAQQABALkAAQAQAOgfAABBAAEAwQABABAA
+R8AAEEAAQDLAAEAEADwHgAAQQABANMAAQAQAAsgAABBAAEA3wABABAAFiQAAFEAAQDnAAEAEAC+
IgAAVQAWAOwAAQAQANUhAABVABcA7QABABAA0wtAAFUAGADvAAEAEAA2CEAAVQAcAPgAAQAQANcn
QABVAB8A/wABABAAliNAAFUAIgAGAQEAEACrJkAAVQAnABEBAQAQAPMKQABVACsAGgEBABAAYhpA
AFUALQAfAQEAEAAyJ0AAVQAuACIBAQAQADkLQABVADIAKwEBABAAqRpAAFUANAAwAQEAEACeJUAA
VQA1ADMBAQAQAGAKQABVADsAQAEBABAAzRlAAFUAPQBFAQEAEAD/JEAAVQA+AEgBAQAQABIKQABV
AEQAVQEBABAAfhlAAFUARgBaAQEAEAAoJkAAVQBHAF0BAQAQAK8KQABVAFIAdAEBABAAHRpAAFUA
VAB5AQEAEAAfKEAAVQBVAHwBAQAQAPkhQABVAFYAfwEBABAAlQ1AAFUAWwCKAQEAEACRCUAAVQBh
AJcBAQAQAPsYQABVAGYAogEBABAACA5AAFUAbwC1AQEAEADRCUAAVQB6AMwBAQAQADwZQABVAH8A
1wEBABAAsAxAAFUAiADqAQEAEAAKCUAAVQCSAP8BAQAQAHIYQABVAJcACgIBABAALBdAAFUAoAAd
AgEAEAAlDEAAVQCiACICAQAQAMIIQABVAKkAMQIBABAAKRhAAFUArgA8AgEAEADUFkAAVQC3AE8C
AQAQACYNQABVALkAVAIBABAAUwlAAFUAvwBhAgEAEAC8GEAAVQDEAGwCAQAQAIYXQABVAM0AfwKA
ARAA6SBAAFUAzwCEAgAAEAA+IZohVQDQAIgCAAEQAIIimiGRANIAjAIGAL4iHAEGANUhIAEGAJUc
JAEGAOQcKAEGACIeLAEGAFcdMAEGACMdNAEGAHMeOAEGAI0dPAEGAKYcQAEGANMdRAEGADUgSAEG
ACMgTAEGAKsfUAEGAMQeVAEGADUfWAEGAG8fXAEGAOgfYAEGAPkfZAEGAPAeaAEGAAsgbAEBACQk
cAEBACQkcAEBAAAFdAEBAE8FeAEBAP8GfQEBABUHgQEBAHIChgEBAOgChgEBAFAEhgEBAF0DhgEB
APIGiQEBAPAFjAEBAKsGkAEBAM4GlAEBAF4GmQEBADMGngEBAIoGowEBAGAChgEBAJcDqAEBAOUE
rAEBAOgChgEBAKQChgEBAJcDhgEBAAwDsAEBAGAChgEBAJcDswEBAOUEuAEBAOgChgEBAKQChgEB
AJcDhgEBAAwDsAEBAGAChgEBAJcDvQEBAOUEwgEBABwDsAEBADQDsAEBAOgChgEBAKQChgEBAJcD
hgEBAAwDsAEBAGAChgEBAJcDxwEBAOUEzAEBABQFhgEBAPACdAEBAOgChgEBAKQChgEBAJcDhgEB
AAwDsAEBAGAChgEBAJcD0QEBAOUE1gEBALEFiQEBAMUCiQEBAJ4EsAEBAOAFhgEBAIoFhgEBALAC
2wEBAD4E2wEBAOgChgEBAKQChgEBAJcDhgEBAAwDsAEBAGAF3gEBAAUE4wEBACEE6QEBAMYD7wEB
AKID9QEBAOsD+wEBAGAChgEBAJcDAQIBAOUEBgIBAAsGCwIBAI4ChgEBAP4FsAEBAE0DhgEBAGkE
hgEBAKQChgEBAJcDhgEBABoGDgIBAFAEhgEBAFoEhgEBAMAEiQEBAPEEiQEBAHwDiQEBAFYCDgIB
AG4DiQEBAIcDsAEBAJcFiQEBAGAChgEBAJcDEQIBAOUEFgIBAHcEhgEBAIUEhgEBANsEdAEBAJ4B
sAEBADsHdAEBALEBsAEBAP4FsAEBAI4ChgEBAE0DhgEBAGkEhgEBAKQChgEBAJcDhgEBABoGCwIB
AFAEhgEBAFoEhgEBAMAEiQEBAPEEiQEBAHwDiQEBAFYCGwIBAG4DiQEBAIcDsAEBAJcFiQEBAGAC
hgEBAJcDHgIBAOUEIwIBABwDsAEBADQDsAEBALEEiQEBAMAEiQEBADcFKAIBAI4ChgEBAP4FsAEB
AE0DhgEBAGkEhgEBAKQChgEBAJcDhgEBABoGCwIBAFAEhgEBAFoEhgEBAMAEiQEBAPEEiQEBAHwD
iQEBAFYCCwIBAG4DiQEBAIcDsAEBAJcFiQEBAM8EiQEBACgGCwIBAGAChgEBAJcDLgIBAOUEMwIB
AG4FCwIBACAFOAIBAP4FsAEBAI4ChgEBAE0DhgEBAGkEhgEBAKQChgEBAJcDhgEBABoGCwIBAFAE
hgEBAFoEhgEBAMAEiQEBAPEEiQEBAHwDiQEBAFYCDgIBAG4DiQEBAIcDsAEBAJcFiQEBAJMEhgEB
ACgGCwIBAGAChgEBAJcDPgIBAOUEQwIBAMoFSAIBAI4ChgEBAP4FsAEBAE0DhgEBAGkEhgEBAKQC
hgEBAJcDhgEBABoGCwIBAFAEhgEBAFoEhgEBAMAEiQEBAPEEiQEBAHwDiQEBAFYCCwIBAG4DiQEB
AIcDsAEBAJcFiQEBACwHhgEBAEcHiQERAD8cTgIRAOIXUgIRAM0OVwIRAAgIXAJQIAAAAADGAFcR
AQABAFggAAAAAMYAYhEBAAEAYCAAAAAAxgDIIwEAAQDUNgAAAACGGL8gAQABANw2AAAAAIYYvyBq
AAEA5zYAAAAAhgjKABAABADxNgAAAACGCPISYQIFAAg3AAAAAIYIhgAQAAYAEjcAAAAAhgjMEmEC
BwApNwAAAACGCE0OEAAIADM3AAAAAIYIjhRhAgkASjcAAAAAhgDKKAEACgBSNwAAAACGAPsjAQAK
AFo3AAAAAIYA/iN6AAoA3DYAAAAAhhi/IGoACgDnNgAAAACGCJ4AEAANAPE2AAAAAIYI2hJhAg4A
YjcAAAAAhgjBB2ECDwASNwAAAACGCNcTYQIQAHE3AAAAAIYI8AdhAhEAMzcAAAAAhgj1E2ECEgCA
NwAAAACGCOgjYQITAI83AAAAAIYI/RVhAhQApjcAAAAAhghTEgUAFQC1NwAAAACGCCcVYQIWAMw3
AAAAAIYINxIFABcA2zcAAAAAhggSFWECGADyNwAAAACGCPoAEAAZAPw3AAAAAIYIFBNhAhoASjcA
AAAAhgDKKAEAGwBSNwAAAACGAPsjAQAbAFo3AAAAAIYA/iN6ABsA3DYAAAAAhhi/IGoAGwATOAAA
AACGCB4SBQAeAPE2AAAAAIYIABVhAh8AIjgAAAAAhghOJAUAIAASNwAAAACGCBAWYQIhAEo3AAAA
AIYAyigBACIAUjcAAAAAhgD7IwEAIgBaNwAAAACGAP4jegAiANw2AAAAAIYYvyBqACIA5zYAAAAA
hgieABAAJQDxNgAAAACGCNoSYQImAGI3AAAAAIYI6CNhAicAEjcAAAAAhgj9FWECKAAxOAAAAACG
CGYkBQApADM3AAAAAIYIIRZhAioAQDgAAAAAhgj6ABAAKwCPNwAAAACGCBQTYQIsAEo3AAAAAIYA
yigBAC0AUjcAAAAAhgD7IwEALQBaNwAAAACGAP4jegAtANw2AAAAAIYYvyBqAC0A5zYAAAAAhgie
ABAAMADxNgAAAACGCNoSYQIxAGI3AAAAAIYI6CNhAjIAEjcAAAAAhgj9FWECMwApNwAAAACGCPoA
EAA0ADM3AAAAAIYIFBNhAjUASjcAAAAAhgDKKAEANgBSNwAAAACGAPsjAQA2AFo3AAAAAIYA/iN6
ADYA3DYAAAAAhhi/IGoANgDnNgAAAACGCGIoEAA5APE2AAAAAIYIXRZhAjoAIjgAAAAAhgjfKAUA
OwASNwAAAACGCIQWYQI8AEo3AAAAAIYAyigBAD0AUjcAAAAAhgD7IwEAPQBaNwAAAACGAP4jegA9
ANw2AAAAAIYYvyBqAD0A5zYAAAAAhgieABAAQADxNgAAAACGCNoSYQJBAGI3AAAAAIYI6CNhAkIA
EjcAAAAAhgj9FWECQwApNwAAAACGCKkREABEADM3AAAAAIYI7BRhAkUASjgAAAAAhgj3F2YCRgCP
NwAAAACGCDwVYQJHAFk4AAAAAIYI2AFhAkgAtTcAAAAAhghCE2ECSQBoOAAAAACGCI8REABKANs3
AAAAAIYI2BRhAksA8jcAAAAAhgj6ABAATAD8NwAAAACGCBQTYQJNAHI4AAAAAIYIvyhmAk4AgTgA
AAAAhghyFmECTwCYOAAAAACGCP4BYQJQAKc4AAAAAIYIWxNhAlEASjcAAAAAhgDKKAEAUgBSNwAA
AACGAPsjAQBSAFo3AAAAAIYA/iN6AFIA3DYAAAAAhhi/IGoAUgDnNgAAAACGCJ4AEABVAPE2AAAA
AIYI2hJhAlYAYjcAAAAAhgjoI2ECVwASNwAAAACGCP0VYQJYADE4AAAAAIYIOSIFAFkAMzcAAAAA
hghzFWECWgBAOAAAAACGCPoAEABbAI83AAAAAIYIFBNhAlwASjcAAAAAhgDKKAEAXQBSNwAAAACG
APsjAQBdAFo3AAAAAIYA/iN6AF0A3DYAAAAAhhi/IGoAXQDnNgAAAACGCHgREABgAPE2AAAAAIYI
xxRhAmEAIjgAAAAAhghOJAUAYgASNwAAAACGCBAWYQJjAEo3AAAAAIYAyigBAGQAUjcAAAAAhgD7
IwEAZABaNwAAAACGAP4jegBkANw2AAAAAIYYvyBqAGQAEzgAAAAAhgiNCAUAZwDxNgAAAACGCEIU
YQJoAGI3AAAAAIYIjwthAmkAEjcAAAAAhgh4FGECagAxOAAAAACGCHYABQBrADM3AAAAAIYIvBJh
AmwAvjgAAAAAhghTEgUAbQCPNwAAAACGCCcVYQJuAM04AAAAAIYITQ4QAG8AtTcAAAAAhgiOFGEC
cADMNwAAAACGCP8aBQBxANs3AAAAAIYITBVhAnIA1zgAAAAAhgikCAUAcwD8NwAAAACGCFYUYQJ0
AOY4AAAAAIYIpw4QAHUAgTgAAAAAhgieFGECdgDwOAAAAACGCOMiBQB3AKc4AAAAAIYIqBVhAngA
SjcAAAAAhgDKKAEAeQBSNwAAAACGAPsjAQB5AFo3AAAAAIYA/iN6AHkA3DYAAAAAhhi/IGoAeQDn
NgAAAACGCAIPEAB8APE2AAAAAIYIsxRhAn0ACDcAAAAAhggnCBAAfgASNwAAAACGCBQUYQJ/ADE4
AAAAAIYIgSQFAIAAMzcAAAAAhgg2FmECgQBAOAAAAACGCE4BEACCAI83AAAAAIYIMBNhAoMAzTgA
AAAAhgi4CBAAhAC1NwAAAACGCGcUYQKFAEo3AAAAAIYAyigBAIYAUjcAAAAAhgD7IwEAhgBaNwAA
AACGAP4jegCGANw2AAAAAIYYvyBqAIYA5zYAAAAAhgieABAAiQDxNgAAAACGCNoSYQKKAAg3AAAA
AIYIhgAQAIsAEjcAAAAAhgjMEmECjABKNwAAAACGAMooAQCNAFI3AAAAAIYA+yMBAI0AWjcAAAAA
hgD+I3oAjQDcNgAAAACGGL8gagCNAOc2AAAAAIYIngAQAJAA8TYAAAAAhgjaEmECkQD/OAAAAACG
CHEHZgKSABI3AAAAAIYInxNhApMAKTcAAAAAhgiGABAAlAAzNwAAAACGCMwSYQKVAEA4AAAAAIYI
wBsQAJYAjzcAAAAAhghhFWEClwBKNwAAAACGAMooAQCYAFI3AAAAAIYA+yMBAJgAWjcAAAAAhgD+
I3oAmADcNgAAAACGGL8gagCYAOc2AAAAAIYIngAQAJsA8TYAAAAAhgjaEmECnAAINwAAAACGCG0j
EACdABI3AAAAAIYI5xVhAp4AKTcAAAAAhgiGABAAnwAzNwAAAACGCMwSYQKgAL44AAAAAIYIFCMF
AKEAjzcAAAAAhgjIFWECogCmNwAAAACGCDQCBQCjALU3AAAAAIYIdhNhAqQAaDgAAAAAhgicIhAA
pQDbNwAAAACGCJUVYQKmAEo3AAAAAIYAyigBAKcAUjcAAAAAhgD7IwEApwBaNwAAAACGAP4jegCn
ANw2AAAAAIYYvyBqAKcA5zYAAAAAhgiGABAAqgDxNgAAAACGCMwSYQKrAAg3AAAAAIYIJwgQAKwA
EjcAAAAAhggUFGECrQBKNwAAAACGAMooAQCuAFI3AAAAAIYA+yMBAK4AWjcAAAAAhgD+I3oArgDc
NgAAAACGGL8gagCuAOc2AAAAAIYIhgAQALEA8TYAAAAAhgjMEmECsgAINwAAAACGCE4BEACzABI3
AAAAAIYIMBNhArQAKTcAAAAAhgi4CBAAtQAzNwAAAACGCGcUYQK2AEo3AAAAAIYAyigBALcAUjcA
AAAAhgD7IwEAtwBaNwAAAACGAP4jegC3ANw2AAAAAIYYvyBqALcA5zYAAAAAhgiGABAAugDxNgAA
AACGCMwSYQK7AGI3AAAAAIYImwdhArwAEjcAAAAAhgjBE2ECvQBKNwAAAACGAMooAQC+AFI3AAAA
AIYA+yMBAL4AWjcAAAAAhgD+I3oAvgDcNgAAAACGGL8gagC+AOc2AAAAAIYIngAQAMEA8TYAAAAA
hgjaEmECwgAINwAAAACGCIYAEADDABI3AAAAAIYIzBJhAsQAcTcAAAAAhgjBB2ECxQAzNwAAAACG
CNcTYQLGAIA3AAAAAIYI8AdhAscAjzcAAAAAhgj1E2ECyABKNwAAAACGAMooAQDJAFI3AAAAAIYA
+yMBAMkAWjcAAAAAhgD+I3oAyQDcNgAAAACGGL8gagDJAOc2AAAAAIYIbwgQAMwA8TYAAAAAhggq
FGECzQAINwAAAACGCKEnEADOABI3AAAAAIYIShZhAs8ASjcAAAAAhgDKKAEA0ABSNwAAAACGAPsj
AQDQAFo3AAAAAIYA/iN6ANAADjkAAAAAhhi/IAEA0AAuOQAAAADGAbojAQDQADA5AAAAAIEAigEB
ANAALDsAAAAAxgA8KGwC0AAuOQAAAADGAcgjAQDUAHs+AAAAAIYYvyB4AtQAij4AAAAAhhi/IHgC
1QCZPgAAAACGCMILuQDWAL8+AAAAAIYIDRt+AtYAxz4AAAAAhgggG2YC1gDQPgAAAACGCBchgwLX
ANg+AAAAAIYIJyGJAtcA4T4AAAAAhgitJ5AC2ADpPgAAAACGCMInlQLYAPI+AAAAAIYI8yebAtkA
+j4AAAAAhggJKKEC2QADPwAAAACGGL8gAQDaAAs/AAAAAIYIrwC5ANoAEz8AAAAAhgjKABAA2gAc
PwAAAACGCH8AuQDbACQ/AAAAAIYIhgAQANsALT8AAAAAhghEDrkA3AA1PwAAAACGCE0OEADcAAM/
AAAAAIYYvyABAN0APj8AAAAAhghPCLkA3QBGPwAAAACGCF8IEADdAE8/AAAAAIYIlSeoAt4AVz8A
AAAAhgihJ6wC3gBgPwAAAACGCHwjsQLfAGg/AAAAAIYIiSO2At8AAz8AAAAAhhi/IAEA4ABxPwAA
AACGCGcmvALgAHk/AAAAAIYIiSbBAuAAgj8AAAAAhgjsJscC4QCKPwAAAACGCA8nzQLhAJM/AAAA
AIYISCXUAuIAmz8AAAAAhghzJdoC4gCkPwAAAACGCKsk4QLjAKw/AAAAAIYI1STnAuMAtT8AAAAA
hgjoJe4C5AC9PwAAAACGCAgm9ALkAAM/AAAAAIYYvyABAOUAxj8AAAAAhgiNALkA5QDOPwAAAACG
CJ4AEADlANc/AAAAAIYIrgj7AuYA3z8AAAAAhgi4CAAD5gDoPwAAAACGCBMYBgPnAPA/AAAAAIYI
HhgLA+cA+T8AAAAAhgh/ALkA6AABQAAAAACGCIYAEADoAAM/AAAAAIYYvyABAOkACkAAAAAAhghD
AbkA6QASQAAAAACGCE4BEADpABtAAAAAAIYIrgi5AOoAI0AAAAAAhgi4CBAA6gADPwAAAACGGL8g
AQDrACxAAAAAAIYIjAd6AOsANEAAAAAAhgibB2EC6wADPwAAAACGGL8gAQDsAD1AAAAAAIYIjQC5
AOwARUAAAAAAhgieABAA7ABOQAAAAACGCK4IEQPtAFZAAAAAAIYIuAgXA+0AX0AAAAAAhggTGB4D
7gBnQAAAAACGCB4YJAPuAHBAAAAAAIYIfwC5AO8AeEAAAAAAhgiGABAA7wADPwAAAACGGL8gAQDw
AIFAAAAAAIYIQwG5APAAiUAAAAAAhghOARAA8ACSQAAAAACGCK4IuQDxAJpAAAAAAIYIuAgQAPEA
Az8AAAAAhhi/IAEA8gCjQAAAAACGCIwHegDyAKtAAAAAAIYImwdhAvIAAz8AAAAAhhi/IAEA8wC0
QAAAAACGCI0AuQDzALxAAAAAAIYIngAQAPMAxUAAAAAAhgiuCCsD9ADNQAAAAACGCLgIMQP0ANZA
AAAAAIYIExg4A/UA3kAAAAAAhggeGD4D9QDnQAAAAACGCKoHegD2AO9AAAAAAIYIwQdhAvYA+EAA
AAAAhgjYB3oA9wAAQQAAAACGCPAHYQL3AAlBAAAAAIYIfwC5APgAEUEAAAAAhgiGABAA+AADPwAA
AACGGL8gAQD5ABpBAAAAAIYIQwG5APkAIkEAAAAAhghOARAA+QArQQAAAACGCK4IuQD6ADNBAAAA
AIYIuAgQAPoAAz8AAAAAhhi/IAEA+wA8QQAAAACGCIwHegD7AERBAAAAAIYImwdhAvsAAz8AAAAA
hhi/IAEA/ABNQQAAAACGCI0AuQD8AFVBAAAAAIYIngAQAPwAXkEAAAAAhgiuCEUD/QBmQQAAAACG
CLgISwP9AG9BAAAAAIYIExhSA/4Ad0EAAAAAhggeGFgD/gCAQQAAAACGCLUbuQD/AIhBAAAAAIYI
wBsQAP8AkUEAAAAAhghWB34CAAGZQQAAAACGCHEHZgIAAaJBAAAAAIYIfwC5AAEBqkEAAAAAhgiG
ABAAAQEDPwAAAACGGL8gAQACAbNBAAAAAIYIQwG5AAIBu0EAAAAAhghOARAAAgHEQQAAAACGCK4I
uQADAcxBAAAAAIYIuAgQAAMBAz8AAAAAhhi/IAEABAHVQQAAAACGCIwHegAEAd1BAAAAAIYImwdh
AgQBAz8AAAAAhhi/IAEABQHmQQAAAACGCI0AuQAFAe5BAAAAAIYIngAQAAUB90EAAAAAhgiuCF8D
BgH/QQAAAACGCLgIZQMGAQhCAAAAAIYIExhsAwcBEEIAAAAAhggeGHIDBwEZQgAAAACGCPwiqAII
ASFCAAAAAIYIFCOsAggBKkIAAAAAhggSAqgCCQEyQgAAAACGCDQCrAIJATtCAAAAAIYIvBF6AAoB
Q0IAAAAAhgjOEWECCgFMQgAAAACGCF4juQALAVRCAAAAAIYIbSMQAAsBXUIAAAAAhgiQIrkADAFl
QgAAAACGCJwiEAAMAW5CAAAAAIYIYgF5Aw0BdkIAAAAAhgh2AX0DDQF/QgAAAACGCFYOeQMOAYdC
AAAAAIYIZw59Aw4BkEIAAAAAhgh/ALkADwGYQgAAAACGCIYAEAAPAQM/AAAAAIYYvyABABABoUIA
AAAAhghDAbkAEAGpQgAAAACGCE4BEAAQAbJCAAAAAIYIrgi5ABEBukIAAAAAhgi4CBAAEQEDPwAA
AACGGL8gAQASAcNCAAAAAIYIjAd6ABIBy0IAAAAAhgibB2ECEgEDPwAAAACGGL8gAQATAdRCAAAA
AIYI3yGCAxMB3EIAAAAAhgjsIYgDEwEDPwAAAACGGL8gAQAUAeVCAAAAAIYIXw2PAxQB7UIAAAAA
hgh6DZYDFAH2QgAAAACGCNANngMVAf5CAAAAAIYI7A2lAxUBB0MAAAAAhghoDK0DFgEPQwAAAACG
CIwMtAMWARhDAAAAAIYI3wu8AxcBIEMAAAAAhggCDMMDFwEpQwAAAACGCPQMywMYATFDAAAAAIYI
DQ3SAxgBAz8AAAAAhhi/IAEAGQE6QwAAAACGCI0AuQAZAUJDAAAAAIYIngAQABkBS0MAAAAAhgiu
CNoDGgFTQwAAAACGCLgI4AMaAVxDAAAAAIYIExjnAxsBZEMAAAAAhggeGO0DGwFtQwAAAACGCFgk
9AMcAXVDAAAAAIYIZiT4AxwBfkMAAAAAhgjlALkAHQGGQwAAAACGCPoAEAAdAY9DAAAAAIYI3CN6
AB4Bl0MAAAAAhgjoI2ECHgEDPwAAAACGGL8gAQAfAaBDAAAAAIYIGAi5AB8BqEMAAAAAhggnCBAA
HwGxQwAAAACGCPUOuQAgAblDAAAAAIYIAg8QACABwkMAAAAAhghDAbkAIQHKQwAAAACGCE4BEAAh
AdNDAAAAAIYIrgi5ACIB20MAAAAAhgi4CBAAIgHkQwAAAACGCHQk/QMjAexDAAAAAIYIgSQBBCMB
Az8AAAAAhhi/IAEAJAH1QwAAAACGCEQOuQAkAf1DAAAAAIYITQ4QACQBBkQAAAAAhgiZDrkAJQEO
RAAAAACGCKcOEAAlARdEAAAAAIYIRRKoAiYBH0QAAAAAhghTEqwCJgEoRAAAAACGCPEaqAInATBE
AAAAAIYI/xqsAicBOUQAAAAAhgiaCKgCKAFBRAAAAACGCKQIrAIoAUpEAAAAAIYIbQD9AykBUkQA
AAAAhgh2AAEEKQFbRAAAAACGCIAIqAIqAWNEAAAAAIYIjQisAioBbEQAAAAAhgiAC3oAKwF0RAAA
AACGCI8LYQIrAX1EAAAAAIYIyiKoAiwBhUQAAAAAhgjjIqwCLAEDPwAAAACGGL8gAQAtAY5EAAAA
AIYIjQC5AC0BlkQAAAAAhgieABAALQGfRAAAAACGCK4IBgQuAadEAAAAAIYIuAgMBC4BsEQAAAAA
hggTGBMELwG4RAAAAACGCB4YGQQvAcFEAAAAAIYIghG5ADAByUQAAAAAhgiPERAAMAHSRAAAAACG
CJwRuQAxAdpEAAAAAIYIqREQADEB40QAAAAAhgjuF34CMgHrRAAAAACGCPcXZgIyAfREAAAAAIYI
xgF6ADMB/EQAAAAAhgjYAWECMwEFRQAAAACGCLQofgI0AQ1FAAAAAIYIvyhmAjQBFkUAAAAAhgjq
AXoANQEeRQAAAACGCP4BYQI1ASdFAAAAAIYI3CN6ADYBL0UAAAAAhgjoI2ECNgE4RQAAAACGCOUA
uQA3AUBFAAAAAIYI+gAQADcBAz8AAAAAhhi/IAEAOAFJRQAAAACGCBgIuQA4AVFFAAAAAIYIJwgQ
ADgBWkUAAAAAhgj1DrkAOQFiRQAAAACGCAIPEAA5AWtFAAAAAIYIQwG5ADoBc0UAAAAAhghOARAA
OgF8RQAAAACGCK4IuQA7AYRFAAAAAIYIuAgQADsBjUUAAAAAhgh0JPQDPAGVRQAAAACGCIEk+AM8
AQM/AAAAAIYYvyABAD0BnkUAAAAAhghEDrkAPQGmRQAAAACGCE0OEAA9Aa9FAAAAAIYImQ65AD4B
t0UAAAAAhginDhAAPgHARQAAAACGCEUSqAI/AchFAAAAAIYIUxKsAj8B0UUAAAAAhgjxGqgCQAHZ
RQAAAACGCP8arAJAAeJFAAAAAIYImgioAkEB6kUAAAAAhgikCKwCQQHzRQAAAACGCG0AIARCAftF
AAAAAIYIdgAkBEIBBEYAAAAAhgiACKgCQwEMRgAAAACGCI0IrAJDARVGAAAAAIYIgAt6AEQBHUYA
AAAAhgiPC2ECRAEmRgAAAACGCMoiqAJFAS5GAAAAAIYI4yKsAkUBAz8AAAAAhhi/IAEARgE3RgAA
AACGCI0AuQBGAT9GAAAAAIYIngAQAEYBSEYAAAAAhgiuCCkERwFQRgAAAACGCLgILwRHAVlGAAAA
AIYIExg2BEgBYUYAAAAAhggeGDwESAFqRgAAAACGCKoHegBJAXJGAAAAAIYIwQdhAkkBe0YAAAAA
hgjYB3oASgGDRgAAAACGCPAHYQJKAYxGAAAAAIYIKRKoAksBlEYAAAAAhgg3EqwCSwGdRgAAAACG
CEUSqAJMAaVGAAAAAIYIUxKsAkwBrkYAAAAAhggRHEMETQG2RgAAAACGCCgcSgRNAb9GAAAAAIYI
5QC5AE4Bx0YAAAAAhgj6ABAATgHQRgAAAACGCNwjegBPAdhGAAAAAIYI6CNhAk8BAz8AAAAAhhi/
IAEAUAHhRgAAAACGCBgIuQBQAelGAAAAAIYIJwgQAFAB8kYAAAAAhgj1DrkAUQH6RgAAAACGCAIP
EABRAQNHAAAAAIYIQwG5AFIBC0cAAAAAhghOARAAUgEURwAAAACGCK4IuQBTARxHAAAAAIYIuAgQ
AFMBJUcAAAAAhgh0JPQDVAEtRwAAAACGCIEk+ANUAQM/AAAAAIYYvyABAFUBNkcAAAAAhghEDrkA
VQE+RwAAAACGCE0OEABVAUdHAAAAAIYImQ65AFYBT0cAAAAAhginDhAAVgFYRwAAAACGCEUSqAJX
AWBHAAAAAIYIUxKsAlcBaUcAAAAAhgjxGqgCWAFxRwAAAACGCP8arAJYAXpHAAAAAIYImgioAlkB
gkcAAAAAhgikCKwCWQGLRwAAAACGCG0A9ANaAZNHAAAAAIYIdgD4A1oBnEcAAAAAhgiACKgCWwGk
RwAAAACGCI0IrAJbAa1HAAAAAIYIgAt6AFwBtUcAAAAAhgiPC2ECXAG+RwAAAACGCMoiqAJdAcZH
AAAAAIYI4yKsAl0BAz8AAAAAhhi/IAEAXgHPRwAAAACGCBMSqAJeAddHAAAAAIYIHhKsAl4B4EcA
AAAAhghEJPQDXwHoRwAAAACGCE4k+ANfAQM/AAAAAIYYvyABAGAB8UcAAAAAhgiNALkAYAH5RwAA
AACGCJ4AEABgAQJIAAAAAIYIrghSBGEBCkgAAAAAhgi4CFgEYQETSAAAAACGCBMYXwRiARtIAAAA
AIYIHhhlBGIBJEgAAAAAhggeIvQDYwEsSAAAAACGCDki+ANjATVIAAAAAIYI5RtsBGQBPUgAAAAA
hgj7G3MEZAFGSAAAAACGCNwjegBlAU5IAAAAAIYI6CNhAmUBV0gAAAAAhgjlALkAZgFfSAAAAACG
CPoAEABmAQM/AAAAAIYYvyABAGcBaEgAAAAAhggYCLkAZwFwSAAAAACGCCcIEABnAXlIAAAAAIYI
9Q65AGgBgUgAAAAAhggCDxAAaAGKSAAAAACGCEMBuQBpAZJIAAAAAIYITgEQAGkBm0gAAAAAhgiu
CLkAagGjSAAAAACGCLgIEABqAaxIAAAAAIYIdCT0A2sBtEgAAAAAhgiBJPgDawEDPwAAAACGGL8g
AQBsAb1IAAAAAIYIRA65AGwBxUgAAAAAhghNDhAAbAHOSAAAAACGCJkOuQBtAdZIAAAAAIYIpw4Q
AG0B30gAAAAAhghFEqgCbgHnSAAAAACGCFMSrAJuAfBIAAAAAIYI8RqoAm8B+EgAAAAAhgj/GqwC
bwEBSQAAAACGCJoIqAJwAQlJAAAAAIYIpAisAnABEkkAAAAAhghtAP0DcQEaSQAAAACGCHYAAQRx
ASNJAAAAAIYIgAioAnIBK0kAAAAAhgiNCKwCcgE0SQAAAACGCIALegBzATxJAAAAAIYIjwthAnMB
RUkAAAAAhgjKIqgCdAFNSQAAAACGCOMirAJ0AQM/AAAAAIYYvyABAHUBVkkAAAAAhghuEbkAdQFe
SQAAAACGCHgREAB1AWdJAAAAAIYIRCT0A3YBb0kAAAAAhghOJPgDdgEDPwAAAACGGL8gAQB3AXhJ
AAAAAIYIjQC5AHcBgEkAAAAAhgieABAAdwGJSQAAAACGCK4IewR4AZFJAAAAAIYIuAiBBHgBmkkA
AAAAhggTGIgEeQGiSQAAAACGCB4YjgR5AatJAAAAAIYILCOVBHoBs0kAAAAAhghBI5wEegG8SQAA
AACGCOUAuQB7AcRJAAAAAIYI+gAQAHsBzUkAAAAAhgjcI3oAfAHVSQAAAACGCOgjYQJ8AQM/AAAA
AIYYvyABAH0B3kkAAAAAhggYCLkAfQHmSQAAAACGCCcIEAB9Ae9JAAAAAIYI9Q65AH4B90kAAAAA
hggCDxAAfgEASgAAAACGCEMBuQB/AQhKAAAAAIYITgEQAH8BEUoAAAAAhgiuCLkAgAEZSgAAAACG
CLgIEACAASJKAAAAAIYIdCT0A4EBKkoAAAAAhgiBJPgDgQEDPwAAAACGGL8gAQCCATNKAAAAAIYI
RA65AIIBO0oAAAAAhghNDhAAggFESgAAAACGCJkOuQCDAUxKAAAAAIYIpw4QAIMBVUoAAAAAhghF
EqgChAFdSgAAAACGCFMSrAKEAWZKAAAAAIYI8RqoAoUBbkoAAAAAhgj/GqwChQF3SgAAAACGCJoI
qAKGAX9KAAAAAIYIpAisAoYBiEoAAAAAhghtAPQDhwGQSgAAAACGCHYA+AOHAZlKAAAAAIYIgAio
AogBoUoAAAAAhgiNCKwCiAGqSgAAAACGCIALegCJAbJKAAAAAIYIjwthAokBu0oAAAAAhgjKIqgC
igHDSgAAAACGCOMirAKKAQM/AAAAAIYYvyABAIsBzEoAAAAAhghUKLkAiwHUSgAAAACGCGIoEACL
Ad1KAAAAAIYI0SioAowB5UoAAAAAhgjfKKwCjAEDPwAAAACGGL8gAQCNAe5KAAAAAJEIJAGkBI0B
BEsAAAAAlgCsFqkEjQEoSwAAAACWABsBrwSOAXFLAAAAAJYALQGvBI8BAz8AAAAAgxi/IAEAkAGD
SwAAAACTCEggtgSQAa9LAAAAAJMItQ68BJABtksAAAAAkwjBDsIEkAG+SwAAAACWCAokyQSRAcVL
AAAAAIYYvyABAJEBzUsAAAAAkRjFIM8EkQEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
QSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIA
AAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAA
AAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
QSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAQSAAAAIAVCIAAAMAXhwAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAwCMAAAIAzCAAAAMAViMAAAQAXhwAAAEAOiQAAAEAOiQAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEA
AAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEAthEAAAEA
thEAAAEAthEAAAEAiyIAAAEAiyIAAAEAiyIAAAEAthEJAL8gAQARAL8gBQAZAL8gAQAhAL8gCgAx
AL8gEAA5AL8gEABBAL8gEABJAL8gEABRAL8gEABZAL8gEABhAL8gEABpAL8gEABxAL8gAQCxAL8g
AQC5AL8gAQDBAL8gEADJAL8gAQDRAL8gEADZAL8gAQD5AL8gAQAZAb8gFQApAb8gAQChAFcRAQCh
AGIRAQAxAUgoYACBAL8gagCBAMsWdACBAJkWBQA5Ab8gEACBAMooAQCBAPsjAQCBAP4jegChAL8g
AQChAA8BggChAGgiiQCpAL8gAQChAMkhjwBRAcIWlQChAJ8onABZAXAoogDhAL8gAQB5Ab8gAQCB
Ab8gqQCJASsPEACJAQ0SAQDpAKgbrwBxAd0XuQCRAb8gAQCRAX8SvQDxAA8PxAChAbAL0QCxAb8g
2gCxAeAR4QDhAOAR5wChAe0o8wABAb8g+QAhAb8gAQAuAAsA9gUuABMA+wUuABsABAYuACMAIwYu
ACsALAYuADMAVQYuADsAVQYuAEMAVQYuAEsALAYuAFMAWwYuAFsAVQYuAGMAcgZDAGsA9gUjA3MA
vAYjA3sAGAdDA3MAvAZjA3MAvAaDA3MAvAajA3MAvAbDA3MAvAbjA3MAvAYDBHMAvAYjBHMAvAZD
BHMAvAZjBHMAvAaDBHMAvAajBHMAvAbDBHMAvAbjBHMAvAYDBXMAvAYjBXMAvAZDBXMAvAZjBXMA
vAaDBXMAvAajBXMAvAbDBXMAvAbjBXMAvAYDBnMAvAYjBnMAvAZDBnMAvAZjBnMAvAaDBnMAvAaj
BnMAvAbDBnMAvAbjBnMAvAYDB3MAvAYjB3MAvAZDB3MAvAZjB3MAvAaDB3MAvAajB3MAvAbDB3MA
vAbjB3MAvAYDCAsA9gUjCKMA9gUpE4MAcQepE4sA9gXJE4sA9gVJFYsA9gVpFYsA9gWJFYsA9gWp
FYsA9gUpFosA9gVJFosA9gVpFosA9gWJFosA9gVJF4sA9gVpF4sA9gWJF4sA9gWpF4sA9gVpGIsA
9gWJGIsA9gWpGIsA9gXJGIsA9gUpGosA9gVBGrMA9gVJGosA9gVpGosA9gWJGosA9gXJGpMAkgfp
GpMArgcJG5MAywcpG5MA8AdJG5MAFAjpG4sA9gUJHIsA9gUpHIsA9gVJHIsA9gVpHIsA9gWJHIsA
9gWpHIsA9gXJHIsA9gXpHIsA9gUJHYsA9gUpHYsA9gVJHYsA9gVpHYsA9gWJHYsA9gWpHYsA9gXJ
HYsA9gWpHpsA9gXpHpsA9gUJH4sA9gUpH4sA9gVJH4sA9gVpH4sA9gWJH4sA9gWpH4sA9gXJH4sA
9gXpH4sA9gUJIIsA9gUpIIsA9gVJIIsA9gVpIIsA9gWJIIsA9gWpIIsA9gXJIIsA9gXpIIsA9gXp
IYMALggJIosA9gUpIosA9gVJIosA9gVpIosA9gWJIosA9gWpIosA9gXJIosA9gXpIosA9gUJI4sA
9gUpI4sA9gVJI4sA9gVpI4sA9gWJI4sA9gWpI4sA9gXJI4sA9gXpI4sA9gXJJIMAWAjpJIsA9gUJ
JYsA9gUpJYsA9gVJJYsA9gVpJYsA9gWJJYsA9gWpJYsA9gXJJYsA9gXpJYsA9gUJJosA9gUpJosA
9gVJJosA9gVpJosA9gWJJosA9gWpJosA9gXJJosA9gWJJ4MAgQipJ4sA9gXJJ4sA9gXpJ4sA9gUJ
KIsA9gUpKIsA9gVJKIsA9gVpKIsA9gWJKIsA9gWpKIsA9gXJKIsA9gXpKIsA9gUJKYsA9gUpKYsA
9gVJKYsA9gVpKYsA9gWJKYsA9gUJKqsAIwYpKqsAIwagUAsA9gXAUAsA9gXgUAsA9gUcAH4AtAAD
AAEABAAHAAUAFQAGABkABwAhAAgAJwAJACsACgA9AAsARQAMAEkADQBbAA4AZQAPAGkAEABxABEA
fQASAIEAEwCHABQAiwAVAJMAGACXABkAmAAaAJwAGwCfABwAogAdAKcAHgCrAB8ArQAgAK4AIQCy
ACIAtAAjALUAJAC7ACUAvQAmAL4AJwDEACgAxgApAMcAKgDSACsA1AAsANUALQDWAC4A2wAvAOEA
MADmADEA7wAyAPoAMwD/ADQACAE1ABIBNgAXATcAIAE4ACIBOQApAToALgE7ADcBPAA5AT0APwE+
AEQBPwBNAUAATwFBAFABQgBSAQAAzgDTBAAA9hLXBAAAGAHTBAAAJhPXBAAAcw7TBAAAkhTXBAAA
ogDTBAAA3hLXBAAAxQfXBAAA2xPXBAAA9AfXBAAA+RPXBAAA7CPXBAAAARbXBAAAVxLbBAAAKxXX
BAAAOxLbBAAAFhXXBAAA/gDTBAAAGBPXBAAAWhLbBAAALhXXBAAAiCTbBAAAPRbXBAAAogDTBAAA
3hLXBAAA7CPXBAAAARbXBAAAaiTbBAAAJRbXBAAA/gDTBAAAGBPXBAAAogDTBAAA3hLXBAAA7CPX
BAAAARbXBAAA/gDTBAAAGBPXBAAAZijTBAAAYRbXBAAA4yjbBAAAiBbXBAAAogDTBAAA3hLXBAAA
7CPXBAAAARbXBAAArRHTBAAA8BTXBAAA+xffBAAAQBXXBAAA3AHXBAAARhPXBAAAkxHTBAAA3BTX
BAAA/gDTBAAAGBPXBAAAwyjfBAAAdhbXBAAAAgLXBAAAXxPXBAAAogDTBAAA3hLXBAAA7CPXBAAA
ARbXBAAAPSLbBAAAdxXXBAAA/gDTBAAAGBPXBAAAsBHTBAAA8xTXBAAAiCTbBAAAPRbXBAAAkQjb
BAAARhTXBAAAkwvXBAAAfBTXBAAAegDbBAAAwBLXBAAAVxLbBAAAKxXXBAAAcw7TBAAAkhTXBAAA
AxvbBAAAUBXXBAAAqAjbBAAAWhTXBAAAqw7TBAAAohTXBAAA5yLbBAAArBXXBAAABg/TBAAAtxTX
BAAARAjTBAAAGBTXBAAAhSTbBAAAOhbXBAAAUgHTBAAANBPXBAAAegvTBAAAaxTXBAAAogDTBAAA
3hLXBAAAGAHTBAAAJhPXBAAAogDTBAAA3hLXBAAAdQffBAAAoxPXBAAAGAHTBAAAJhPXBAAAxBvT
BAAAZRXXBAAAogDTBAAA3hLXBAAAcSPTBAAA6xXXBAAAGAHTBAAAJhPXBAAAGCPbBAAAzBXXBAAA
OALbBAAAehPXBAAAoCLTBAAAmRXXBAAAGAHTBAAAJhPXBAAARAjTBAAAGBTXBAAAGAHTBAAAJhPX
BAAAUgHTBAAANBPXBAAAegvTBAAAaxTXBAAAGAHTBAAAJhPXBAAAnwfXBAAAxRPXBAAAogDTBAAA
3hLXBAAAGAHTBAAAJhPXBAAAxQfXBAAA2xPXBAAA9AfXBAAA+RPXBAAAcwjTBAAALhTXBAAApSfT
BAAAThbXBAAAxgvTBAAAJBvfBAAAKyHkBAAA4ifqBAAAKijvBAAAzgDTBAAAGAHTBAAAcw7TBAAA
YwjTBAAApSf1BAAAsSP5BAAAzib+BAAAVScDBQAAwSUJBQAAIiUPBQAASyYVBQAAogDTBAAAegsb
BQAA6hogBQAAGAHTBAAAUgHTBAAAegvTBAAAnwfXBAAAogDTBAAAegslBQAA6horBQAAGAHTBAAA
UgHTBAAAegvTBAAAnwfXBAAAogDTBAAAegsxBQAA6ho3BQAAxQfXBAAA9AfXBAAAGAHTBAAAUgHT
BAAAegvTBAAAnwfXBAAAogDTBAAAegs9BQAA6hpDBQAAxBvTBAAAdQffBAAAGAHTBAAAUgHTBAAA
egvTBAAAnwfXBAAAogDTBAAAegtJBQAA6hpPBQAAGCP1BAAAOAL1BAAA0hHXBAAAcSPTBAAAoCLT
BAAAegFVBQAAaw5VBQAAGAHTBAAAUgHTBAAAegvTBAAAnwfXBAAAFSJZBQAAuQ1fBQAALA5mBQAA
1AxtBQAASQx0BQAASg17BQAAogDTBAAAeguCBQAA6hqIBQAAaiSOBQAA/gDTBAAA7CPXBAAARAjT
BAAABg/TBAAAUgHTBAAAegvTBAAAhSSSBQAAcw7TBAAAqw7TBAAAVxL1BAAAAxv1BAAAqAj1BAAA
egCSBQAAkQj1BAAAkwvXBAAA5yL1BAAAogDTBAAAeguWBQAA6hqcBQAAkxHTBAAArRHTBAAA+xff
BAAA3AHXBAAAwyjfBAAAAgLXBAAA7CPXBAAA/gDTBAAARAjTBAAABg/TBAAAUgHTBAAAegvTBAAA
hSSOBQAAcw7TBAAAqw7TBAAAVxL1BAAAAxv1BAAAqAj1BAAAegCiBQAAkQj1BAAAkwvXBAAA5yL1
BAAAogDTBAAAegumBQAA6hqsBQAAxQfXBAAA9AfXBAAAOxL1BAAAVxL1BAAALByyBQAA/gDTBAAA
7CPXBAAARAjTBAAABg/TBAAAUgHTBAAAegvTBAAAhSSOBQAAcw7TBAAAqw7TBAAAVxL1BAAAAxv1
BAAAqAj1BAAAegCOBQAAkQj1BAAAkwvXBAAA5yL1BAAAWhL1BAAAiCSOBQAAogDTBAAAegu5BQAA
6hq/BQAAPSKOBQAA/xvFBQAA7CPXBAAA/gDTBAAARAjTBAAABg/TBAAAUgHTBAAAegvTBAAAhSSO
BQAAcw7TBAAAqw7TBAAAVxL1BAAAAxv1BAAAqAj1BAAAegCSBQAAkQj1BAAAkwvXBAAA5yL1BAAA
sBHTBAAAiCSOBQAAogDTBAAAegvMBQAA6hrSBQAARSPYBQAA/gDTBAAA7CPXBAAARAjTBAAABg/T
BAAAUgHTBAAAegvTBAAAhSSOBQAAcw7TBAAAqw7TBAAAVxL1BAAAAxv1BAAAqAj1BAAAegCOBQAA
kQj1BAAAkwvXBAAA5yL1BAAAZijTBAAA4yj1BAAAMgHfBQAATCDkBQAA1Q7qBQAADiTwBQEABgAD
AAEABwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEAEAAPAAEAEQARAAEAEgATAAEAEwAVAAEA
FAAXAAEAFQAZAAEAFgAbAAEAFwAdAAEAGAAfAAEAGQAhAAEAGgAjAAEAGwAlAAEAHAAnAAEAHQAp
AAEAIgArAAEAIwAtAAEAJAAvAAEAJQAxAAEAKgAzAAEAKwA1AAEALAA3AAEALQA5AAEALgA7AAEA
LwA9AAEAMAA/AAEAMQBBAAEANgBDAAEANwBFAAEAOABHAAEAOQBJAAEAOgBLAAEAOwBNAAEAQABP
AAEAQQBRAAEAQgBTAAEAQwBVAAEASABXAAEASQBZAAEASgBbAAEASwBdAAEATABfAAEATQBhAAEA
TgBjAAEATwBlAAEAUABnAAEAUQBpAAEAUgBrAAEAUwBtAAEAVABvAAEAVQBxAAEAVgBzAAEAVwB1
AAEAWAB3AAEAWQB5AAEAXgB7AAEAXwB9AAEAYAB/AAEAYQCBAAEAYgCDAAEAYwCFAAEAZACHAAEA
ZQCJAAEAagCLAAEAawCNAAEAbACPAAEAbQCRAAEAcgCTAAEAcwCVAAEAdACXAAEAdQCZAAEAdgCb
AAEAdwCdAAEAeACfAAEAeQChAAEAegCjAAEAewClAAEAfACnAAEAfQCpAAEAfgCrAAEAfwCtAAEA
gACvAAEAgQCxAAEAggCzAAEAgwC1AAEAiAC3AAEAiQC5AAEAigC7AAEAiwC9AAEAjAC/AAEAjQDB
AAEAjgDDAAEAjwDFAAEAkADHAAEAkQDJAAEAlgDLAAEAlwDNAAEAmADPAAEAmQDRAAEAngDTAAEA
nwDVAAEAoADXAAEAoQDZAAEAogDbAAEAowDdAAEApADfAAEApQDhAAEAqgDjAAEAqwDlAAEArADn
AAEArQDpAAEArgDrAAEArwDtAAEAsADvAAEAsQDxAAEAsgDzAAEAswD1AAEAtAD3AAEAtQD5AAEA
ugD7AAEAuwD9AAEAvAD/AAEAvQABAQEAwgADAQEAwwAFAQEAxAAHAQEAxQAJAQEAxgALAQEAxwAN
AQEAzAAPAQEAzQARAQEAzgATAQEAzwAVAQEA1AAXAQEA1QAZAQEA1gAbAQEA1wAdAQEA2AAfAQEA
2QAhAQEA2gAjAQEA2wAlAQEA4AAnAQEA4QApAQEA4gArAQEA4wAtAQIA7gAvAQIA7wAxAQEA8AAx
AQIA8QAzAQEA8gAzAQIA8wA1AQEA9AA1AQIA9QA3AQEA9gA3AQIA+AA5AQEA+QA5AQIA+gA7AQEA
+wA7AQIA/AA9AQEA/QA9AQIA/wA/AQEAAAE/AQIAAQFBAQEAAgFBAQIAAwFDAQEABAFDAQIABgFF
AQEABwFFAQIACAFHAQEACQFHAQIACgFJAQEACwFJAQIADAFLAQEADQFLAQIADgFNAQEADwFNAQIA
EQFPAQEAEgFPAQIAEwFRAQEAFAFRAQIAFQFTAQEAFgFTAQIAFwFVAQEAGAFVAQIAGgFXAQEAGwFX
AQIAHAFZAQEAHQFZAQIAHwFbAQEAIAFbAQIAIgFdAQEAIwFdAQIAJAFfAQEAJQFfAQIAJgFhAQEA
JwFhAQIAKAFjAQEAKQFjAQIAKwFlAQEALAFlAQIALQFnAQEALgFnAQIAMAFpAQEAMQFpAQIAMwFr
AQEANAFrAQIANQFtAQEANgFtAQIANwFvAQEAOAFvAQIAOQFxAQEAOgFxAQIAOwFzAQEAPAFzAQIA
PQF1AQEAPgF1AQIAQAF3AQEAQQF3AQIAQgF5AQEAQwF5AQIARQF7AQEARgF7AQIASAF9AQEASQF9
AQIASgF/AQEASwF/AQIATAGBAQEATQGBAQIATgGDAQEATwGDAQIAUAGFAQEAUQGFAQIAUgGHAQEA
UwGHAQIAVQGJAQEAVgGJAQIAVwGLAQEAWAGLAQIAWgGNAQEAWwGNAQIAXQGPAQEAXgGPAQIAXwGR
AQEAYAGRAQIAYQGTAQEAYgGTAQIAYwGVAQEAZAGVAQIAZQGXAQEAZgGXAQIAZwGZAQEAaAGZAQIA
aQGbAQEAagGbAQIAawGdAQEAbAGdAQIAbQGfAQEAbgGfAQIAbwGhAQEAcAGhAQIAcQGjAQEAcgGj
AQIAdAGlAQEAdQGlAQIAdgGnAQEAdwGnAQIAeQGpAQEAegGpAQIAfAGrAQEAfQGrAQIAfwGtAQEA
gAGtAQIAgQGvAQEAggGvAQIAgwGxAQEAhAGxAQIAhQGzAQEAhgGzAQIAhwG1AQEAiAG1AQIAigG3
AQEAiwG3AQIAjAG5AQEAjQG5AQIAjgG7AQEAjwG7AQIAkAG9AQEAkQG9AQIAkgG/AQEAkwG/AQIA
lAHBAQEAlQHBAQIAlwHDAQEAmAHDAQIAmQHFAQEAmgHFAQIAmwHHAQEAnAHHAQIAnQHJAQEAngHJ
AQIAnwHLAQEAoAHLAQIAogHNAQEAowHNAQIApAHPAQEApQHPAQIApgHRAQEApwHRAQIAqAHTAQEA
qQHTAQIAqgHVAQEAqwHVAQIArAHXAQEArQHXAQIArgHZAQEArwHZAQIAsAHbAQEAsQHbAQIAsgHd
AQEAswHdAQIAtQHfAQEAtgHfAQIAtwHhAQEAuAHhAQIAuQHjAQEAugHjAQIAuwHlAQEAvAHlAQIA
vQHnAQEAvgHnAQIAvwHpAQEAwAHpAQIAwQHrAQEAwgHrAQIAwwHtAQEAxAHtAQIAxQHvAQEAxgHv
AQIAxwHxAQEAyAHxAQIAyQHzAQEAygHzAQIAzAH1AQEAzQH1AQIAzgH3AQEAzwH3AQIA0AH5AQEA
0QH5AQIA0gH7AQEA0wH7AQIA1AH9AQEA1QH9AQIA1wH/AQEA2AH/AQIA2QEBAgEA2gEBAgIA2wED
AgEA3AEDAgIA3QEFAgEA3gEFAgIA3wEHAgEA4AEHAgIA4QEJAgEA4gEJAgIA4wELAgEA5AELAgIA
5QENAgEA5gENAgIA5wEPAgEA6AEPAgIA6gERAgEA6wERAgIA7AETAgEA7QETAgIA7gEVAgEA7wEV
AgIA8AEXAgEA8QEXAgIA8gEZAgEA8wEZAgIA9AEbAgEA9QEbAgIA9gEdAgEA9wEdAgIA+AEfAgEA
+QEfAgIA+gEhAgEA+wEhAgIA/AEjAgEA/QEjAgIA/wElAgEAAAIlAgIAAQInAgEAAgInAgIAAwIp
AgEABAIpAgIABQIrAgEABgIrAgIABwItAgEACAItAgIACgIvAgEACwIvAgIADAIxAgEADQIxAgIA
DgIzAgEADwIzAgIAEAI1AgEAEQI1AgIAEgI3AgEAEwI3AgIAFAI5AgEAFQI5AgIAFgI7AgEAFwI7
AgIAGAI9AgEAGQI9AgIAGgI/AgEAGwI/AgIAHQJBAgEAHgJBAgIAHwJDAgEAIAJDAgIAIgJFAgEA
IwJFAgIAJAJHAgEAJQJHAgIAJgJJAgEAJwJJAgIAKAJLAgEAKQJLAgIAKgJNAgEAKwJNAgIALAJP
AgEALQJPAgIALgJRAgEALwJRAgIAMQJTAgEAMgJTAgIAMwJVAgEANAJVAgIANQJXAgEANgJXAgIA
NwJZAgEAOAJZAgIAOQJbAgEAOgJbAgIAPAJdAgEAPQJdAgIAPgJfAgEAPwJfAgIAQAJhAgEAQQJh
AgIAQgJjAgEAQwJjAgIARAJlAgEARQJlAgIARgJnAgEARwJnAgIASAJpAgEASQJpAgIASgJrAgEA
SwJrAgIATAJtAgEATQJtAgIATwJvAgEAUAJvAgIAUQJxAgEAUgJxAgIAVAJzAgEAVQJzAgIAVgJ1
AgEAVwJ1AgIAWAJ3AgEAWQJ3AgIAWgJ5AgEAWwJ5AgIAXAJ7AgEAXQJ7AgIAXgJ9AgEAXwJ9AgIA
YQJ/AgEAYgJ/AgIAYwKBAgEAZAKBAgIAZQKDAgEAZgKDAgIAZwKFAgEAaAKFAgIAaQKHAgEAagKH
AgIAbAKJAgEAbQKJAgIAbgKLAgEAbwKLAgIAcAKNAgEAcQKNAgIAcgKPAgEAcwKPAgIAdAKRAgEA
dQKRAgIAdgKTAgEAdwKTAgIAeAKVAgEAeQKVAgIAegKXAgEAewKXAgIAfAKZAgEAfQKZAgIAfwKb
AgEAgAKbAgIAgQKdAgEAggKdAgIAhAKfAgIAiQKhAgIAigKjAgEAiwKjAgIAjAKlAs4ABIAAAAEA
AAAAAAAAAAAAAAAAQAAAAAQAAAAAAAAAAAAAAAEBWQEAAAAADQAAAAAAAAAAAAAACgGOJAAAAAAN
AAAAAAAAAAAAAAAKAXQnAAAAAAQAAAAAAAAAAAAAAAEBoRYAAAAABAAAAAAAAAAAAAAAEwGoIgAA
AAAEAAAAAAAAAAAAAAABAdYXAAAAAA0AAAAAAAAAAAAAAAoBaBwAAAAAAAAAAAEAAABIIQAAAAAE
AA0FQQEAAAQADwVBAQwFZQBtAO4AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJbnQzMgBTQ18wNmEwZTNkNWIyZDU0ZWVlYmVlOGJj
NDM5MTk2YzgzOQA8TW9kdWxlPgBnZXRfTENJRABzZXRfTENJRABnZXRfSUQAc2V0X0lEAGdldF9E
YXRhU291cmNlSUQAc2V0X0RhdGFTb3VyY2VJRABnZXRfRHRzQ29ubmVjdGlvbk1hbmFnZXJJRABz
ZXRfRHRzQ29ubmVjdGlvbk1hbmFnZXJJRABnZXRfUHJvZmlsZVJlcXVlc3RJRABzZXRfUHJvZmls
ZVJlcXVlc3RJRABHZXRPdXRwdXRJRABQYXJzZVhNTABnZXRfSlNPTgBQYXJzZUpTT04AU3lzdGVt
LklPAFQAZ2V0X1NjaGVtYQBzZXRfU2NoZW1hAG1zY29ybGliAGdldF9UYWdEYXRhU291cmNlSWQA
c2V0X1RhZ0RhdGFTb3VyY2VJZABNYXJrT3V0cHV0c0ZpbmlzaGVkAG1lYW5GaWVsZFNwZWNpZmll
ZABzdGREZXZGaWVsZFNwZWNpZmllZABnZXRfTWVhblNwZWNpZmllZABzZXRfTWVhblNwZWNpZmll
ZABnZXRfU3RkRGV2U3BlY2lmaWVkAHNldF9TdGREZXZTcGVjaWZpZWQAZ2V0X1BlcmNlbnRhZ2VE
YXRhQ292ZXJhZ2VEZXNpcmVkAHNldF9QZXJjZW50YWdlRGF0YUNvdmVyYWdlRGVzaXJlZABsQ0lE
RmllbGQAZGF0YVNvdXJjZUlERmllbGQAZHRzQ29ubmVjdGlvbk1hbmFnZXJJREZpZWxkAHByb2Zp
bGVSZXF1ZXN0SURGaWVsZABzY2hlbWFGaWVsZAB0YWdEYXRhU291cmNlSWRGaWVsZABwZXJjZW50
YWdlRGF0YUNvdmVyYWdlRGVzaXJlZEZpZWxkAGlkRmllbGQAZnJlcXVlbnRWYWx1ZVRocmVzaG9s
ZEZpZWxkAGlzV2lsZENhcmRGaWVsZABpZ25vcmVMZWFkaW5nU3BhY2VGaWVsZABpZ25vcmVUcmFp
bGluZ1NwYWNlRmllbGQAZGF0YVNvdXJjZUZpZWxkAHByb2ZpbGVNb2RlRmllbGQAY29kZVBhZ2VG
aWVsZABzY2FsZUZpZWxkAGlzTnVsbGFibGVGaWVsZAB0YWJsZUZpZWxkAGNvbHVtblZhbHVlRGlz
dHJpYnV0aW9uUHJvZmlsZUZpZWxkAGNvbHVtbkxlbmd0aERpc3RyaWJ1dGlvblByb2ZpbGVGaWVs
ZABjb2x1bW5QYXR0ZXJuUHJvZmlsZUZpZWxkAGNvbHVtbk51bGxSYXRpb1Byb2ZpbGVGaWVsZABj
b2x1bW5TdGF0aXN0aWNzUHJvZmlsZUZpZWxkAHRhZ1RhYmxlTmFtZUZpZWxkAG5hbWVGaWVsZABz
cWxEYlR5cGVGaWVsZABkYXRhYmFzZUZpZWxkAG1pblZhbHVlRmllbGQAbWF4VmFsdWVGaWVsZAB2
YWx1ZUZpZWxkAGNhc2VTZW5zaXRpdmVGaWVsZABtaW5MZW5ndGhGaWVsZABtYXhMZW5ndGhGaWVs
ZABsZW5ndGhGaWVsZABtZWFuRmllbGQAY29sdW1uRmllbGQAcHJlY2lzaW9uRmllbGQAcHJvZmls
ZVZlcnNpb25GaWVsZABvcHRpb25GaWVsZAB2YWx1ZURpc3RyaWJ1dGlvbkZpZWxkAGxlbmd0aERp
c3RyaWJ1dGlvbkZpZWxkAGRhdGFTb3VyY2VzRmllbGQAcHJvZmlsZXNGaWVsZABudW1iZXJPZkRp
c3RpbmN0VmFsdWVzRmllbGQAc3ltYm9sc0ZpZWxkAHN0cmluZ0NvbXBhcmVPcHRpb25zRmllbGQA
bWF4TnVtYmVyT2ZQYXR0ZXJuc0ZpZWxkAHRvcFJlZ2V4UGF0dGVybnNGaWVsZABkZWxpbWl0ZXJz
RmllbGQAcmVxdWVzdHNGaWVsZABpc0V4YWN0RmllbGQAbnVsbENvdW50RmllbGQAcm93Q291bnRG
aWVsZABjb3VudEZpZWxkAGNvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJvZmlsZVJlcXVlc3RGaWVs
ZABjb2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdEZpZWxkAGNvbHVtblBhdHRl
cm5Qcm9maWxlUmVxdWVzdEZpZWxkAGNvbHVtbk51bGxSYXRpb1Byb2ZpbGVSZXF1ZXN0RmllbGQA
Y29sdW1uU3RhdGlzdGljc1Byb2ZpbGVSZXF1ZXN0RmllbGQAdGltZW91dEZpZWxkAGRhdGFQcm9m
aWxlSW5wdXRGaWVsZABkYXRhUHJvZmlsZU91dHB1dEZpZWxkAHJlZ2V4VGV4dEZpZWxkAHN0ZERl
dkZpZWxkAGZyZXF1ZW5jeUZpZWxkAGdldF9GcmVxdWVudFZhbHVlVGhyZXNob2xkAHNldF9GcmVx
dWVudFZhbHVlVGhyZXNob2xkAGdldF9Jc1dpbGRDYXJkAHNldF9Jc1dpbGRDYXJkAGdldF9JZ25v
cmVMZWFkaW5nU3BhY2UAc2V0X0lnbm9yZUxlYWRpbmdTcGFjZQBnZXRfSWdub3JlVHJhaWxpbmdT
cGFjZQBzZXRfSWdub3JlVHJhaWxpbmdTcGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RhdGFTb3Vy
Y2UAc2V0X0RhdGFTb3VyY2UARGF0YVByb2ZpbGVEdHNEYXRhU291cmNlAGdldF9Qcm9maWxlTW9k
ZQBzZXRfUHJvZmlsZU1vZGUAc2V0X1Byb2ZpbGVyTW9kZQBnZXRfQ29kZVBhZ2UAc2V0X0NvZGVQ
YWdlAGdldF9TY2FsZQBzZXRfU2NhbGUAZ2V0X1RhYmxlAHNldF9UYWJsZQBEYXRhUHJvZmlsZURh
dGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVUYWJs
ZQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5MZW5ndGhEaXN0cmli
dXRpb25Qcm9maWxlVGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29s
dW1uUGF0dGVyblByb2ZpbGVUYWJsZQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmls
ZXNDb2x1bW5OdWxsUmF0aW9Qcm9maWxlVGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1
dFByb2ZpbGVzQ29sdW1uU3RhdGlzdGljc1Byb2ZpbGVUYWJsZQBEYXRhUHJvZmlsZURhdGFQcm9m
aWxlSW5wdXRSZXF1ZXN0c0NvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJvZmlsZVJlcXVlc3RUYWJs
ZQBEYXRhUHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtbkxlbmd0aERpc3RyaWJ1
dGlvblByb2ZpbGVSZXF1ZXN0VGFibGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVz
dHNDb2x1bW5QYXR0ZXJuUHJvZmlsZVJlcXVlc3RUYWJsZQBEYXRhUHJvZmlsZURhdGFQcm9maWxl
SW5wdXRSZXF1ZXN0c0NvbHVtbk51bGxSYXRpb1Byb2ZpbGVSZXF1ZXN0VGFibGUARGF0YVByb2Zp
bGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZVJlcXVlc3RU
YWJsZQBnZXRfSXNOdWxsYWJsZQBzZXRfSXNOdWxsYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBnZXRfdkN1cnJlbnRGaWxlAERhdGFQcm9maWxlAGdldF9Db2x1bW5WYWx1
ZURpc3RyaWJ1dGlvblByb2ZpbGUAc2V0X0NvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJvZmlsZQBE
YXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5WYWx1ZURpc3RyaWJ1dGlv
blByb2ZpbGUAZ2V0X0NvbHVtbkxlbmd0aERpc3RyaWJ1dGlvblByb2ZpbGUAc2V0X0NvbHVtbkxl
bmd0aERpc3RyaWJ1dGlvblByb2ZpbGUARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2Zp
bGVzQ29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmlsZQBnZXRfQ29sdW1uUGF0dGVyblByb2Zp
bGUAc2V0X0NvbHVtblBhdHRlcm5Qcm9maWxlAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQ
cm9maWxlc0NvbHVtblBhdHRlcm5Qcm9maWxlAGdldF9Db2x1bW5OdWxsUmF0aW9Qcm9maWxlAHNl
dF9Db2x1bW5OdWxsUmF0aW9Qcm9maWxlAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9m
aWxlc0NvbHVtbk51bGxSYXRpb1Byb2ZpbGUAZ2V0X0NvbHVtblN0YXRpc3RpY3NQcm9maWxlAHNl
dF9Db2x1bW5TdGF0aXN0aWNzUHJvZmlsZQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJv
ZmlsZXNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZQBnZXRfTmFtZQBzZXRfTmFtZQBnZXRfVGFnVGFi
bGVOYW1lAHNldF9UYWdUYWJsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
Z2V0X1NxbERiVHlwZQBzZXRfU3FsRGJUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBnZXRfRGF0YWJhc2UAc2V0X0RhdGFi
YXNlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBXcml0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAWG1sVHlwZUF0
dHJpYnV0ZQBYbWxJZ25vcmVBdHRyaWJ1dGUAWG1sQXR0cmlidXRlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBYbWxBcnJheUl0ZW1B
dHRyaWJ1dGUARXh0ZW5zaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFhtbEVsZW1lbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAWG1sUm9vdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAGdldF9NaW5WYWx1ZQBzZXRfTWluVmFsdWUAZ2V0X01heFZhbHVlAHNldF9NYXhWYWx1ZQB2
YWx1ZQBnZXRfQ2FzZVNlbnNpdGl2ZQBzZXRfQ2FzZVNlbnNpdGl2ZQBEZXNlcmlhbGl6ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBGbHVzaABnZXRfTGVuZ3RoAHNldF9MZW5ndGgA
Z2V0X01pbkxlbmd0aABzZXRfTWluTGVuZ3RoAGdldF9NYXhMZW5ndGgAc2V0X01heExlbmd0aABE
ZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABzZXRfQ29uZm9ybWFuY2VMZXZlbABTQ18wNmEw
ZTNkNWIyZDU0ZWVlYmVlOGJjNDM5MTk2YzgzOS5kbGwAc2V0X0xDSURfSXNOdWxsAHNldF9JRF9J
c051bGwAc2V0X0RhdGFTb3VyY2VJRF9Jc051bGwAc2V0X0R0c0Nvbm5lY3Rpb25NYW5hZ2VySURf
SXNOdWxsAHNldF9Qcm9maWxlUmVxdWVzdElEX0lzTnVsbABzZXRfU2NoZW1hX0lzTnVsbABzZXRf
TWVhblNwZWNpZmllZF9Jc051bGwAc2V0X1N0ZERldlNwZWNpZmllZF9Jc051bGwAc2V0X1BlcmNl
bnRhZ2VEYXRhQ292ZXJhZ2VEZXNpcmVkX0lzTnVsbABzZXRfRnJlcXVlbnRWYWx1ZVRocmVzaG9s
ZF9Jc051bGwAc2V0X0lzV2lsZENhcmRfSXNOdWxsAHNldF9JZ25vcmVMZWFkaW5nU3BhY2VfSXNO
dWxsAHNldF9JZ25vcmVUcmFpbGluZ1NwYWNlX0lzTnVsbABzZXRfRGF0YVNvdXJjZV9Jc051bGwA
c2V0X1Byb2ZpbGVyTW9kZV9Jc051bGwAc2V0X0NvZGVQYWdlX0lzTnVsbABzZXRfU2NhbGVfSXNO
dWxsAHNldF9UYWJsZV9Jc051bGwAc2V0X0lzTnVsbGFibGVfSXNOdWxsAHNldF9OYW1lX0lzTnVs
bABzZXRfU3FsRGJUeXBlX0lzTnVsbABzZXRfRGF0YWJhc2VfSXNOdWxsAHNldF9WYWx1ZV9Jc051
bGwAc2V0X01pblZhbHVlX0lzTnVsbABzZXRfTWF4VmFsdWVfSXNOdWxsAHNldF9MZW5ndGhfSXNO
dWxsAHNldF9NaW5MZW5ndGhfSXNOdWxsAHNldF9NYXhMZW5ndGhfSXNOdWxsAHNldF9NZWFuX0lz
TnVsbABzZXRfUHJlY2lzaW9uX0lzTnVsbABzZXRfT3B0aW9uX0lzTnVsbABzZXRfTnVtYmVyT2ZE
aXN0aW5jdFZhbHVlc19Jc051bGwAc2V0X1N5bWJvbHNfSXNOdWxsAHNldF9TdHJpbmdDb21wYXJl
T3B0aW9uc19Jc051bGwAc2V0X01heE51bWJlck9mUGF0dGVybnNfSXNOdWxsAHNldF9EZWxpbWl0
ZXJzX0lzTnVsbABzZXRfSXNFeGFjdF9Jc051bGwAc2V0X0NvdW50X0lzTnVsbABzZXRfTnVsbENv
dW50X0lzTnVsbABzZXRfUm93Q291bnRfSXNOdWxsAHNldF9UaW1lb3V0X0lzTnVsbABzZXRfUmVn
ZXhUZXh0X0lzTnVsbABzZXRfU3RkRGV2X0lzTnVsbABzZXRfRnJlcXVlbmN5X0lzTnVsbABTZXRO
dWxsAFN5c3RlbS5YbWwAVG9TdHJlYW0ATWVtb3J5U3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAERh
dGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblZhbHVlRGlzdHJpYnV0aW9u
UHJvZmlsZVZhbHVlRGlzdHJpYnV0aW9uSXRlbQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0
UHJvZmlsZXNDb2x1bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlTGVuZ3RoRGlzdHJpYnV0aW9u
SXRlbQBEYXRhUHJvZmlsZURhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5QYXR0ZXJuUHJv
ZmlsZVBhdHRlcm5EaXN0cmlidXRpb25JdGVtAFN5c3RlbQBUcmltAHJlc291cmNlTWFuAGdldF9N
ZWFuAHNldF9NZWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBnZXRfQ29sdW1uAHNldF9Db2x1bW4ARGF0
YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Q
cm9maWxlQ29sdW1uAERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtbkxl
bmd0aERpc3RyaWJ1dGlvblByb2ZpbGVDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZU91dHB1
dFByb2ZpbGVzQ29sdW1uUGF0dGVyblByb2ZpbGVDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmls
ZU91dHB1dFByb2ZpbGVzQ29sdW1uTnVsbFJhdGlvUHJvZmlsZUNvbHVtbgBEYXRhUHJvZmlsZURh
dGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZUNvbHVtbgBEYXRh
UHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJv
ZmlsZVJlcXVlc3RDb2x1bW4ARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1
bW5MZW5ndGhEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdENvbHVtbgBEYXRhUHJvZmlsZURhdGFQ
cm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtblBhdHRlcm5Qcm9maWxlUmVxdWVzdENvbHVtbgBEYXRh
UHJvZmlsZURhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtbk51bGxSYXRpb1Byb2ZpbGVSZXF1
ZXN0Q29sdW1uAERhdGFQcm9maWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uU3RhdGlz
dGljc1Byb2ZpbGVSZXF1ZXN0Q29sdW1uAGdldF9QcmVjaXNpb24Ac2V0X1ByZWNpc2lvbgBnZXRf
UHJvZmlsZVZlcnNpb24Ac2V0X1Byb2ZpbGVWZXJzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5YbWwuU2VyaWFsaXphdGlvbgBTeXN0ZW0uV2ViLlNj
cmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAHNldF9Qb3NpdGlvbgBnZXRfT3B0
aW9uAHNldF9PcHRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfVmFsdWVEaXN0cmli
dXRpb24Ac2V0X1ZhbHVlRGlzdHJpYnV0aW9uAGdldF9MZW5ndGhEaXN0cmlidXRpb24Ac2V0X0xl
bmd0aERpc3RyaWJ1dGlvbgBqc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAWG1sUmVhZGVyAERhdGFTb3VyY2VC
dWZmZXIARGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblZhbHVlRGlzdHJpYnV0aW9uUHJv
ZmlsZUJ1ZmZlcgBEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uTGVuZ3RoRGlzdHJpYnV0
aW9uUHJvZmlsZUJ1ZmZlcgBEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uUGF0dGVyblBy
b2ZpbGVCdWZmZXIARGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtbk51bGxSYXRpb1Byb2Zp
bGVCdWZmZXIARGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlc0NvbHVtblN0YXRpc3RpY3NQcm9maWxl
QnVmZmVyAFBpcGVsaW5lQnVmZmVyAERhdGFQcm9maWxlT3V0cHV0UHJvZmlsZXNDb2x1bW5WYWx1
ZURpc3RyaWJ1dGlvblByb2ZpbGVWYWx1ZURpc3RyaWJ1dGlvbkJ1ZmZlcgBEYXRhUHJvZmlsZU91
dHB1dFByb2ZpbGVzQ29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmlsZUxlbmd0aERpc3RyaWJ1
dGlvbkJ1ZmZlcgBEYXRhUHJvZmlsZU91dHB1dFByb2ZpbGVzQ29sdW1uUGF0dGVyblByb2ZpbGVU
b3BSZWdleFBhdHRlcm5zQnVmZmVyAFNjcmlwdEJ1ZmZlcgBDb2x1bW5WYWx1ZURpc3RyaWJ1dGlv
blByb2ZpbGVSZXF1ZXN0QnVmZmVyAERhdGFQcm9maWxlSW5wdXRSZXF1ZXN0c0NvbHVtbkxlbmd0
aERpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0QnVmZmVyAERhdGFQcm9maWxlSW5wdXRSZXF1ZXN0
c0NvbHVtblBhdHRlcm5Qcm9maWxlUmVxdWVzdEJ1ZmZlcgBEYXRhUHJvZmlsZUlucHV0UmVxdWVz
dHNDb2x1bW5OdWxsUmF0aW9Qcm9maWxlUmVxdWVzdEJ1ZmZlcgBEYXRhUHJvZmlsZUlucHV0UmVx
dWVzdHNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZVJlcXVlc3RCdWZmZXIAVGFibGVJbnB1dEJ1ZmZl
cgBDb2x1bW5JbnB1dEJ1ZmZlcgBEYXRhUHJvZmlsZXJJbnB1dEJ1ZmZlcgBUYWJsZU91dHB1dEJ1
ZmZlcgBDb2x1bW5PdXRwdXRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIAWG1sU2Vy
aWFsaXplcgBKYXZhU2NyaXB0U2VyaWFsaXplcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3Rl
bS5EaWFnbm9zdGljcwBIZWxwZXJNZXRob2RzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAZ2V0X0RhdGFTb3VyY2VzAHNldF9EYXRhU291cmNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzA2
YTBlM2Q1YjJkNTRlZWViZWU4YmM0MzkxOTZjODM5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wNmEwZTNkNWIyZDU0ZWVlYmVlOGJjNDM5MTk2YzgzOS5Q
cm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBnZXRfUHJvZmlsZXMAc2V0X1Byb2ZpbGVz
AERhdGFQcm9maWxlRGF0YVByb2ZpbGVPdXRwdXRQcm9maWxlcwBnZXRfTnVtYmVyT2ZEaXN0aW5j
dFZhbHVlcwBzZXRfTnVtYmVyT2ZEaXN0aW5jdFZhbHVlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAWG1sUmVhZGVyU2V0dGluZ3MAdGhpcwBnZXRfU3ltYm9scwBzZXRfU3lt
Ym9scwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAQ29ubmVjdGlvbnMAZ2V0X1N0cmluZ0NvbXBhcmVP
cHRpb25zAHNldF9TdHJpbmdDb21wYXJlT3B0aW9ucwBnZXRfTWF4TnVtYmVyT2ZQYXR0ZXJucwBz
ZXRfTWF4TnVtYmVyT2ZQYXR0ZXJucwBnZXRfVG9wUmVnZXhQYXR0ZXJucwBzZXRfVG9wUmVnZXhQ
YXR0ZXJucwBCdWZmZXJzAGdldF9EZWxpbWl0ZXJzAHNldF9EZWxpbWl0ZXJzAGdldF9SZXF1ZXN0
cwBzZXRfUmVxdWVzdHMARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAGdldF9Jc0V4YWN0AHNldF9Jc0V4YWN0AE9iamVj
dABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQAZ2V0X0NvdW50AHNldF9Db3VudABnZXRfTnVsbENvdW50AHNldF9O
dWxsQ291bnQAZ2V0X1Jvd0NvdW50AHNldF9Sb3dDb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AGdldF9Db2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0AHNldF9Db2x1
bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGVSZXF1ZXN0AERhdGFQcm9maWxlRGF0YVByb2ZpbGVJ
bnB1dFJlcXVlc3RzQ29sdW1uVmFsdWVEaXN0cmlidXRpb25Qcm9maWxlUmVxdWVzdABnZXRfQ29s
dW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmlsZVJlcXVlc3QAc2V0X0NvbHVtbkxlbmd0aERpc3Ry
aWJ1dGlvblByb2ZpbGVSZXF1ZXN0AERhdGFQcm9maWxlRGF0YVByb2ZpbGVJbnB1dFJlcXVlc3Rz
Q29sdW1uTGVuZ3RoRGlzdHJpYnV0aW9uUHJvZmlsZVJlcXVlc3QAZ2V0X0NvbHVtblBhdHRlcm5Q
cm9maWxlUmVxdWVzdABzZXRfQ29sdW1uUGF0dGVyblByb2ZpbGVSZXF1ZXN0AERhdGFQcm9maWxl
RGF0YVByb2ZpbGVJbnB1dFJlcXVlc3RzQ29sdW1uUGF0dGVyblByb2ZpbGVSZXF1ZXN0AGdldF9D
b2x1bW5OdWxsUmF0aW9Qcm9maWxlUmVxdWVzdABzZXRfQ29sdW1uTnVsbFJhdGlvUHJvZmlsZVJl
cXVlc3QARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVxdWVzdHNDb2x1bW5OdWxsUmF0aW9Q
cm9maWxlUmVxdWVzdABnZXRfQ29sdW1uU3RhdGlzdGljc1Byb2ZpbGVSZXF1ZXN0AHNldF9Db2x1
bW5TdGF0aXN0aWNzUHJvZmlsZVJlcXVlc3QARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0UmVx
dWVzdHNDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZVJlcXVlc3QATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAZ2V0X1RpbWVvdXQAc2V0X1RpbWVvdXQAZ2V0X0RhdGFQcm9maWxlSW5wdXQA
c2V0X0RhdGFQcm9maWxlSW5wdXQARGF0YVByb2ZpbGVEYXRhUHJvZmlsZUlucHV0AGdldF9EYXRh
UHJvZmlsZU91dHB1dABzZXRfRGF0YVByb2ZpbGVPdXRwdXQARGF0YVByb2ZpbGVEYXRhUHJvZmls
ZU91dHB1dABQcmltZU91dHB1dABSZWFkQWxsVGV4dABnZXRfUmVnZXhUZXh0AHNldF9SZWdleFRl
eHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZh
bHVhdG9yQ29udGV4dABnZXRfU3RkRGV2AHNldF9TdGREZXYAQWRkUm93AGdldF9GcmVxdWVuY3kA
c2V0X0ZyZXF1ZW5jeQBnZXRfQXNzZW1ibHkAAAAAT0MAOgBcAHQAZQBzAHQAXABQAHIAbwBmAGkA
bABlAHIAUgBlAHMAdQBsAHQAcwBcAEQAaQBtAEMAdQBzAHQAbwBtAGUAcgAuAHgAbQBsAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAFUQAYQB0AGEAUwBvAHUAcgBj
AGUAAHFEAGEAdABhAFAAcgBvAGYAaQBsAGUATwB1AHQAcAB1AHQAUAByAG8AZgBpAGwAZQBzAEMA
bwBsAHUAbQBuAEwAZQBuAGcAdABoAEQAaQBzAHQAcgBpAGIAdQB0AGkAbwBuAFAAcgBvAGYAaQBs
AGUAAICVRABhAHQAYQBQAHIAbwBmAGkAbABlAE8AdQB0AHAAdQB0AFAAcgBvAGYAaQBsAGUAcwBD
AG8AbAB1AG0AbgBMAGUAbgBnAHQAaABEAGkAcwB0AHIAaQBiAHUAdABpAG8AbgBQAHIAbwBmAGkA
bABlAEwAZQBuAGcAdABoAEQAaQBzAHQAcgBpAGIAdQB0AGkAbwBuAABfRABhAHQAYQBQAHIAbwBm
AGkAbABlAE8AdQB0AHAAdQB0AFAAcgBvAGYAaQBsAGUAcwBDAG8AbAB1AG0AbgBOAHUAbABsAFIA
YQB0AGkAbwBQAHIAbwBmAGkAbABlAABbRABhAHQAYQBQAHIAbwBmAGkAbABlAE8AdQB0AHAAdQB0
AFAAcgBvAGYAaQBsAGUAcwBDAG8AbAB1AG0AbgBQAGEAdAB0AGUAcgBuAFAAcgBvAGYAaQBsAGUA
AHtEAGEAdABhAFAAcgBvAGYAaQBsAGUATwB1AHQAcAB1AHQAUAByAG8AZgBpAGwAZQBzAEMAbwBs
AHUAbQBuAFAAYQB0AHQAZQByAG4AUAByAG8AZgBpAGwAZQBUAG8AcABSAGUAZwBlAHgAUABhAHQA
dABlAHIAbgBzAABhRABhAHQAYQBQAHIAbwBmAGkAbABlAE8AdQB0AHAAdQB0AFAAcgBvAGYAaQBs
AGUAcwBDAG8AbAB1AG0AbgBTAHQAYQB0AGkAcwB0AGkAYwBzAFAAcgBvAGYAaQBsAGUAAG9EAGEA
dABhAFAAcgBvAGYAaQBsAGUATwB1AHQAcAB1AHQAUAByAG8AZgBpAGwAZQBzAEMAbwBsAHUAbQBu
AFYAYQBsAHUAZQBEAGkAcwB0AHIAaQBiAHUAdABpAG8AbgBQAHIAbwBmAGkAbABlAACAkUQAYQB0
AGEAUAByAG8AZgBpAGwAZQBPAHUAdABwAHUAdABQAHIAbwBmAGkAbABlAHMAQwBvAGwAdQBtAG4A
VgBhAGwAdQBlAEQAaQBzAHQAcgBpAGIAdQB0AGkAbwBuAFAAcgBvAGYAaQBsAGUAVgBhAGwAdQBl
AEQAaQBzAHQAcgBpAGIAdQB0AGkAbwBuAAAZQwBvAGwAdQBtAG4ATwB1AHQAcAB1AHQAABdUAGEA
YgBsAGUATwB1AHQAcAB1AHQAAG1EAGEAdABhAFAAcgBvAGYAaQBsAGUASQBuAHAAdQB0AFIAZQBx
AHUAZQBzAHQAcwBDAG8AbAB1AG0AbgBTAHQAYQB0AGkAcwB0AGkAYwBzAFAAcgBvAGYAaQBsAGUA
UgBlAHEAdQBlAHMAdAAAS0MAbwBsAHUAbQBuAFYAYQBsAHUAZQBEAGkAcwB0AHIAaQBiAHUAdABp
AG8AbgBQAHIAbwBmAGkAbABlAFIAZQBxAHUAZQBzAHQAAGdEAGEAdABhAFAAcgBvAGYAaQBsAGUA
SQBuAHAAdQB0AFIAZQBxAHUAZQBzAHQAcwBDAG8AbAB1AG0AbgBQAGEAdAB0AGUAcgBuAFAAcgBv
AGYAaQBsAGUAUgBlAHEAdQBlAHMAdAAAa0QAYQB0AGEAUAByAG8AZgBpAGwAZQBJAG4AcAB1AHQA
UgBlAHEAdQBlAHMAdABzAEMAbwBsAHUAbQBuAE4AdQBsAGwAUgBhAHQAaQBvAFAAcgBvAGYAaQBs
AGUAUgBlAHEAdQBlAHMAdAAAFVQAYQBiAGwAZQBJAG4AcAB1AHQAABdDAG8AbAB1AG0AbgBJAG4A
cAB1AHQAAH1EAGEAdABhAFAAcgBvAGYAaQBsAGUASQBuAHAAdQB0AFIAZQBxAHUAZQBzAHQAcwBD
AG8AbAB1AG0AbgBMAGUAbgBnAHQAaABEAGkAcwB0AHIAaQBiAHUAdABpAG8AbgBQAHIAbwBmAGkA
bABlAFIAZQBxAHUAZQBzAHQAACNEAGEAdABhAFAAcgBvAGYAaQBsAGUAcgBJAG4AcAB1AHQAABl2
AEMAdQByAHIAZQBuAHQARgBpAGwAZQAAcVMAQwBfADAANgBhADAAZQAzAGQANQBiADIAZAA1ADQA
ZQBlAGUAYgBlAGUAOABiAGMANAAzADkAMQA5ADYAYwA4ADMAOQAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABMuB0huw7BSb4laN9WrbcOAAMgAAEEIAEBCAUgAQER
FQQgAQEOBiABARGAiUMHFRJkHRJoCBJoHRKA0BKA0B0SgNwIEoDcHRKAuBKAuB0SgPASgPAdEoD8
EoD8HRKAxBKAxB0SgOASgOAdEoDsEoDsBAABDg4ECgESZAkgAwESRR0IEkkFIAIBCBwDIAACAwcB
CAYAAggSSQ4FIAEdCAgFIAASgKkGIAESgK0cBQAAEoCxBiABHBKAtQUgAQESdQQgAQEKBAcBEnkD
IAAOBiABARGAzQkAAhJ5EnUSgMkCHgAIAAESgNERgNUGIAEBEoDRBSABHBJ5BjABAR4ADgQKAR4A
BSAAEoDdByACAQ4SgN0It3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUDBhJcAwYSYAMGEgwDBhIQ
AwYSFAMGEhgDBhIcAwYSIAMGEiQDBhIoAwYSLAMGEjADBhI0AwYSOAMGEjwDBhJAAwYSRAMGEkgD
BhJMAwYSUAMGElQDBhJRAwYRTQQGHRJoAwYSbAQGEoCwAgYOAgYFAwYScAMGEnQEBhKAgAQGEoCM
BAYSgJgEBhKApAMGEngDBhJ8AgYCBAYSgIQEBhKAiAQGEoCQBAYSgJQEBhKAnAQGEoCgBAYSgKgE
BhKArAIGHAQGEoC0BQYdEoC4BQYdEoDEBQYdEoDQBQYdEoDgBQYdEoDwBAYSgLwEBhKAwAIGBwIG
BgQGEoDIBAYSgMwCBgQEBhKA1AQGEoDYBQYdEoDcBAYSgOQEBhKA6AUGHRKA7AQGEoD0BAYSgPgF
Bh0SgPwDBhJxBAYSgIEEBhKAhQQGEoEIBCABAQIFIAEBEU0LIAQBCB0IHRJFEkkFIAEBElEEIAAR
TQUgAB0SaAYgAQEdEmgEIAASbAUgAQESbAUgABKAsAYgAQESgLADIAAFBCABAQUEIAAScAUgAQES
cAQgABJ0BSABARJ0BSAAEoCABiABARKAgAUgABKAjAYgAQESgIwFIAASgJgGIAEBEoCYBSAAEoCk
BiABARKApAQgABJ4BSABARJ4BCAAEnwFIAEBEnwFIAASgIQGIAEBEoCEBSAAEoCIBiABARKAiAUg
ABKAkAYgAQESgJAFIAASgJQGIAEBEoCUBSAAEoCcBiABARKAnAUgABKAoAYgAQESgKAFIAASgKgG
IAEBEoCoBSAAEoCsBiABARKArAMgABwEIAEBHAUgABKAtAYgAQESgLQGIAAdEoC4ByABAR0SgLgG
IAAdEoDEByABAR0SgMQGIAAdEoDQByABAR0SgNAGIAAdEoDgByABAR0SgOAGIAAdEoDwByABAR0S
gPAFIAASgLwGIAEBEoC8BSAAEoDABiABARKAwAMgAAcEIAEBBwMgAAYEIAEBBgUgABKAyAYgAQES
gMgFIAASgMwGIAEBEoDMAyAABAQgAQEEBSAAEoDUBiABARKA1AUgABKA2AYgAQESgNgGIAAdEoDc
ByABAR0SgNwFIAASgOQGIAEBEoDkBSAAEoDoBiABARKA6AYgAB0SgOwHIAEBHRKA7AUgABKA9AYg
AQESgPQFIAASgPgGIAEBEoD4BiAAHRKA/AcgAQEdEoD8BAAAEnEFAAESdQ4GEAEBHgAOBQAAEoCB
BQAAEoCFBgABARKAhQUAABKBCAMAAAEDKAAOAygAAgMoAAgEKAARTQUoAB0SaAQoABJsBSgAEoCw
AygABQQoABJwBCgAEnQFKAASgIAFKAASgIwFKAASgJgFKAASgKQEKAASeAQoABJ8BSgAEoCEBSgA
EoCIBSgAEoCQBSgAEoCUBSgAEoCcBSgAEoCgBSgAEoCoBSgAEoCsAygAHAUoABKAtAYoAB0SgLgG
KAAdEoDEBigAHRKA0AYoAB0SgOAGKAAdEoDwBSgAEoC8BSgAEoDAAygABwMoAAYFKAASgMgFKAAS
gMwDKAAEBSgAEoDUBSgAEoDYBigAHRKA3AUoABKA5AUoABKA6AYoAB0SgOwFKAASgPQFKAASgPgG
KAAdEoD8BAgAEnEFCAASgIEFCAASgIUFCAASgQgEAQAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMDZhMGUzZDViMmQ1NGVlZWJlZThiYzQz
OTE5NmM4MzkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjVb
AQACAFQCDUFub255bW91c1R5cGUBVA4JTmFtZXNwYWNlOWh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29m
dC5jb20vc3Fsc2VydmVyLzIwMDgvRGF0YURlYnVnZ2VyL1gBAAIAVA4JTmFtZXNwYWNlOWh0dHA6
Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc3Fsc2VydmVyLzIwMDgvRGF0YURlYnVnZ2VyL1QCCklz
TnVsbGFibGUAIAEADUR0c0RhdGFTb3VyY2UBAFQCCklzTnVsbGFibGUAGwEAFkNvbHVtbk51bGxS
YXRpb1Byb2ZpbGUAABwBABdDb2x1bW5TdGF0aXN0aWNzUHJvZmlsZQAAJAEAH0NvbHVtbkxlbmd0
aERpc3RyaWJ1dGlvblByb2ZpbGUAACMBAB5Db2x1bW5WYWx1ZURpc3RyaWJ1dGlvblByb2ZpbGUA
ABkBABRDb2x1bW5QYXR0ZXJuUHJvZmlsZQAAKQEAFkxlbmd0aERpc3RyaWJ1dGlvbkl0ZW0BAFQC
CklzTnVsbGFibGUAKAEAFVZhbHVlRGlzdHJpYnV0aW9uSXRlbQEAVAIKSXNOdWxsYWJsZQAqAQAX
UGF0dGVybkRpc3RyaWJ1dGlvbkl0ZW0BAFQCCklzTnVsbGFibGUAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGTZAAAA
AAAAAAAAAH7ZAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw2QAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY4AAA7AMAAAAAAAAAAAAA7AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA
AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMAA2AGEAMABlADMAZAA1AGIA
MgBkADUANABlAGUAZQBiAGUAZQA4AGIAYwA0ADMAOQAxADkANgBjADgAMwA5AAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwAwADYAYQAwAGUAMwBkADUAYgAyAGQANQA0AGUAZQBlAGIAZQBl
ADgAYgBjADQAMwA5ADEAOQA2AGMAOAAzADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAANgBhADAAZQAzAGQANQBiADIAZAA1ADQAZQBl
AGUAYgBlAGUAOABiAGMANAAzADkAMQA5ADYAYwA4ADMAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwADYAYQAwAGUAMwBkADUAYgAyAGQANQA0AGUAZQBl
AGIAZQBlADgAYgBjADQAMwA5ADEAOQA2AGMAOAAzADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA0AAADAAAAJA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_06a0e3d5b2d54eeebee8bc439196c839</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::vCurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">60b6e263665ffa38edd55451843a687d</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">ae140904326a5ee6af726871b16f34e4021356a7</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource]"
                      hasSideEffects="true"
                      name="DataSource">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[DtsConnectionManagerID]"
                          name="DtsConnectionManagerID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource].Columns[Name]"
                          name="Name" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnLengthDistributionProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreLeadingSpace]"
                          name="IgnoreLeadingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IgnoreTrailingSpace]"
                          name="IgnoreTrailingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MaxLength]"
                          name="MaxLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[MinLength]"
                          name="MinLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Length]"
                          name="Length" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution].Columns[Count]"
                          name="Count" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnNullRatioProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[NullCount]"
                          name="NullCount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnPatternProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[RegexText]"
                          name="RegexText" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns].Columns[Frequency]"
                          name="Frequency" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnStatisticsProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MaxValue]"
                          name="MaxValue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[Mean]"
                          name="Mean"
                          precision="18"
                          scale="4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MeanSpecified]"
                          name="MeanSpecified" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[MinValue]"
                          name="MinValue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDev]"
                          name="StdDev"
                          precision="18"
                          scale="4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile].Columns[StdDevSpecified]"
                          name="StdDevSpecified" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnValueDistributionProfile">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[IsExact]"
                          name="IsExact" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[NumberOfDistinctValues]"
                          name="NumberOfDistinctValues" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile].Columns[ProfileRequestID]"
                          name="ProfileRequestID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
                      hasSideEffects="true"
                      name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Value]"
                          name="Value" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution].Columns[Count]"
                          name="Count" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput]"
                      hasSideEffects="true"
                      name="ColumnOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[CodePage]"
                          name="CodePage" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[IsNullable]"
                          name="IsNullable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[LCID]"
                          name="LCID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[MaxLength]"
                          name="MaxLength" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Name]"
                          name="Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Precision]"
                          name="Precision" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[Scale]"
                          name="Scale" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[SqlDbType]"
                          name="SqlDbType" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput].Columns[StringCompareOptions]"
                          name="StringCompareOptions" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput]"
                      hasSideEffects="true"
                      name="TableOutput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]"
                          name="Database" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]"
                          name="DataSource" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]"
                          name="RowCount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]"
                          name="Schema" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]"
                          name="Table" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnStatisticsProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest].Columns[ID]"
                          name="ID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest]"
                      hasSideEffects="true"
                      name="ColumnValueDistributionProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[FrequentValueThreshold]"
                          name="FrequentValueThreshold" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest].Columns[Option]"
                          name="Option" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnPatternProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Delimiters]"
                          name="Delimiters" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[MaxNumberOfPatterns]"
                          name="MaxNumberOfPatterns" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[PercentageDataCoverageDesired]"
                          name="PercentageDataCoverageDesired" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest].Columns[Symbols]"
                          name="Symbols" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnNullRatioProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest].Columns[DataSource]"
                          name="DataSource" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput]"
                      hasSideEffects="true"
                      name="TableInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]"
                          name="Schema" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]"
                          name="Table" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput]"
                      hasSideEffects="true"
                      name="ColumnInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput].Columns[IsWildCard]"
                          name="IsWildCard" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
                      hasSideEffects="true"
                      name="DataProfileInputRequestsColumnLengthDistributionProfileRequest">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[DataSourceID]"
                          name="DataSourceID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreLeadingSpace]"
                          name="IgnoreLeadingSpace" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest].Columns[IgnoreTrailingSpace]"
                          name="IgnoreTrailingSpace" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput]"
                      hasSideEffects="true"
                      name="DataProfilerInput">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[ProfilerMode]"
                          name="ProfilerMode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput].Columns[Timeout]"
                          name="Timeout" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\TableInput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="TableInput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[TableInput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[Schema]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Schema"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Schema]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].Columns[Table]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Table"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput].Columns[Table]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Schema" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Table" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableInput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\TableOutput"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="TableOutput"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Internal].[TableOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      connectionManagerRefId="Package.ConnectionManagers[.\sql2016.SSIS_DataVerificationFreamwork]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Database]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Database"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Database]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Database]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[DataSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DataSource"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[DataSource]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[RowCount]"
                          cachedDataType="i4"
                          cachedName="RowCount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[RowCount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[RowCount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Schema]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Schema"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Schema]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].Columns[Table]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Table"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput].Columns[Table]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Database]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Database" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[DataSource]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DataSource" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[RowCount]"
                          dataType="i4"
                          name="RowCount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Schema]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Schema" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input].ExternalColumns[Table]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Table" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnInput.Inputs[OLE DB Destination Input]"
                  name="ColumnInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnOutput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnOutput.Inputs[OLE DB Destination Input]"
                  name="ColumnOutput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnOutput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnValueDistributionProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                  name="ColumnValueDistributionProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[ColumnValueDistributionProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest.Inputs[OLE DB Destination Input]"
                  name="DataProfileInputRequestsColumnLengthDistributionProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnLengthDistributionProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnNullRatioProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest.Inputs[OLE DB Destination Input]"
                  name="DataProfileInputRequestsColumnNullRatioProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnNullRatioProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnPatternProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest.Inputs[OLE DB Destination Input]"
                  name="DataProfileInputRequestsColumnPatternProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnPatternProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnStatisticsProfileRequest]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest.Inputs[OLE DB Destination Input]"
                  name="DataProfileInputRequestsColumnStatisticsProfileRequest"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileInputRequestsColumnStatisticsProfileRequest]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnNullRatioProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnNullRatioProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnNullRatioProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnPatternProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnStatisticsProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnStatisticsProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnStatisticsProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfile]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnValueDistributionProfile"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfile]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution.Inputs[OLE DB Destination Input]"
                  name="DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfilerInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput.Inputs[OLE DB Destination Input]"
                  name="DataProfilerInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataProfilerInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[DataSource]"
                  endId="Package\Foreach Loop Container\Data Flow Task\DataSource.Inputs[OLE DB Destination Input]"
                  name="DataSource"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[DataSource]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[TableInput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\TableInput.Inputs[OLE DB Destination Input]"
                  name="TableInput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableInput]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[TableOutput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\TableOutput.Inputs[OLE DB Destination Input]"
                  name="TableOutput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[TableOutput]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7C9300B3-C389-4FFB-B132-125B1D89CF66}"
          DTS:ObjectName="{7C9300B3-C389-4FFB-B132-125B1D89CF66}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::vCurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="150,49" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="437,185"
          Size="437,228"
          Id="Package\Foreach Loop Container"
          TopLeft="167,181" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Script Component"
          TopLeft="3310,5.49999999999955" />
        <NodeLayout
          Size="140,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnInput"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="147,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnOutput"
          TopLeft="206,107.5" />
        <NodeLayout
          Size="262,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest"
          TopLeft="413.5,107.5" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest"
          TopLeft="736,107.5" />
        <NodeLayout
          Size="335,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest"
          TopLeft="1140,107.5" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest"
          TopLeft="1536,107.5" />
        <NodeLayout
          Size="348,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile"
          TopLeft="1939.5,107.5" />
        <NodeLayout
          Size="296,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile"
          TopLeft="2348.5,107.5" />
        <NodeLayout
          Size="434,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution"
          TopLeft="2705.5,107.5" />
        <NodeLayout
          Size="382,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns"
          TopLeft="3200.5,107.5" />
        <NodeLayout
          Size="303,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile"
          TopLeft="3643,107.5" />
        <NodeLayout
          Size="304,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile"
          TopLeft="4006.5,107.499999999999" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput"
          TopLeft="4371.5,107.499999999999" />
        <NodeLayout
          Size="342,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile"
          TopLeft="4592.5,107.499999999999" />
        <NodeLayout
          Size="422,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution"
          TopLeft="4995.5,107.499999999999" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Data Flow Task\TableInput"
          TopLeft="5478,107.499999999999" />
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataSource"
          TopLeft="5710,107.499999999999" />
        <NodeLayout
          Size="388,42"
          Id="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest"
          TopLeft="5903.5,107.499999999999" />
        <NodeLayout
          Size="137,42"
          Id="Package\Foreach Loop Container\Data Flow Task\TableOutput"
          TopLeft="6352,107.499999999999" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnInput]"
          TopLeft="3321.75,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3246.25,60.0000000000005"
              Start="0,0"
              End="-3246.25,52.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,3.56032171581775" />
                  <mssgle:CubicBezierSegment
                    Point1="0,3.56032171581775"
                    Point2="0,7.56032171581775"
                    Point3="-4,7.56032171581775" />
                  <mssgle:LineSegment
                    End="-3242.25,7.56032171581775" />
                  <mssgle:CubicBezierSegment
                    Point1="-3242.25,7.56032171581775"
                    Point2="-3246.25,7.56032171581775"
                    Point3="-3246.25,11.5603217158178" />
                  <mssgle:LineSegment
                    End="-3246.25,52.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1652.48390625,12.5603217158178,58.7178125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnOutput]"
          TopLeft="3329.5,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3050,60.0000000000005"
              Start="0,0"
              End="-3050,52.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.58415841584167" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.58415841584167"
                    Point2="0,11.5841584158417"
                    Point3="-4,11.5841584158417" />
                  <mssgle:LineSegment
                    End="-3046,11.5841584158417" />
                  <mssgle:CubicBezierSegment
                    Point1="-3046,11.5841584158417"
                    Point2="-3050,11.5841584158417"
                    Point3="-3050,15.5841584158417" />
                  <mssgle:LineSegment
                    End="-3050,52.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1557.70390625,16.5841584158417,65.4078125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ColumnValueDistributionProfileRequest]"
          TopLeft="3337.25,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2792.75,60.0000000000003"
              Start="0,0"
              End="-2792.75,52.5000000000003">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.0344827586208" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.0344827586208"
                    Point2="0,15.0344827586208"
                    Point3="-4,15.0344827586208" />
                  <mssgle:LineSegment
                    End="-2788.75,15.0344827586208" />
                  <mssgle:CubicBezierSegment
                    Point1="-2788.75,15.0344827586208"
                    Point2="-2792.75,15.0344827586208"
                    Point3="-2792.75,19.0344827586208" />
                  <mssgle:LineSegment
                    End="-2792.75,52.5000000000003" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1482.88390625,20.0344827586208,173.0178125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnNullRatioProfileRequest]"
          TopLeft="3345,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2437.5,60.0000000000003"
              Start="0,0"
              End="-2437.5,52.5000000000003">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0257510729615" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0257510729615"
                    Point2="0,18.0257510729615"
                    Point3="-4,18.0257510729615" />
                  <mssgle:LineSegment
                    End="-2433.5,18.0257510729615" />
                  <mssgle:CubicBezierSegment
                    Point1="-2433.5,18.0257510729615"
                    Point2="-2437.5,18.0257510729615"
                    Point3="-2437.5,22.0257510729615" />
                  <mssgle:LineSegment
                    End="-2437.5,52.5000000000003" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1343.31638671875,23.0257510729615,249.1327734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnPatternProfileRequest]"
          TopLeft="3352.75,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2045.25,60.0000000000003"
              Start="0,0"
              End="-2045.25,52.5000000000003">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6438631790746" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6438631790746"
                    Point2="0,20.6438631790746"
                    Point3="-4,20.6438631790746" />
                  <mssgle:LineSegment
                    End="-2041.25,20.6438631790746" />
                  <mssgle:CubicBezierSegment
                    Point1="-2041.25,20.6438631790746"
                    Point2="-2045.25,20.6438631790746"
                    Point3="-2045.25,24.6438631790746" />
                  <mssgle:LineSegment
                    End="-2045.25,52.5000000000003" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1143.45638671875,25.6438631790746,241.6627734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnStatisticsProfileRequest]"
          TopLeft="3360.5,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1653,60.0000000000002"
              Start="0,0"
              End="-1653,52.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9545454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9545454545455"
                    Point2="0,22.9545454545455"
                    Point3="-4,22.9545454545455" />
                  <mssgle:LineSegment
                    End="-1649,22.9545454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="-1649,22.9545454545455"
                    Point2="-1653,22.9545454545455"
                    Point3="-1653,26.9545454545455" />
                  <mssgle:LineSegment
                    End="-1653,52.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-950.86638671875,27.9545454545455,248.7327734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfile]"
          TopLeft="3368.25,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1254.75,60.0000000000002"
              Start="0,0"
              End="-1254.75,52.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0089445438284" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0089445438284"
                    Point2="0,25.0089445438284"
                    Point3="-4,25.0089445438284" />
                  <mssgle:LineSegment
                    End="-1250.75,25.0089445438284" />
                  <mssgle:CubicBezierSegment
                    Point1="-1250.75,25.0089445438284"
                    Point2="-1254.75,25.0089445438284"
                    Point3="-1254.75,29.0089445438284" />
                  <mssgle:LineSegment
                    End="-1254.75,52.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-754.01634765625,30.0089445438284,253.2826953125,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfile]"
          TopLeft="3376,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-879.5,60.0000000000001"
              Start="0,0"
              End="-879.5,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8474576271187" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8474576271187"
                    Point2="0,26.8474576271187"
                    Point3="-4,26.8474576271187" />
                  <mssgle:LineSegment
                    End="-875.5,26.8474576271187" />
                  <mssgle:CubicBezierSegment
                    Point1="-875.5,26.8474576271187"
                    Point2="-879.5,26.8474576271187"
                    Point3="-879.5,30.8474576271187" />
                  <mssgle:LineSegment
                    End="-879.5,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-541.94134765625,31.8474576271187,204.3826953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution]"
          TopLeft="3383.75,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-461.25,60.0000000000001"
              Start="0,0"
              End="-461.25,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5024154589373" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5024154589373"
                    Point2="0,28.5024154589373"
                    Point3="-4,28.5024154589373" />
                  <mssgle:LineSegment
                    End="-457.25,28.5024154589373" />
                  <mssgle:CubicBezierSegment
                    Point1="-457.25,28.5024154589373"
                    Point2="-461.25,28.5024154589373"
                    Point3="-461.25,32.5024154589373" />
                  <mssgle:LineSegment
                    End="-461.25,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-397.47193359375,33.5024154589373,333.6938671875,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns]"
          TopLeft="3391.5,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-142.402578125,20.39404296875,284.80515625,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnStatisticsProfile]"
          TopLeft="3399.25,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="395.25,60"
              Start="0,0"
              End="395.25,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5024154589372"
                    Point2="0,28.5024154589372"
                    Point3="4,28.5024154589372" />
                  <mssgle:LineSegment
                    End="391.25,28.5024154589372" />
                  <mssgle:CubicBezierSegment
                    Point1="391.25,28.5024154589372"
                    Point2="395.25,28.5024154589372"
                    Point3="395.25,32.5024154589372" />
                  <mssgle:LineSegment
                    End="395.25,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.89865234375,33.5024154589372,211.4526953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnNullRatioProfile]"
          TopLeft="3407,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="751.5,59.9999999999999"
              Start="0,0"
              End="751.5,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8474576271186"
                    Point2="0,26.8474576271186"
                    Point3="4,26.8474576271186" />
                  <mssgle:LineSegment
                    End="747.5,26.8474576271186" />
                  <mssgle:CubicBezierSegment
                    Point1="747.5,26.8474576271186"
                    Point2="751.5,26.8474576271186"
                    Point3="751.5,30.8474576271186" />
                  <mssgle:LineSegment
                    End="751.5,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="269.82365234375,31.8474576271186,211.8526953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfilerInput]"
          TopLeft="3414.75,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1036.75,59.9999999999999"
              Start="0,0"
              End="1036.75,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0089445438282" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0089445438282"
                    Point2="0,25.0089445438282"
                    Point3="4,25.0089445438282" />
                  <mssgle:LineSegment
                    End="1032.75,25.0089445438282" />
                  <mssgle:CubicBezierSegment
                    Point1="1032.75,25.0089445438282"
                    Point2="1036.75,25.0089445438282"
                    Point3="1036.75,29.0089445438282" />
                  <mssgle:LineSegment
                    End="1036.75,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="479.97861328125,30.0089445438282,76.7927734375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfile]"
          TopLeft="3422.5,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1341,59.9999999999999"
              Start="0,0"
              End="1341,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9545454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9545454545454"
                    Point2="0,22.9545454545454"
                    Point3="4,22.9545454545454" />
                  <mssgle:LineSegment
                    End="1337,22.9545454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="1337,22.9545454545454"
                    Point2="1341,22.9545454545454"
                    Point3="1341,26.9545454545454" />
                  <mssgle:LineSegment
                    End="1341,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="546.81865234375,27.9545454545454,247.3626953125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution]"
          TopLeft="3430.25,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1776.25,59.9999999999998"
              Start="0,0"
              End="1776.25,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6438631790744" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6438631790744"
                    Point2="0,20.6438631790744"
                    Point3="4,20.6438631790744" />
                  <mssgle:LineSegment
                    End="1772.25,20.6438631790744" />
                  <mssgle:CubicBezierSegment
                    Point1="1772.25,20.6438631790744"
                    Point2="1776.25,20.6438631790744"
                    Point3="1776.25,24.6438631790744" />
                  <mssgle:LineSegment
                    End="1776.25,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="727.19806640625,25.6438631790744,321.8538671875,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[TableInput]"
          TopLeft="3438,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2125.5,59.9999999999998"
              Start="0,0"
              End="2125.5,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0257510729613" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0257510729613"
                    Point2="0,18.0257510729613"
                    Point3="4,18.0257510729613" />
                  <mssgle:LineSegment
                    End="2121.5,18.0257510729613" />
                  <mssgle:CubicBezierSegment
                    Point1="2121.5,18.0257510729613"
                    Point2="2125.5,18.0257510729613"
                    Point3="2125.5,22.0257510729613" />
                  <mssgle:LineSegment
                    End="2125.5,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1037.78751953125,23.0257510729613,49.9249609375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataSource]"
          TopLeft="3445.75,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2330.75,59.9999999999998"
              Start="0,0"
              End="2330.75,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.0344827586206" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.0344827586206"
                    Point2="0,15.0344827586206"
                    Point3="4,15.0344827586206" />
                  <mssgle:LineSegment
                    End="2326.75,15.0344827586206" />
                  <mssgle:CubicBezierSegment
                    Point1="2326.75,15.0344827586206"
                    Point2="2330.75,15.0344827586206"
                    Point3="2330.75,19.0344827586206" />
                  <mssgle:LineSegment
                    End="2330.75,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1139.53865234375,20.0344827586206,51.6726953125,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[DataProfileInputRequestsColumnLengthDistributionProfileRequest]"
          TopLeft="3453.5,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2644,59.9999999999997"
              Start="0,0"
              End="2644,52.4999999999997">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.58415841584152" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.58415841584152"
                    Point2="0,11.5841584158415"
                    Point3="4,11.5841584158415" />
                  <mssgle:LineSegment
                    End="2640,11.5841584158415" />
                  <mssgle:CubicBezierSegment
                    Point1="2640,11.5841584158415"
                    Point2="2644,11.5841584158415"
                    Point3="2644,15.5841584158415" />
                  <mssgle:LineSegment
                    End="2644,52.4999999999997" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1176.71861328125,16.5841584158415,290.5627734375,11.7119140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[TableOutput]"
          TopLeft="3461.25,47.4999999999995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2959.25,59.9999999999997"
              Start="0,0"
              End="2959.25,52.4999999999997">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,3.56032171581765" />
                  <mssgle:CubicBezierSegment
                    Point1="0,3.56032171581765"
                    Point2="0,7.56032171581765"
                    Point3="4,7.56032171581765" />
                  <mssgle:LineSegment
                    End="2955.25,7.56032171581765" />
                  <mssgle:CubicBezierSegment
                    Point1="2955.25,7.56032171581765"
                    Point2="2959.25,7.56032171581765"
                    Point3="2959.25,11.5603217158177" />
                  <mssgle:LineSegment
                    End="2959.25,52.4999999999997" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1451.31751953125,12.5603217158177,56.6149609375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnOutput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ColumnValueDistributionProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnNullRatioProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnPatternProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnStatisticsProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnLengthDistributionProfileLengthDistribution">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnPatternProfileTopRegexPatterns">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnStatisticsProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnNullRatioProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfilerInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfile">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileOutputProfilesColumnValueDistributionProfileValueDistribution">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\TableInput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataSource">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\DataProfileInputRequestsColumnLengthDistributionProfileRequest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\TableOutput">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>